// Generated by psc-bundle 0.8.0.0
var PS = { };
(function(exports) {
  /* global exports, ace */
  "use strict";

  // module Ace

  exports.ace = ace;

  exports.editImpl = function(el, self) {
      return function() {
          return self.edit(el);
      };
  };
 
})(PS["Ace"] = PS["Ace"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Bind -----------------------------------------------------------------------

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Semiring -------------------------------------------------------------------

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  //- Ord ------------------------------------------------------------------------

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };

  //- Bounded --------------------------------------------------------------------

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;            

  //- BooleanAlgebra -------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    /* jshint bitwise: false */
    return n === (n | 0) ? n + ".0" : n.toString();
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\a": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      function (c, i) { // jshint ignore:line
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\a": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Prelude"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Ord = function (__superclass_Prelude$dotEq_0, compare) {
      this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
      this.compare = compare;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var Show = function (show) {
      this.show = show;
  };
  var $hash = function (x) {
      return function (f) {
          return f(x);
      };
  };
  var zero = function (dict) {
      return dict.zero;
  };
  var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
  var unit = {};
  var top = function (dict) {
      return dict.top;
  }; 
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Prelude line 841, column 1 - line 845, column 1: " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };             
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (dictApplicative) {
      return pure(dictApplicative);
  };
  var otherwise = true;
  var one = function (dict) {
      return dict.one;
  };
  var not = function (dict) {
      return dict.not;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (dictFunctor) {
      return map(dictFunctor);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var ordInt = new Ord(function () {
      return eqInt;
  }, unsafeCompare);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (dictEq) {
      return eq(dictEq);
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var $less = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var $80 = compare(dictOrd)(a1)(a2);
              if ($80 instanceof LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var $less$eq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var $81 = compare(dictOrd)(a1)(a2);
              if ($81 instanceof GT) {
                  return false;
              };
              return true;
          };
      };
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedInt = new Bounded($foreign.bottomInt, $foreign.topInt);
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var $div$eq = function (dictEq) {
      return function (x) {
          return function (y) {
              return not(booleanAlgebraBoolean)($eq$eq(dictEq)(x)(y));
          };
      };
  };
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (dictBind) {
      return bind(dictBind);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (dictApply) {
      return apply(dictApply);
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return $less$times$greater(dictApplicative["__superclass_Prelude.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (dictSemigroup) {
      return append(dictSemigroup);
  };
  var $less$greater = function (dictSemigroup) {
      return append(dictSemigroup);
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return bind(dictMonad["__superclass_Prelude.Bind_1"]())(f)(function (v) {
                  return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v1) {
                      return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  var monadArray = new Monad(function () {
      return applicativeArray;
  }, function () {
      return bindArray;
  });
  var bindArray = new Bind(function () {
      return applyArray;
  }, $foreign.arrayBind);
  var applyArray = new Apply(function () {
      return functorArray;
  }, ap(monadArray));
  var applicativeArray = new Applicative(function () {
      return applyArray;
  }, function (x) {
      return [ x ];
  });
  var add = function (dict) {
      return dict.add;
  };
  var $plus = function (dictSemiring) {
      return add(dictSemiring);
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["Show"] = Show;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Ord"] = Ord;
  exports["Eq"] = Eq;
  exports["Semiring"] = Semiring;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["unsafeCompare"] = unsafeCompare;
  exports["<="] = $less$eq;
  exports["<"] = $less;
  exports["compare"] = compare;
  exports["/="] = $div$eq;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["+"] = $plus;
  exports["one"] = one;
  exports["mul"] = mul;
  exports["zero"] = zero;
  exports["add"] = add;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["#"] = $hash;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["applyArray"] = applyArray;
  exports["applicativeArray"] = applicativeArray;
  exports["bindArray"] = bindArray;
  exports["monadArray"] = monadArray;
  exports["semigroupArray"] = semigroupArray;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
  exports["eqInt"] = eqInt;
  exports["eqString"] = eqString;
  exports["ordInt"] = ordInt;
  exports["boundedBoolean"] = boundedBoolean;
  exports["boundedInt"] = boundedInt;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.runFn1 = function (fn) {
    return function (a) {
      return fn(a);
    };
  };

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
 
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  exports["runFn4"] = $foreign.runFn4;
  exports["runFn1"] = $foreign.runFn1;;
 
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Ace"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function = PS["Data.Function"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Ace_Types = PS["Ace.Types"];
  var edit = function (el) {
      return function (self) {
          return $foreign.editImpl(el, self);
      };
  };
  exports["edit"] = edit;
  exports["ace"] = $foreign.ace;;
 
})(PS["Ace"] = PS["Ace"] || {});
(function(exports) {
  /* global exports, ace */
  "use strict";

  exports.onImpl = function(event, fn, self) {
      return function() {
          return self.on(event, function(e) {
              fn(e)();
          });
      };
  };

  exports.setValueImpl = function(text, self) {
      return function() {
          return self.setValue(text);
      };
  };

  exports.setModeImpl = function(mode, self) {
      return function() {
          return self.setMode(mode);
      };
  };

  exports.getValue = function(self) {
      return function() {
          return self.getValue();
      };
  };

  exports.removeMarkerImpl = function(markerId, self) {
      return function() {
          return self.removeMarker(markerId);
      };
  };

  function create(text, mode) {
      return function() {
          var EditSession = ace.require('ace/edit_session').EditSession;
          return new EditSession(text, mode);
      };
  }                                    
 
})(PS["Ace.EditSession"] = PS["Ace.EditSession"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.ST

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeSTRef = function (ref) {
    return function (a) {
      return function () {
        /* jshint boss: true */
        return ref.value = a;
      };
    };
  };
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["writeSTRef"] = $foreign.writeSTRef;
  exports["readSTRef"] = $foreign.readSTRef;
  exports["newSTRef"] = $foreign.newSTRef;;
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array.ST

  exports.runSTArray = function (f) {
    return f;
  };

  exports.emptySTArray = function () {
    return [];
  };

  exports.pushAllSTArray = function (xs) {
    return function (as) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.alt = alt;
  };                                         
  var alt = function (dict) {
      return dict.alt;
  };
  var $less$bar$greater = function (dictAlt) {
      return alt(dictAlt);
  };
  exports["Alt"] = Alt;
  exports["<|>"] = $less$bar$greater;
  exports["alt"] = alt;;
 
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Prelude["const"](false));
  var isJust = maybe(false)(Prelude["const"](true));
  var functorMaybe = new Prelude.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Prelude["<$>"](functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Prelude.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["isNothing"] = isNothing;
  exports["isJust"] = isJust;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var pushSTArray = function (arr) {
      return function (a) {
          return $foreign.pushAllSTArray(arr)([ a ]);
      };
  };
  exports["pushSTArray"] = pushSTArray;
  exports["emptySTArray"] = $foreign.emptySTArray;
  exports["runSTArray"] = $foreign.runSTArray;;
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Ace.EditSession"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Ace_Types = PS["Ace.Types"];
  var setValue = function (text) {
      return function (self) {
          return $foreign.setValueImpl(text, self);
      };
  };
  var setMode = function (mode$prime) {
      return function (self) {
          return $foreign.setModeImpl(mode$prime, self);
      };
  };
  var removeMarker = function (markerId) {
      return function (self) {
          return $foreign.removeMarkerImpl(markerId, self);
      };
  };
  var onChange = function (self) {
      return function (fn) {
          return $foreign.onImpl("change", function (v) {
              return fn;
          }, self);
      };
  };
  exports["setValue"] = setValue;
  exports["setMode"] = setMode;
  exports["removeMarker"] = removeMarker;
  exports["onChange"] = onChange;
  exports["getValue"] = $foreign.getValue;;
 
})(PS["Ace.EditSession"] = PS["Ace.EditSession"] || {});
(function(exports) {
  /* global exports, Editor */
  "use strict";

  // module Ace.Editor

  function effize(method) {
      return function() {
          var me = arguments[arguments.length - 1],
              args = Array.prototype.slice.call(arguments, 0, -1);
          return function() {
              return me[method].apply(me, args);
          };
      };
  }

  function effGet(field) {
      return function(self) {
          return function() {
              return self[field];
          };
      };
  }

  function effSet(field) {
      return function(val, self) {
          return function() {
              self[field] = val;
          };
      };
  }                                             
  exports.getSession = effize("getSession");
  exports.setThemeImpl = effize("setTheme");
 
})(PS["Ace.Editor"] = PS["Ace.Editor"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Ace.Editor"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Ace_Types = PS["Ace.Types"];
  var setTheme = function (theme) {
      return function (self) {
          return $foreign.setThemeImpl(theme, self);
      };
  };
  exports["setTheme"] = setTheme;
  exports["getSession"] = $foreign.getSession;;
 
})(PS["Ace.Editor"] = PS["Ace.Editor"] || {});
(function(exports) {
  /* global exports, ace */
  "use strict";

  // module Ace.Range

  function effize(method) {
      return function() {
          var me = arguments[arguments.length - 1],
              args = Array.prototype.slice.call(arguments, 0, -1);
          return function() {
              return me[method].apply(me, args);
          };
      };
  }

  function effGet(field) {
      return function(self) {
          return function() {
              return self[field];
          };
      };
  } 

  exports.createImpl = function(startRow, startColumn, endRow, endColumn) {
      return function() {
          var Range = ace.require('ace/range').Range;
          return new Range(startRow, startColumn, endRow, endColumn);
      };
  };
 
})(PS["Ace.Range"] = PS["Ace.Range"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Ace.Range"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function = PS["Data.Function"];
  var Ace_Types = PS["Ace.Types"];
  var create = function (startRow) {
      return function (startColumn) {
          return function (endRow) {
              return function (endColumn) {
                  return $foreign.createImpl(startRow, startColumn, endRow, endColumn);
              };
          };
      };
  };
  exports["create"] = create;;
 
})(PS["Ace.Range"] = PS["Ace.Range"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Backend

  exports.nullWebGLFramebuffer = null;
})(PS["Backend"] = PS["Backend"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["error"] = $foreign.error;
  exports["log"] = $foreign.log;;
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Maybe.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
 
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Maybe.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];     
  var fromJust = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return v.value0;
      };
      if (v instanceof Data_Maybe.Nothing) {
          return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
      };
      throw new Error("Failed pattern match at Data.Maybe.Unsafe line 10, column 1 - line 11, column 1: " + [ v.constructor.name ]);
  };
  exports["fromJust"] = fromJust;;
 
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Auto generated: don't change manually, use purescript-webgl-generator to modify!!
  /* global exports */

  // module Graphics.WebGLRaw

    "use strict";
    
      exports.getExtension_ = function (name)
      {return function ()
     {var res = gl.getExtension(name);
      if (res === undefined){
        throw "Undefined in  getExtension"};
      return res;}
     ;}
    
      exports.activeTexture_ = function (texture)
      {return function ()
     {gl.activeTexture(texture);}
     ;}
    
      exports.attachShader_ = function (program,shader)
      {return function ()
     {gl.attachShader(program,shader);}
     ;}
    
      exports.bindBuffer_ = function (target,buffer)
      {return function ()
     {gl.bindBuffer(target,buffer);}
     ;}
    
      exports.bindFramebuffer_ = function (target,framebuffer)
      {return function ()
     {gl.bindFramebuffer(target,framebuffer);}
     ;}
    
      exports.bindTexture_ = function (target,texture)
      {return function ()
     {gl.bindTexture(target,texture);}
     ;}
    
      exports.blendColor_ = function (red,green,blue,alpha)
      {return function ()
     {gl.blendColor(red,green,blue,alpha);}
     ;}
    
      exports.blendEquationSeparate_ = function (modeRGB,modeAlpha)
      {return function ()
     {gl.blendEquationSeparate(modeRGB,modeAlpha);}
     ;}
    
      exports.blendFuncSeparate_ = function (srcRGB,dstRGB,srcAlpha,dstAlpha)
      {return function ()
     {gl.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);}
     ;}
    
      exports.clear_ = function (mask)
      {return function ()
     {gl.clear(mask);}
     ;}
    
      exports.clearColor_ = function (red,green,blue,alpha)
      {return function ()
     {gl.clearColor(red,green,blue,alpha);}
     ;}
    
      exports.clearDepth_ = function (depth)
      {return function ()
     {gl.clearDepth(depth);}
     ;}
    
      exports.clearStencil_ = function (s)
      {return function ()
     {gl.clearStencil(s);}
     ;}
    
      exports.colorMask_ = function (red,green,blue,alpha)
      {return function ()
     {gl.colorMask(red,green,blue,alpha);}
     ;}
    
      exports.compileShader_ = function (shader)
      {return function ()
     {gl.compileShader(shader);}
     ;}
    
      exports.createBuffer_ = function () 
      {return function ()
     {var res = gl.createBuffer();
      if (res === undefined){
        throw "Undefined in  createBuffer"};
      return res;}
     ;}
    
      exports.createFramebuffer_ = function () 
      {return function ()
     {var res = gl.createFramebuffer();
      if (res === undefined){
        throw "Undefined in  createFramebuffer"};
      return res;}
     ;}
    
      exports.createProgram_ = function () 
      {return function ()
     {var res = gl.createProgram();
      if (res === undefined){
        throw "Undefined in  createProgram"};
      return res;}
     ;}
    
      exports.createShader_ = function (type)
      {return function ()
     {var res = gl.createShader(type);
      if (res === undefined){
        throw "Undefined in  createShader"};
      return res;}
     ;}
    
      exports.createTexture_ = function () 
      {return function ()
     {var res = gl.createTexture();
      if (res === undefined){
        throw "Undefined in  createTexture"};
      return res;}
     ;}
    
      exports.cullFace_ = function (mode)
      {return function ()
     {gl.cullFace(mode);}
     ;}
    
      exports.deleteProgram_ = function (program)
      {return function ()
     {gl.deleteProgram(program);}
     ;}
    
      exports.deleteShader_ = function (shader)
      {return function ()
     {gl.deleteShader(shader);}
     ;}
    
      exports.depthFunc_ = function (func)
      {return function ()
     {gl.depthFunc(func);}
     ;}
    
      exports.depthMask_ = function (flag)
      {return function ()
     {gl.depthMask(flag);}
     ;}
    
      exports.disable_ = function (cap)
      {return function ()
     {gl.disable(cap);}
     ;}
    
      exports.disableVertexAttribArray_ = function (index)
      {return function ()
     {gl.disableVertexAttribArray(index);}
     ;}
    
      exports.drawArrays_ = function (mode,first,count)
      {return function ()
     {gl.drawArrays(mode,first,count);}
     ;}
    
      exports.drawElements_ = function (mode,count,type,offset)
      {return function ()
     {gl.drawElements(mode,count,type,offset);}
     ;}
    
      exports.enable_ = function (cap)
      {return function ()
     {gl.enable(cap);}
     ;}
    
      exports.enableVertexAttribArray_ = function (index)
      {return function ()
     {gl.enableVertexAttribArray(index);}
     ;}
    
      exports.framebufferTexture2D_ = function (target,attachment,textarget,texture,level)
      {return function ()
     {gl.framebufferTexture2D(target,attachment,textarget,texture,level);}
     ;}
    
      exports.frontFace_ = function (mode)
      {return function ()
     {gl.frontFace(mode);}
     ;}
    
      exports.generateMipmap_ = function (target)
      {return function ()
     {gl.generateMipmap(target);}
     ;}
    
      exports.getAttribLocation_ = function (program,name)
      {return function ()
     {var res = gl.getAttribLocation(program,name);
      if (res === undefined){
        throw "Undefined in  getAttribLocation"};
      return res;}
     ;}
    
      exports.getProgramParameter_ = function (program,pname)
      {return function ()
     {var res = gl.getProgramParameter(program,pname);
      if (res === undefined){
        throw "Undefined in  getProgramParameter"};
      return res;}
     ;}
    
      exports.getProgramInfoLog_ = function (program)
      {return function ()
     {var res = gl.getProgramInfoLog(program);
      if (res === undefined){
        throw "Undefined in  getProgramInfoLog"};
      return res;}
     ;}
    
      exports.getShaderParameter_ = function (shader,pname)
      {return function ()
     {var res = gl.getShaderParameter(shader,pname);
      if (res === undefined){
        throw "Undefined in  getShaderParameter"};
      return res;}
     ;}
    
      exports.getShaderInfoLog_ = function (shader)
      {return function ()
     {var res = gl.getShaderInfoLog(shader);
      if (res === undefined){
        throw "Undefined in  getShaderInfoLog"};
      return res;}
     ;}
    
      exports.getUniformLocation_ = function (program,name)
      {return function ()
     {var res = gl.getUniformLocation(program,name);
      if (res === undefined){
        throw "Undefined in  getUniformLocation"};
      return res;}
     ;}
    
      exports.lineWidth_ = function (width)
      {return function ()
     {gl.lineWidth(width);}
     ;}
    
      exports.linkProgram_ = function (program)
      {return function ()
     {gl.linkProgram(program);}
     ;}
    
      exports.pixelStorei_ = function (pname,param)
      {return function ()
     {gl.pixelStorei(pname,param);}
     ;}
    
      exports.polygonOffset_ = function (factor,units)
      {return function ()
     {gl.polygonOffset(factor,units);}
     ;}
    
      exports.shaderSource_ = function (shader,source)
      {return function ()
     {gl.shaderSource(shader,source);}
     ;}
    
      exports.texParameteri_ = function (target,pname,param)
      {return function ()
     {gl.texParameteri(target,pname,param);}
     ;}
    
      exports.uniform1fv_ = function (location,v)
      {return function ()
     {gl.uniform1fv(location,v);}
     ;}
    
      exports.uniform1i_ = function (location,x)
      {return function ()
     {gl.uniform1i(location,x);}
     ;}
    
      exports.uniform1iv_ = function (location,v)
      {return function ()
     {gl.uniform1iv(location,v);}
     ;}
    
      exports.uniform2fv_ = function (location,v)
      {return function ()
     {gl.uniform2fv(location,v);}
     ;}
    
      exports.uniform2iv_ = function (location,v)
      {return function ()
     {gl.uniform2iv(location,v);}
     ;}
    
      exports.uniform3fv_ = function (location,v)
      {return function ()
     {gl.uniform3fv(location,v);}
     ;}
    
      exports.uniform3iv_ = function (location,v)
      {return function ()
     {gl.uniform3iv(location,v);}
     ;}
    
      exports.uniform4fv_ = function (location,v)
      {return function ()
     {gl.uniform4fv(location,v);}
     ;}
    
      exports.uniform4iv_ = function (location,v)
      {return function ()
     {gl.uniform4iv(location,v);}
     ;}
    
      exports.uniformMatrix2fv_ = function (location,transpose,value)
      {return function ()
     {gl.uniformMatrix2fv(location,transpose,value);}
     ;}
    
      exports.uniformMatrix3fv_ = function (location,transpose,value)
      {return function ()
     {gl.uniformMatrix3fv(location,transpose,value);}
     ;}
    
      exports.uniformMatrix4fv_ = function (location,transpose,value)
      {return function ()
     {gl.uniformMatrix4fv(location,transpose,value);}
     ;}
    
      exports.useProgram_ = function (program)
      {return function ()
     {gl.useProgram(program);}
     ;}
    
      exports.vertexAttrib1f_ = function (indx,x)
      {return function ()
     {gl.vertexAttrib1f(indx,x);}
     ;}
    
      exports.vertexAttrib2f_ = function (indx,x,y)
      {return function ()
     {gl.vertexAttrib2f(indx,x,y);}
     ;}
    
      exports.vertexAttrib3f_ = function (indx,x,y,z)
      {return function ()
     {gl.vertexAttrib3f(indx,x,y,z);}
     ;}
    
      exports.vertexAttrib4f_ = function (indx,x,y,z,w)
      {return function ()
     {gl.vertexAttrib4f(indx,x,y,z,w);}
     ;}
    
      exports.vertexAttribPointer_ = function (indx,size,type,normalized,stride,offset)
      {return function ()
     {gl.vertexAttribPointer(indx,size,type,normalized,stride,offset);}
     ;}
    
      exports.viewport_ = function (x,y,width,height)
      {return function ()
     {gl.viewport(x,y,width,height);}
     ;}
    
 
})(PS["Graphics.WebGLRaw"] = PS["Graphics.WebGLRaw"] || {});
(function(exports) {
  /* global exports */

  // module Control.Monad.Eff.WebGL


      "use strict";

      exports.runWebGl_ = function (f) {
        return f;
    };
 
})(PS["Control.Monad.Eff.WebGL"] = PS["Control.Monad.Eff.WebGL"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.WebGL"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["runWebGl_"] = $foreign.runWebGl_;;
 
})(PS["Control.Monad.Eff.WebGL"] = PS["Control.Monad.Eff.WebGL"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Graphics.WebGLRaw"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];     
  var _ZERO = 0;       
  var _VERTEX_SHADER = 35633;  
  var _UNSIGNED_SHORT_5_6_5 = 33635;
  var _UNSIGNED_SHORT_5_5_5_1 = 32820;
  var _UNSIGNED_SHORT_4_4_4_4 = 32819;
  var _UNSIGNED_SHORT = 5123;
  var _UNSIGNED_BYTE = 5121;
  var _UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
  var _UNPACK_FLIP_Y_WEBGL = 37440;
  var _UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
  var _UNPACK_ALIGNMENT = 3317;
  var _TRIANGLE_STRIP = 5;
  var _TRIANGLE_FAN = 6;
  var _TRIANGLES = 4;
  var _TEXTURE_WRAP_T = 10243;
  var _TEXTURE_WRAP_S = 10242;
  var _TEXTURE_MIN_FILTER = 10241;
  var _TEXTURE_MAG_FILTER = 10240;
  var _TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
  var _TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
  var _TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
  var _TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
  var _TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
  var _TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
  var _TEXTURE_CUBE_MAP = 34067;  
  var _TEXTURE_2D = 3553;
  var _TEXTURE0 = 33984;         
  var _STENCIL_TEST = 2960;       
  var _STENCIL_BUFFER_BIT = 1024; 
  var _STATIC_DRAW = 35044;
  var _SRC_COLOR = 768;
  var _SRC_ALPHA_SATURATE = 776;
  var _SRC_ALPHA = 770;
  var _SHORT = 5122; 
  var _RGBA = 6408;   
  var _RGB = 6407;    
  var _REPEAT = 10497;              
  var _POLYGON_OFFSET_FILL = 32823;  
  var _POINTS = 0;
  var _PACK_ALIGNMENT = 3333;
  var _ONE_MINUS_SRC_COLOR = 769;
  var _ONE_MINUS_SRC_ALPHA = 771;
  var _ONE_MINUS_DST_COLOR = 775;
  var _ONE_MINUS_DST_ALPHA = 773;
  var _ONE_MINUS_CONSTANT_COLOR = 32770;
  var _ONE_MINUS_CONSTANT_ALPHA = 32772;
  var _ONE = 1;     
  var _NOTEQUAL = 517;
  var _NONE = 0;     
  var _NEVER = 512;
  var _NEAREST_MIPMAP_NEAREST = 9984;
  var _NEAREST_MIPMAP_LINEAR = 9986;
  var _NEAREST = 9728;
  var _MIRRORED_REPEAT = 33648;                 
  var _LUMINANCE_ALPHA = 6410;
  var _LUMINANCE = 6409; 
  var _LINK_STATUS = 35714;
  var _LINE_STRIP = 3;
  var _LINE_LOOP = 2;
  var _LINES = 1;
  var _LINEAR_MIPMAP_NEAREST = 9985;
  var _LINEAR_MIPMAP_LINEAR = 9987;
  var _LINEAR = 9729;
  var _LESS = 513;
  var _LEQUAL = 515;     
  var _GREATER = 516;
  var _GEQUAL = 518;                
  var _FUNC_SUBTRACT = 32778;
  var _FUNC_REVERSE_SUBTRACT = 32779;
  var _FUNC_ADD = 32774;     
  var _FRONT = 1028;                              
  var _FRAMEBUFFER = 36160;
  var _FRAGMENT_SHADER = 35632;
  var _FLOAT = 5126;  
  var _EQUAL = 514;                         
  var _ELEMENT_ARRAY_BUFFER = 34963;
  var _DST_COLOR = 774;
  var _DST_ALPHA = 772;       
  var _DEPTH_TEST = 2929;        
  var _DEPTH_COMPONENT = 6402;  
  var _DEPTH_BUFFER_BIT = 256;
  var _DEPTH_ATTACHMENT = 36096;
  var _CW = 2304;            
  var _CULL_FACE = 2884;          
  var _CONSTANT_COLOR = 32769;
  var _CONSTANT_ALPHA = 32771;            
  var _COMPILE_STATUS = 35713;  
  var _COLOR_BUFFER_BIT = 16384;
  var _COLOR_ATTACHMENT0 = 36064;
  var _CLAMP_TO_EDGE = 33071;
  var _CCW = 2305;
  var _BYTE = 5120;        
  var _BLEND = 3042;
  var _BACK = 1029;                 
  var _ARRAY_BUFFER = 34962;
  var _ALWAYS = 519;     
  var _ALPHA = 6406;
  exports["_UNPACK_COLORSPACE_CONVERSION_WEBGL"] = _UNPACK_COLORSPACE_CONVERSION_WEBGL;
  exports["_UNPACK_PREMULTIPLY_ALPHA_WEBGL"] = _UNPACK_PREMULTIPLY_ALPHA_WEBGL;
  exports["_UNPACK_FLIP_Y_WEBGL"] = _UNPACK_FLIP_Y_WEBGL;
  exports["_NONE"] = _NONE;
  exports["_DEPTH_ATTACHMENT"] = _DEPTH_ATTACHMENT;
  exports["_COLOR_ATTACHMENT0"] = _COLOR_ATTACHMENT0;
  exports["_FRAMEBUFFER"] = _FRAMEBUFFER;
  exports["_COMPILE_STATUS"] = _COMPILE_STATUS;
  exports["_MIRRORED_REPEAT"] = _MIRRORED_REPEAT;
  exports["_CLAMP_TO_EDGE"] = _CLAMP_TO_EDGE;
  exports["_REPEAT"] = _REPEAT;
  exports["_TEXTURE0"] = _TEXTURE0;
  exports["_TEXTURE_CUBE_MAP_NEGATIVE_Z"] = _TEXTURE_CUBE_MAP_NEGATIVE_Z;
  exports["_TEXTURE_CUBE_MAP_POSITIVE_Z"] = _TEXTURE_CUBE_MAP_POSITIVE_Z;
  exports["_TEXTURE_CUBE_MAP_NEGATIVE_Y"] = _TEXTURE_CUBE_MAP_NEGATIVE_Y;
  exports["_TEXTURE_CUBE_MAP_POSITIVE_Y"] = _TEXTURE_CUBE_MAP_POSITIVE_Y;
  exports["_TEXTURE_CUBE_MAP_NEGATIVE_X"] = _TEXTURE_CUBE_MAP_NEGATIVE_X;
  exports["_TEXTURE_CUBE_MAP_POSITIVE_X"] = _TEXTURE_CUBE_MAP_POSITIVE_X;
  exports["_TEXTURE_CUBE_MAP"] = _TEXTURE_CUBE_MAP;
  exports["_TEXTURE_WRAP_T"] = _TEXTURE_WRAP_T;
  exports["_TEXTURE_WRAP_S"] = _TEXTURE_WRAP_S;
  exports["_TEXTURE_MIN_FILTER"] = _TEXTURE_MIN_FILTER;
  exports["_TEXTURE_MAG_FILTER"] = _TEXTURE_MAG_FILTER;
  exports["_LINEAR_MIPMAP_LINEAR"] = _LINEAR_MIPMAP_LINEAR;
  exports["_NEAREST_MIPMAP_LINEAR"] = _NEAREST_MIPMAP_LINEAR;
  exports["_LINEAR_MIPMAP_NEAREST"] = _LINEAR_MIPMAP_NEAREST;
  exports["_NEAREST_MIPMAP_NEAREST"] = _NEAREST_MIPMAP_NEAREST;
  exports["_LINEAR"] = _LINEAR;
  exports["_NEAREST"] = _NEAREST;
  exports["_ALWAYS"] = _ALWAYS;
  exports["_GEQUAL"] = _GEQUAL;
  exports["_NOTEQUAL"] = _NOTEQUAL;
  exports["_GREATER"] = _GREATER;
  exports["_LEQUAL"] = _LEQUAL;
  exports["_EQUAL"] = _EQUAL;
  exports["_LESS"] = _LESS;
  exports["_NEVER"] = _NEVER;
  exports["_LINK_STATUS"] = _LINK_STATUS;
  exports["_VERTEX_SHADER"] = _VERTEX_SHADER;
  exports["_FRAGMENT_SHADER"] = _FRAGMENT_SHADER;
  exports["_UNSIGNED_SHORT_5_6_5"] = _UNSIGNED_SHORT_5_6_5;
  exports["_UNSIGNED_SHORT_5_5_5_1"] = _UNSIGNED_SHORT_5_5_5_1;
  exports["_UNSIGNED_SHORT_4_4_4_4"] = _UNSIGNED_SHORT_4_4_4_4;
  exports["_LUMINANCE_ALPHA"] = _LUMINANCE_ALPHA;
  exports["_LUMINANCE"] = _LUMINANCE;
  exports["_RGBA"] = _RGBA;
  exports["_RGB"] = _RGB;
  exports["_ALPHA"] = _ALPHA;
  exports["_DEPTH_COMPONENT"] = _DEPTH_COMPONENT;
  exports["_FLOAT"] = _FLOAT;
  exports["_UNSIGNED_SHORT"] = _UNSIGNED_SHORT;
  exports["_SHORT"] = _SHORT;
  exports["_UNSIGNED_BYTE"] = _UNSIGNED_BYTE;
  exports["_BYTE"] = _BYTE;
  exports["_PACK_ALIGNMENT"] = _PACK_ALIGNMENT;
  exports["_UNPACK_ALIGNMENT"] = _UNPACK_ALIGNMENT;
  exports["_CCW"] = _CCW;
  exports["_CW"] = _CW;
  exports["_POLYGON_OFFSET_FILL"] = _POLYGON_OFFSET_FILL;
  exports["_DEPTH_TEST"] = _DEPTH_TEST;
  exports["_STENCIL_TEST"] = _STENCIL_TEST;
  exports["_BLEND"] = _BLEND;
  exports["_CULL_FACE"] = _CULL_FACE;
  exports["_TEXTURE_2D"] = _TEXTURE_2D;
  exports["_BACK"] = _BACK;
  exports["_FRONT"] = _FRONT;
  exports["_STATIC_DRAW"] = _STATIC_DRAW;
  exports["_ELEMENT_ARRAY_BUFFER"] = _ELEMENT_ARRAY_BUFFER;
  exports["_ARRAY_BUFFER"] = _ARRAY_BUFFER;
  exports["_ONE_MINUS_CONSTANT_ALPHA"] = _ONE_MINUS_CONSTANT_ALPHA;
  exports["_CONSTANT_ALPHA"] = _CONSTANT_ALPHA;
  exports["_ONE_MINUS_CONSTANT_COLOR"] = _ONE_MINUS_CONSTANT_COLOR;
  exports["_CONSTANT_COLOR"] = _CONSTANT_COLOR;
  exports["_FUNC_REVERSE_SUBTRACT"] = _FUNC_REVERSE_SUBTRACT;
  exports["_FUNC_SUBTRACT"] = _FUNC_SUBTRACT;
  exports["_FUNC_ADD"] = _FUNC_ADD;
  exports["_SRC_ALPHA_SATURATE"] = _SRC_ALPHA_SATURATE;
  exports["_ONE_MINUS_DST_COLOR"] = _ONE_MINUS_DST_COLOR;
  exports["_DST_COLOR"] = _DST_COLOR;
  exports["_ONE_MINUS_DST_ALPHA"] = _ONE_MINUS_DST_ALPHA;
  exports["_DST_ALPHA"] = _DST_ALPHA;
  exports["_ONE_MINUS_SRC_ALPHA"] = _ONE_MINUS_SRC_ALPHA;
  exports["_SRC_ALPHA"] = _SRC_ALPHA;
  exports["_ONE_MINUS_SRC_COLOR"] = _ONE_MINUS_SRC_COLOR;
  exports["_SRC_COLOR"] = _SRC_COLOR;
  exports["_ONE"] = _ONE;
  exports["_ZERO"] = _ZERO;
  exports["_TRIANGLE_FAN"] = _TRIANGLE_FAN;
  exports["_TRIANGLE_STRIP"] = _TRIANGLE_STRIP;
  exports["_TRIANGLES"] = _TRIANGLES;
  exports["_LINE_STRIP"] = _LINE_STRIP;
  exports["_LINE_LOOP"] = _LINE_LOOP;
  exports["_LINES"] = _LINES;
  exports["_POINTS"] = _POINTS;
  exports["_COLOR_BUFFER_BIT"] = _COLOR_BUFFER_BIT;
  exports["_STENCIL_BUFFER_BIT"] = _STENCIL_BUFFER_BIT;
  exports["_DEPTH_BUFFER_BIT"] = _DEPTH_BUFFER_BIT;
  exports["viewport_"] = $foreign.viewport_;
  exports["vertexAttribPointer_"] = $foreign.vertexAttribPointer_;
  exports["vertexAttrib4f_"] = $foreign.vertexAttrib4f_;
  exports["vertexAttrib3f_"] = $foreign.vertexAttrib3f_;
  exports["vertexAttrib2f_"] = $foreign.vertexAttrib2f_;
  exports["vertexAttrib1f_"] = $foreign.vertexAttrib1f_;
  exports["useProgram_"] = $foreign.useProgram_;
  exports["uniformMatrix4fv_"] = $foreign.uniformMatrix4fv_;
  exports["uniformMatrix3fv_"] = $foreign.uniformMatrix3fv_;
  exports["uniformMatrix2fv_"] = $foreign.uniformMatrix2fv_;
  exports["uniform4iv_"] = $foreign.uniform4iv_;
  exports["uniform4fv_"] = $foreign.uniform4fv_;
  exports["uniform3iv_"] = $foreign.uniform3iv_;
  exports["uniform3fv_"] = $foreign.uniform3fv_;
  exports["uniform2iv_"] = $foreign.uniform2iv_;
  exports["uniform2fv_"] = $foreign.uniform2fv_;
  exports["uniform1iv_"] = $foreign.uniform1iv_;
  exports["uniform1i_"] = $foreign.uniform1i_;
  exports["uniform1fv_"] = $foreign.uniform1fv_;
  exports["texParameteri_"] = $foreign.texParameteri_;
  exports["shaderSource_"] = $foreign.shaderSource_;
  exports["polygonOffset_"] = $foreign.polygonOffset_;
  exports["pixelStorei_"] = $foreign.pixelStorei_;
  exports["linkProgram_"] = $foreign.linkProgram_;
  exports["lineWidth_"] = $foreign.lineWidth_;
  exports["getUniformLocation_"] = $foreign.getUniformLocation_;
  exports["getShaderInfoLog_"] = $foreign.getShaderInfoLog_;
  exports["getShaderParameter_"] = $foreign.getShaderParameter_;
  exports["getProgramInfoLog_"] = $foreign.getProgramInfoLog_;
  exports["getProgramParameter_"] = $foreign.getProgramParameter_;
  exports["getAttribLocation_"] = $foreign.getAttribLocation_;
  exports["generateMipmap_"] = $foreign.generateMipmap_;
  exports["frontFace_"] = $foreign.frontFace_;
  exports["framebufferTexture2D_"] = $foreign.framebufferTexture2D_;
  exports["enableVertexAttribArray_"] = $foreign.enableVertexAttribArray_;
  exports["enable_"] = $foreign.enable_;
  exports["drawElements_"] = $foreign.drawElements_;
  exports["drawArrays_"] = $foreign.drawArrays_;
  exports["disableVertexAttribArray_"] = $foreign.disableVertexAttribArray_;
  exports["disable_"] = $foreign.disable_;
  exports["depthMask_"] = $foreign.depthMask_;
  exports["depthFunc_"] = $foreign.depthFunc_;
  exports["deleteShader_"] = $foreign.deleteShader_;
  exports["deleteProgram_"] = $foreign.deleteProgram_;
  exports["cullFace_"] = $foreign.cullFace_;
  exports["createTexture_"] = $foreign.createTexture_;
  exports["createShader_"] = $foreign.createShader_;
  exports["createProgram_"] = $foreign.createProgram_;
  exports["createFramebuffer_"] = $foreign.createFramebuffer_;
  exports["createBuffer_"] = $foreign.createBuffer_;
  exports["compileShader_"] = $foreign.compileShader_;
  exports["colorMask_"] = $foreign.colorMask_;
  exports["clearStencil_"] = $foreign.clearStencil_;
  exports["clearDepth_"] = $foreign.clearDepth_;
  exports["clearColor_"] = $foreign.clearColor_;
  exports["clear_"] = $foreign.clear_;
  exports["blendFuncSeparate_"] = $foreign.blendFuncSeparate_;
  exports["blendEquationSeparate_"] = $foreign.blendEquationSeparate_;
  exports["blendColor_"] = $foreign.blendColor_;
  exports["bindTexture_"] = $foreign.bindTexture_;
  exports["bindFramebuffer_"] = $foreign.bindFramebuffer_;
  exports["bindBuffer_"] = $foreign.bindBuffer_;
  exports["attachShader_"] = $foreign.attachShader_;
  exports["activeTexture_"] = $foreign.activeTexture_;
  exports["getExtension_"] = $foreign.getExtension_;;
 
})(PS["Graphics.WebGLRaw"] = PS["Graphics.WebGLRaw"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["throwException"] = $foreign.throwException;
  exports["error"] = $foreign.error;;
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Ref

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
 
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s), 
                  value: Prelude.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["writeRef"] = $foreign.writeRef;
  exports["readRef"] = $foreign.readRef;
  exports["newRef"] = $foreign.newRef;;
 
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var when = function (dictMonad) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
              };
              throw new Error("Failed pattern match at Control.Monad line 8, column 1 - line 9, column 1: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  exports["when"] = when;;
 
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var $eq$less$less = function (dictBind) {
      return function (f) {
          return function (m) {
              return Prelude[">>="](dictBind)(m)(f);
          };
      };
  };
  exports["=<<"] = $eq$less$less;;
 
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var $times$greater = function (dictApply) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictBooleanAlgebra) {
      return new Prelude.Semigroup(function (v) {
          return function (v1) {
              return Prelude.conj(dictBooleanAlgebra)(v)(v1);
          };
      });
  };
  var runConj = function (v) {
      return v;
  };
  var monoidConj = function (dictBooleanAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictBooleanAlgebra);
      }, Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Conj"] = Conj;
  exports["runConj"] = runConj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;;
 
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictBooleanAlgebra) {
      return new Prelude.Semigroup(function (v) {
          return function (v1) {
              return Prelude.disj(dictBooleanAlgebra)(v)(v1);
          };
      });
  };
  var runDisj = function (v) {
      return v;
  };
  var monoidDisj = function (dictBooleanAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictBooleanAlgebra);
      }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;;
 
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($161) {
                  return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f($161));
              })(Prelude.pure(dictApplicative)(Prelude.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Prelude.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictBooleanAlgebra) {
          return function (p) {
              return function ($164) {
                  return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($165) {
                      return Data_Monoid_Disj.Disj(p($165));
                  })($164));
              };
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictBooleanAlgebra) {
          return function (p) {
              return function ($168) {
                  return Data_Monoid_Conj.runConj(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra))(function ($169) {
                      return Data_Monoid_Conj.Conj(p($169));
                  })($168));
              };
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["all"] = all;
  exports["any"] = any;
  exports["for_"] = for_;
  exports["traverse_"] = traverse_;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var stateL = function (v) {
      return v;
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return function (tma) {
              return traverse(dictTraversable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Prelude.apply(dictApplicative["__superclass_Prelude.Apply_0"]()))(Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  }; 
  var functorStateL = new Prelude.Functor(function (f) {
      return function (k) {
          return function (s) {
              var $78 = stateL(k)(s);
              return {
                  accum: $78.accum, 
                  value: f($78.value)
              };
          };
      };
  });
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  }; 
  var applyStateL = new Prelude.Apply(function () {
      return functorStateL;
  }, function (f) {
      return function (x) {
          return function (s) {
              var $87 = stateL(f)(s);
              var $88 = stateL(x)($87.accum);
              return {
                  accum: $88.accum, 
                  value: $87.value($88.value)
              };
          };
      };
  });
  var applicativeStateL = new Prelude.Applicative(function () {
      return applyStateL;
  }, function (a) {
      return function (s) {
          return {
              accum: s, 
              value: a
          };
      };
  });
  var mapAccumL = function (dictTraversable) {
      return function (f) {
          return function (s0) {
              return function (xs) {
                  return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
                      return function (s) {
                          return f(s)(a);
                      };
                  })(xs))(s0);
              };
          };
      };
  };
  var scanl = function (dictTraversable) {
      return function (f) {
          return function (b0) {
              return function (xs) {
                  return (mapAccumL(dictTraversable)(function (b) {
                      return function (a) {
                          var b$prime = f(b)(a);
                          return {
                              accum: b$prime, 
                              value: b$prime
                          };
                      };
                  })(b0)(xs)).value;
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["mapAccumL"] = mapAccumL;
  exports["scanl"] = scanl;
  exports["for"] = $$for;
  exports["sequenceDefault"] = sequenceDefault;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  // jshint maxparams: 2
  exports._fmapStrMap = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (m0.hasOwnProperty(k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  // jshint maxparams: 1
  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          function g (k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (m.hasOwnProperty(k)) {
              mz = bind(mz)(g(k));
            }
          }
          return mz;
        };
      };
    };
  };

  // jshint maxparams: 1
  exports.all = function (f) {
    return function (m) {
      for (var k in m) {
        if (m.hasOwnProperty(k) && !f(k)(m[k])) return false;
      }
      return true;
    };
  };

  exports.size = function (m) {
    var s = 0;
    for (var k in m) {
      if (m.hasOwnProperty(k)) {
        ++s;
      }
    }
    return s;
  };

  // jshint maxparams: 4
  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function _collect (f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports._collect = _collect;

  exports.keys = Object.keys || _collect(function (k) {
    return function () { return k; };
  });
 
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var showTuple = function (dictShow) {
      return function (dictShow1) {
          return new Prelude.Show(function (v) {
              return "Tuple (" + (Prelude.show(dictShow)(v.value0) + (") (" + (Prelude.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  var functorTuple = new Prelude.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });
  var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              return f(v.value1);
          };
      };
  }, function (f) {
      return function (z) {
          return function (v) {
              return f(z)(v.value1);
          };
      };
  }, function (f) {
      return function (z) {
          return function (v) {
              return f(v.value1)(z);
          };
      };
  });
  var traversableTuple = new Data_Traversable.Traversable(function () {
      return foldableTuple;
  }, function () {
      return functorTuple;
  }, function (dictApplicative) {
      return function (v) {
          return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(v.value1);
      };
  }, function (dictApplicative) {
      return function (f) {
          return function (v) {
              return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
          };
      };
  });
  exports["Tuple"] = Tuple;
  exports["uncurry"] = uncurry;
  exports["showTuple"] = showTuple;
  exports["functorTuple"] = functorTuple;
  exports["foldableTuple"] = foldableTuple;
  exports["traversableTuple"] = traversableTuple;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];     
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function (f) {
      return function (b) {
          return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
              var v = Data_Array_ST.emptySTArray();
              var v1 = Control_Monad_ST.newSTRef(b)();
              (function () {
                  while (!(function __do() {
                      var v2 = Control_Monad_ST.readSTRef(v1)();
                      var $12 = f(v2);
                      if ($12 instanceof Data_Maybe.Nothing) {
                          return true;
                      };
                      if ($12 instanceof Data_Maybe.Just) {
                          Data_Array_ST.pushSTArray(v)($12.value0.value0)();
                          Control_Monad_ST.writeSTRef(v1)($12.value0.value1)();
                          return false;
                      };
                      throw new Error("Failed pattern match at Data.Unfoldable line 29, column 1 - line 49, column 1: " + [ $12.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return v;
          }));
      };
  });
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;;
 
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];     
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var uncons = function (v) {
      if (v instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Cons) {
          return new Data_Maybe.Just({
              head: v.value0, 
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List line 270, column 1 - line 271, column 1: " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List line 251, column 1 - line 252, column 1: " + [ v.constructor.name ]);
  };
  var singleton = function (a) {
      return new Cons(a, Nil.value);
  };
  var showList = function (dictShow) {
      return new Prelude.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          if (v instanceof Cons) {
              return "Cons (" + (Prelude.show(dictShow)(v.value0) + (") (" + (Prelude.show(showList(dictShow))(v.value1) + ")")));
          };
          throw new Error("Failed pattern match: " + [ v.constructor.name ]);
      });
  };
  var semigroupList = new Prelude.Semigroup(function (v) {
      return function (ys) {
          if (v instanceof Nil) {
              return ys;
          };
          if (v instanceof Cons) {
              return new Cons(v.value0, Prelude["<>"](semigroupList)(v.value1)(ys));
          };
          throw new Error("Failed pattern match: " + [ v.constructor.name, ys.constructor.name ]);
      };
  });
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return acc;
                  };
                  if (v instanceof Cons) {
                      var __tco_acc = new Cons(v.value0, acc);
                      var __tco_v = v.value1;
                      acc = __tco_acc;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 368, column 1 - line 369, column 1: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  })();
  var zipWith = function (f) {
      return function (xs) {
          return function (ys) {
              var go = function (__copy_v) {
                  return function (__copy_v1) {
                      return function (__copy_acc) {
                          var v = __copy_v;
                          var v1 = __copy_v1;
                          var acc = __copy_acc;
                          tco: while (true) {
                              if (v instanceof Nil) {
                                  return acc;
                              };
                              if (v1 instanceof Nil) {
                                  return acc;
                              };
                              if (v instanceof Cons && v1 instanceof Cons) {
                                  var __tco_v = v.value1;
                                  var __tco_v1 = v1.value1;
                                  var __tco_acc = new Cons(f(v.value0)(v1.value0), acc);
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  acc = __tco_acc;
                                  continue tco;
                              };
                              throw new Error("Failed pattern match at Data.List line 654, column 1 - line 655, column 1: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                          };
                      };
                  };
              };
              return reverse(go(xs)(ys)(Nil.value));
          };
      };
  };
  var zip = zipWith(Data_Tuple.Tuple.create);
  var range = function (start) {
      return function (end) {
          if (start === end) {
              return singleton(start);
          };
          if (Prelude.otherwise) {
              var go = function (__copy_s) {
                  return function (__copy_e) {
                      return function (__copy_step) {
                          return function (__copy_rest) {
                              var s = __copy_s;
                              var e = __copy_e;
                              var step = __copy_step;
                              var rest = __copy_rest;
                              tco: while (true) {
                                  if (s === e) {
                                      return new Cons(s, rest);
                                  };
                                  if (Prelude.otherwise) {
                                      var __tco_s = s + step | 0;
                                      var __tco_e = e;
                                      var __tco_step = step;
                                      var __tco_rest = new Cons(s, rest);
                                      s = __tco_s;
                                      e = __tco_e;
                                      step = __tco_step;
                                      rest = __tco_rest;
                                      continue tco;
                                  };
                                  throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                              };
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var $209 = start > end;
                  if ($209) {
                      return 1;
                  };
                  if (!$209) {
                      return -1;
                  };
                  throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ $209.constructor.name ]);
              })())(Nil.value);
          };
          throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ start.constructor.name, end.constructor.name ]);
      };
  };                     
  var head = function (v) {
      if (v instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List line 236, column 1 - line 237, column 1: " + [ v.constructor.name ]);
  };
  var functorList = new Prelude.Functor(function (f) {
      return function (lst) {
          var go = function (__copy_v) {
              return function (__copy_acc) {
                  var v = __copy_v;
                  var acc = __copy_acc;
                  tco: while (true) {
                      if (v instanceof Nil) {
                          return acc;
                      };
                      if (v instanceof Cons) {
                          var __tco_v = v.value1;
                          var __tco_acc = new Cons(f(v.value0), acc);
                          v = __tco_v;
                          acc = __tco_acc;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 731, column 1 - line 738, column 1: " + [ v.constructor.name, acc.constructor.name ]);
                  };
              };
          };
          return reverse(go(lst)(Nil.value));
      };
  });
  var fromList = function (dictUnfoldable) {
      return toUnfoldable(dictUnfoldable);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
  };
  var toList = function (dictFoldable) {
      return fromFoldable(dictFoldable);
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($365) {
                  return Prelude.append(dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f($365));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, (function () {
      var go = function (__copy_v) {
          return function (__copy_b) {
              return function (__copy_v1) {
                  var v = __copy_v;
                  var b = __copy_b;
                  var v1 = __copy_v1;
                  tco: while (true) {
                      if (v1 instanceof Nil) {
                          return b;
                      };
                      if (v1 instanceof Cons) {
                          var __tco_v = v;
                          var __tco_b = v(b)(v1.value0);
                          var __tco_v1 = v1.value1;
                          v = __tco_v;
                          b = __tco_b;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
                  };
              };
          };
      };
      return go;
  })(), function (v) {
      return function (b) {
          return function (v1) {
              if (v1 instanceof Nil) {
                  return b;
              };
              if (v1 instanceof Cons) {
                  return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
              };
              throw new Error("Failed pattern match: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
          };
      };
  });   
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (dictApplicative) {
      return function (v) {
          if (v instanceof Nil) {
              return Prelude.pure(dictApplicative)(Nil.value);
          };
          if (v instanceof Cons) {
              return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v.value0))(Data_Traversable.sequence(traversableList)(dictApplicative)(v.value1));
          };
          throw new Error("Failed pattern match: " + [ v.constructor.name ]);
      };
  }, function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Nil) {
                  return Prelude.pure(dictApplicative)(Nil.value);
              };
              if (v1 instanceof Cons) {
                  return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v(v1.value0)))(Data_Traversable.traverse(traversableList)(dictApplicative)(v)(v1.value1));
              };
              throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var filter = function (p) {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return reverse(acc);
                  };
                  if (v instanceof Cons) {
                      if (p(v.value0)) {
                          var __tco_acc = new Cons(v.value0, acc);
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                      if (Prelude.otherwise) {
                          var __tco_acc = acc;
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                  };
                  throw new Error("Failed pattern match at Data.List line 391, column 1 - line 392, column 1: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  };                                                       
  var applyList = new Prelude.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(v.value0)(v1))(Prelude["<*>"](applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Prelude.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["fromList"] = fromList;
  exports["toList"] = toList;
  exports["zip"] = zip;
  exports["zipWith"] = zipWith;
  exports["filter"] = filter;
  exports["reverse"] = reverse;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports["range"] = range;
  exports["singleton"] = singleton;
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["showList"] = showList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["traversableList"] = traversableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;;
 
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap.ST

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
 
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["poke"] = $foreign.poke;
  exports["new"] = $foreign["new"];;
 
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_List = PS["Data.List"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];     
  var values = function ($38) {
      return Data_List.toList(Data_Foldable.foldableArray)($foreign._collect(function (v) {
          return function (v1) {
              return v1;
          };
      })($38));
  };
  var toList = function ($39) {
      return Data_List.toList(Data_Foldable.foldableArray)($foreign._collect(Data_Tuple.Tuple.create)($39));
  };
  var thawST = $foreign._copyEff;
  var showStrMap = function (dictShow) {
      return new Prelude.Show(function (m) {
          return "fromList " + Prelude.show(Data_List.showList(Data_Tuple.showTuple(Prelude.showString)(dictShow)))(toList(m));
      });
  };
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var singleton = function (k) {
      return function (v) {
          return pureST(function __do() {
              var v1 = Data_StrMap_ST["new"]();
              Data_StrMap_ST.poke(v1)(k)(v)();
              return v1;
          });
      };
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              f(v)();
              return v;
          });
      };
  };
  var member = Data_Function.runFn4($foreign._lookup)(false)(Prelude["const"](true));
  var lookup = Data_Function.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var isSubmap = function (dictEq) {
      return function (m1) {
          return function (m2) {
              var f = function (k) {
                  return function (v) {
                      return $foreign._lookup(false, Prelude["=="](dictEq)(v), k, m2);
                  };
              };
              return $foreign.all(f)(m1);
          };
      };
  };
  var functorStrMap = new Prelude.Functor(function (f) {
      return function (m) {
          return $foreign._fmapStrMap(m, f);
      };
  });                                                         
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return pureST(function __do() {
              var v = Data_StrMap_ST["new"]();
              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                  return Data_StrMap_ST.poke(v)(v1.value0)(v1.value1);
              })();
              return v;
          });
      };
  };
  var fromList = fromFoldable(Data_List.foldableList);
  var foldM = function (dictMonad) {
      return function (f) {
          return function (z) {
              return $foreign._foldM(Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(z));
          };
      };
  };
  var union = function (m) {
      return mutate(function (s) {
          return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
      });
  };                                                                              
  var fold = $foreign._foldM(Prelude["#"]);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Prelude["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List.foldableList)(f)(z)(values(m));
          };
      };
  });
  var traversableStrMap = new Data_Traversable.Traversable(function () {
      return foldableStrMap;
  }, function () {
      return functorStrMap;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Prelude.id(Prelude.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return Data_Foldable.foldr(Data_List.foldableList)(function (x) {
                  return function (acc) {
                      return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                  };
              })(Prelude.pure(dictApplicative)($foreign.empty))(Prelude["<$>"](Data_List.functorList)(Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_List.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(dictApplicative)(f))(toList(ms))));
          };
      };
  });
  var eqStrMap = function (dictEq) {
      return new Prelude.Eq(function (m1) {
          return function (m2) {
              return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
          };
      });
  };
  exports["thawST"] = thawST;
  exports["foldM"] = foldM;
  exports["foldMap"] = foldMap;
  exports["fold"] = fold;
  exports["isSubmap"] = isSubmap;
  exports["union"] = union;
  exports["values"] = values;
  exports["member"] = member;
  exports["fromList"] = fromList;
  exports["fromFoldable"] = fromFoldable;
  exports["toList"] = toList;
  exports["lookup"] = lookup;
  exports["singleton"] = singleton;
  exports["functorStrMap"] = functorStrMap;
  exports["foldableStrMap"] = foldableStrMap;
  exports["traversableStrMap"] = traversableStrMap;
  exports["eqStrMap"] = eqStrMap;
  exports["showStrMap"] = showStrMap;
  exports["keys"] = $foreign.keys;
  exports["size"] = $foreign.size;;
 
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap.Unsafe

  exports.unsafeIndex = function (m) {
    return function (k) {
      return m[k];
    };
  };
 
})(PS["Data.StrMap.Unsafe"] = PS["Data.StrMap.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.StrMap.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_StrMap = PS["Data.StrMap"];
  exports["unsafeIndex"] = $foreign.unsafeIndex;;
 
})(PS["Data.StrMap.Unsafe"] = PS["Data.StrMap.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];     
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List.Nil.value;
      };
      if (v instanceof Two) {
          return Prelude["++"](Data_List.semigroupList)(values(v.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Prelude["++"](Data_List.semigroupList)(values(v.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(v.value2))(Prelude["++"](Data_List.semigroupList)(values(v.value3))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match: " + [ v.constructor.name ]);
  }; 
  var fromZipper = function (__copy_dictOrd) {
      return function (__copy_v) {
          return function (__copy_v1) {
              var dictOrd = __copy_dictOrd;
              var v = __copy_v;
              var v1 = __copy_v1;
              tco: while (true) {
                  if (v instanceof Data_List.Nil) {
                      return v1;
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof TwoLeft) {
                      var __tco_dictOrd = dictOrd;
                      var __tco_v = v.value1;
                      var __tco_v1 = new Two(v1, v.value0.value0, v.value0.value1, v.value0.value2);
                      dictOrd = __tco_dictOrd;
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof TwoRight) {
                      var __tco_dictOrd = dictOrd;
                      var __tco_v = v.value1;
                      var __tco_v1 = new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1);
                      dictOrd = __tco_dictOrd;
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof ThreeLeft) {
                      var __tco_dictOrd = dictOrd;
                      var __tco_v = v.value1;
                      var __tco_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                      dictOrd = __tco_dictOrd;
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof ThreeMiddle) {
                      var __tco_dictOrd = dictOrd;
                      var __tco_v = v.value1;
                      var __tco_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1, v.value0.value3, v.value0.value4, v.value0.value5);
                      dictOrd = __tco_dictOrd;
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof ThreeRight) {
                      var __tco_dictOrd = dictOrd;
                      var __tco_v = v.value1;
                      var __tco_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, v1);
                      dictOrd = __tco_dictOrd;
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
                  throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      };
  };
  var insert = function (dictOrd) {
      var up = function (__copy_v) {
          return function (__copy_v1) {
              var v = __copy_v;
              var v1 = __copy_v1;
              tco: while (true) {
                  if (v instanceof Data_List.Nil) {
                      return new Two(v1.value0, v1.value1, v1.value2, v1.value3);
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof TwoLeft) {
                      return fromZipper(dictOrd)(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, v.value0.value0, v.value0.value1, v.value0.value2));
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof TwoRight) {
                      return fromZipper(dictOrd)(v.value1)(new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0, v1.value1, v1.value2, v1.value3));
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof ThreeLeft) {
                      var __tco_v = v.value1;
                      var __tco_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2, v1.value3), v.value0.value0, v.value0.value1, new Two(v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5));
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof ThreeMiddle) {
                      var __tco_v = v.value1;
                      var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0), v1.value1, v1.value2, new Two(v1.value3, v.value0.value3, v.value0.value4, v.value0.value5));
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
                  if (v instanceof Data_List.Cons && v.value0 instanceof ThreeRight) {
                      var __tco_v = v.value1;
                      var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), v.value0.value4, v.value0.value5, new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                      v = __tco_v;
                      v1 = __tco_v1;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.Map line 150, column 1 - line 151, column 1: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      };
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy_v) {
                  return function (__copy_v1) {
                      var ctx = __copy_ctx;
                      var k = __copy_k;
                      var v = __copy_v;
                      var v1 = __copy_v1;
                      tco: while (true) {
                          if (v1 instanceof Leaf) {
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two && Prelude["=="](dictOrd["__superclass_Prelude.Eq_0"]())(k)(v1.value1)) {
                              return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                          };
                          if (v1 instanceof Two && Prelude["<"](dictOrd)(k)(v1.value1)) {
                              var __tco_ctx = new Data_List.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value0;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          if (v1 instanceof Two) {
                              var __tco_ctx = new Data_List.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value3;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          if (v1 instanceof Three && Prelude["=="](dictOrd["__superclass_Prelude.Eq_0"]())(k)(v1.value1)) {
                              return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                          };
                          if (v1 instanceof Three && Prelude["=="](dictOrd["__superclass_Prelude.Eq_0"]())(k)(v1.value4)) {
                              return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                          };
                          if (v1 instanceof Three && Prelude["<"](dictOrd)(k)(v1.value1)) {
                              var __tco_ctx = new Data_List.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value0;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          if (v1 instanceof Three && (Prelude["<"](dictOrd)(v1.value1)(k) && Prelude["<="](dictOrd)(k)(v1.value4))) {
                              var __tco_ctx = new Data_List.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value3;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          if (v1 instanceof Three) {
                              var __tco_ctx = new Data_List.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value6;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.Map line 150, column 1 - line 151, column 1: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, v1.constructor.name ]);
                      };
                  };
              };
          };
      };
      return down(Data_List.Nil.value);
  };
  var empty = Leaf.value;
  exports["values"] = values;
  exports["insert"] = insert;
  exports["empty"] = empty;;
 
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";          

  exports.floor = Math.floor;
 
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Math"];
  exports["floor"] = $foreign.floor;;
 
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var $$Math = PS["Math"];                                                                   
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x >= $foreign.toNumber(Prelude.top(Prelude.boundedInt))) {
          return Prelude.top(Prelude.boundedInt);
      };
      if (x <= $foreign.toNumber(Prelude.bottom(Prelude.boundedInt))) {
          return Prelude.bottom(Prelude.boundedInt);
      };
      if (Prelude.otherwise) {
          return Data_Maybe_Unsafe.fromJust(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int line 48, column 1 - line 49, column 1: " + [ x.constructor.name ]);
  };
  var floor = function ($2) {
      return unsafeClamp($$Math.floor($2));
  };
  exports["floor"] = floor;
  exports["fromNumber"] = fromNumber;
  exports["toNumber"] = $foreign.toNumber;;
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      for (var i = start, n = 0; i !== end; i += step) {
        result[n++] = i;
      }
      result[n] = i;
      return result;
    };
  };

  exports.replicate = function (n) {
    return function (v) {
      if (n < 1) return [];
      var r = new Array(n);
      for (var i = 0; i < n; i++) r[i] = v;
      return r;
    };
  };

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._updateAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i >= l.length) return nothing;
            var l1 = l.slice();
            l1[i] = a;
            return just(l1);
          };
        };
      };
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      /* jshint maxparams: 2 */
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];     
  var $colon = $foreign.cons;
  var $dot$dot = $foreign.range;
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unzip = $foreign["uncons'"](function (v) {
      return new Data_Tuple.Tuple([  ], [  ]);
  })(function (v) {
      return function (ts) {
          var $36 = unzip(ts);
          return new Data_Tuple.Tuple($colon(v.value0)($36.value0), $colon(v.value1)($36.value1));
      };
  });
  var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var take = $foreign.slice(0);
  var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (v) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var $46 = comp(x)(y);
                  if ($46 instanceof Prelude.GT) {
                      return 1;
                  };
                  if ($46 instanceof Prelude.EQ) {
                      return 0;
                  };
                  if ($46 instanceof Prelude.LT) {
                      return -1;
                  };
                  throw new Error("Failed pattern match at Data.Array line 409, column 3 - line 414, column 1: " + [ $46.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var replicateM = function (dictMonad) {
      return function (n) {
          return function (m) {
              if (n < 1) {
                  return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())([  ]);
              };
              if (Prelude.otherwise) {
                  return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictMonad["__superclass_Prelude.Applicative_0"]())($foreign.replicate(n)(m));
              };
              throw new Error("Failed pattern match at Data.Array line 136, column 1 - line 137, column 1: " + [ n.constructor.name, m.constructor.name ]);
          };
      };
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var nubBy = function (eq) {
      return function (xs) {
          var $49 = uncons(xs);
          if ($49 instanceof Data_Maybe.Just) {
              return $colon($49.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                  return !eq($49.value0.head)(y);
              })($49.value0.tail)));
          };
          if ($49 instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          throw new Error("Failed pattern match: " + [ $49.constructor.name ]);
      };
  };
  var nub = function (dictEq) {
      return nubBy(Prelude.eq(dictEq));
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var $bang$bang = index;
  var last = function (xs) {
      return $bang$bang(xs)($foreign.length(xs) - 1);
  };
  var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (v) {
          return new Data_Maybe.Just(x);
      };
  });
  var foldM = function (dictMonad) {
      return function (f) {
          return function (a) {
              return $foreign["uncons'"](function (v) {
                  return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(a);
              })(function (b) {
                  return function (bs) {
                      return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                          return foldM(dictMonad)(f)(a$prime)(bs);
                      });
                  };
              });
          };
      };
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
  exports["foldM"] = foldM;
  exports["unzip"] = unzip;
  exports["zip"] = zip;
  exports["nubBy"] = nubBy;
  exports["nub"] = nub;
  exports["take"] = take;
  exports["sortBy"] = sortBy;
  exports["concatMap"] = concatMap;
  exports["updateAt"] = updateAt;
  exports["findIndex"] = findIndex;
  exports["index"] = index;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["last"] = last;
  exports["head"] = head;
  exports[":"] = $colon;
  exports["null"] = $$null;
  exports["replicateM"] = replicateM;
  exports[".."] = $dot$dot;
  exports["filter"] = $foreign.filter;
  exports["concat"] = $foreign.concat;
  exports["length"] = $foreign.length;
  exports["replicate"] = $foreign.replicate;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Generic


  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipAll = function(f) {
      return function(xs) {
          return function(ys) {
              var l = xs.length < ys.length ? xs.length : ys.length;
              for (var i = 0; i < l; i++) {
                  if (!f(xs[i])(ys[i])) {
                      return false;
                  }
              }
              return true;
          };
      };
  };
 
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  }; 
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Prelude["<$>"](functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Prelude.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return v1;
          };
          return v;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  exports["joinWith"] = $foreign.joinWith;;
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $$Proxy = (function () {
      function Proxy() {

      };
      Proxy.value = new Proxy();
      return Proxy;
  })();
  exports["Proxy"] = $$Proxy;;
 
})(PS["Type.Proxy"] = PS["Type.Proxy"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Array = PS["Data.Array"];
  var Data_String = PS["Data.String"];
  var Type_Proxy = PS["Type.Proxy"];
  var Data_Monoid = PS["Data.Monoid"];     
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SRecord = (function () {
      function SRecord(value0) {
          this.value0 = value0;
      };
      SRecord.create = function (value0) {
          return new SRecord(value0);
      };
      return SRecord;
  })();
  var SNumber = (function () {
      function SNumber(value0) {
          this.value0 = value0;
      };
      SNumber.create = function (value0) {
          return new SNumber(value0);
      };
      return SNumber;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SChar = (function () {
      function SChar(value0) {
          this.value0 = value0;
      };
      SChar.create = function (value0) {
          return new SChar(value0);
      };
      return SChar;
  })();
  var SArray = (function () {
      function SArray(value0) {
          this.value0 = value0;
      };
      SArray.create = function (value0) {
          return new SArray(value0);
      };
      return SArray;
  })();
  var SigProd = (function () {
      function SigProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SigProd.create = function (value0) {
          return function (value1) {
              return new SigProd(value0, value1);
          };
      };
      return SigProd;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  }; 
  var genericShowPrec = function (d) {
      return function (v) {
          if (v instanceof SProd) {
              var showParen = function (v1) {
                  return function (x) {
                      if (!v1) {
                          return x;
                      };
                      if (v1) {
                          return "(" + (x + ")");
                      };
                      throw new Error("Failed pattern match at Data.Generic line 240, column 9 - line 241, column 9: " + [ v1.constructor.name, x.constructor.name ]);
                  };
              };
              var $67 = Data_Array["null"](v.value1);
              if ($67) {
                  return v.value0;
              };
              if (!$67) {
                  return showParen(d > 10)(v.value0 + (" " + Data_String.joinWith(" ")(Prelude.map(Prelude.functorArray)(function (x) {
                      return genericShowPrec(11)(x(Prelude.unit));
                  })(v.value1))));
              };
              throw new Error("Failed pattern match: " + [ $67.constructor.name ]);
          };
          if (v instanceof SRecord) {
              return "{" + (Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (x) {
                  return x.recLabel + (": " + genericShowPrec(0)(x.recValue(Prelude.unit)));
              })(v.value0)) + "}");
          };
          if (v instanceof SBoolean) {
              return Prelude.show(Prelude.showBoolean)(v.value0);
          };
          if (v instanceof SInt) {
              return Prelude.show(Prelude.showInt)(v.value0);
          };
          if (v instanceof SNumber) {
              return Prelude.show(Prelude.showNumber)(v.value0);
          };
          if (v instanceof SString) {
              return Prelude.show(Prelude.showString)(v.value0);
          };
          if (v instanceof SChar) {
              return Prelude.show(Prelude.showChar)(v.value0);
          };
          if (v instanceof SArray) {
              return "[" + (Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (x) {
                  return genericShowPrec(0)(x(Prelude.unit));
              })(v.value0)) + "]");
          };
          throw new Error("Failed pattern match: " + [ d.constructor.name, v.constructor.name ]);
      };
  }; 
  var gShow = function (dictGeneric) {
      return function ($193) {
          return genericShowPrec(0)(toSpine(dictGeneric)($193));
      };
  };
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };                                                         
  var eqGeneric = new Prelude.Eq(function (v) {
      return function (v1) {
          if (v instanceof SProd && v1 instanceof SProd) {
              return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(function (x) {
                  return function (y) {
                      return Prelude["=="](eqGeneric)(x(Prelude.unit))(y(Prelude.unit));
                  };
              })(v.value1)(v1.value1));
          };
          if (v instanceof SRecord && v1 instanceof SRecord) {
              var go = function (x) {
                  return function (y) {
                      return x.recLabel === y.recLabel && Prelude["=="](eqGeneric)(x.recValue(Prelude.unit))(y.recValue(Prelude.unit));
                  };
              };
              return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(go)(v.value0)(v1.value0);
          };
          if (v instanceof SInt && v1 instanceof SInt) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SNumber && v1 instanceof SNumber) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SBoolean && v1 instanceof SBoolean) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SChar && v1 instanceof SChar) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SString && v1 instanceof SString) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SArray && v1 instanceof SArray) {
              return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(function (x) {
                  return function (y) {
                      return Prelude["=="](eqGeneric)(x(Prelude.unit))(y(Prelude.unit));
                  };
              })(v.value0)(v1.value0);
          };
          return false;
      };
  });
  var gEq = function (dictGeneric) {
      return function (x) {
          return function (y) {
              return Prelude["=="](eqGeneric)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
          };
      };
  };
  var anyProxy = (Type_Proxy["Proxy"]).value;
  exports["SigProd"] = SigProd;
  exports["SProd"] = SProd;
  exports["SRecord"] = SRecord;
  exports["SNumber"] = SNumber;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["SChar"] = SChar;
  exports["SArray"] = SArray;
  exports["Generic"] = Generic;
  exports["gEq"] = gEq;
  exports["gShow"] = gShow;
  exports["fromSpine"] = fromSpine;
  exports["toSignature"] = toSignature;
  exports["toSpine"] = toSpine;
  exports["eqGeneric"] = eqGeneric;;
 
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // module Data.Argonaut.Core

  function id(x) {
      return x;
  } 

  exports._foldJson = function(isNull, isBool, isNum, isStr, isArr, isObj, j) {
      if (j == null) return isNull(null);
      else if (typeof j === 'boolean') return isBool(j);
      else if (typeof j === 'number') return isNum(j);
      else if (typeof j === 'string') return isStr(j);
      else if (Object.prototype.toString.call(j) === '[object Array]')
          return isArr(j);
      else return isObj(j);
  };

  function _compare(EQ, GT, LT, a, b) {
      function isArray(a) {
          return Object.prototype.toString.call(a) === '[object Array]';
      }
      function keys(o) {
          var a = [];
          for (var k in o) {
              a.push(k);
          }
          return a;
      }

      if (a == null) {
          if (b == null) return EQ;
          else return LT;
      } else if (typeof a === 'boolean') {
          if (typeof b === 'boolean') {
              // boolean / boolean
              if (a === b) return EQ;
              else if (a == false) return LT;
              else return GT;
          } else if (b == null) return GT;
          else return LT;
      } else if (typeof a === 'number') {
          if (typeof b === 'number') {
              if (a === b) return EQ;
              else if (a < b) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else return LT;
      } else if (typeof a === 'string') {
          if (typeof b === 'string') {
              if (a === b) return EQ;
              else if (a < b) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else return LT;
      } else if (isArray(a)) {
          if (isArray(b)) {
              for (var i = 0; i < Math.min(a.length, b.length); i++) {
                  var c = _compare(EQ, GT, LT, a[i], b[i]);
                
                  if (c !== EQ) return c;
              }
              if (a.length === b.length) return EQ;
              else if (a.length < b.length) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else if (typeof b === 'string') return GT;
          else return LT;
      }
      else {
          if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else if (typeof b === 'string') return GT;
          else if (isArray(b)) return GT;
          else {
              var akeys = keys(a);
              var bkeys = keys(b);
            
              var keys = akeys.concat(bkeys).sort();
            
              for (var i = 0; i < keys.length; i++) {
                  var k = keys[i];
                
                  if (a[k] === undefined) return LT;
                  else if (b[k] === undefined) return GT;
                
                  var c = _compare(EQ, GT, LT, a[k], b[k]);
                
                  if (c !== EQ) return c;
              }
            
              if (akeys.length === bkeys.length) return EQ;
              else if (akeys.length < bkeys.length) return LT;
              else return GT;
          }
      }
  };                          
 
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_StrMap = PS["Data.StrMap"];     
  var verbJsonType = function (def) {
      return function (f) {
          return function (fold) {
              return fold(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var isJsonType = verbJsonType(false)(Prelude["const"](true));
  var foldJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                        
  var foldJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(foldJsonObject);
  var foldJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                        
  var foldJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };
  var isNull = isJsonType(foldJsonNull);
  var foldJsonBoolean = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                          
  var foldJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(foldJsonArray);
  exports["toObject"] = toObject;
  exports["toArray"] = toArray;
  exports["isNull"] = isNull;
  exports["foldJsonObject"] = foldJsonObject;
  exports["foldJsonArray"] = foldJsonArray;
  exports["foldJsonString"] = foldJsonString;
  exports["foldJsonNumber"] = foldJsonNumber;
  exports["foldJsonBoolean"] = foldJsonBoolean;
  exports["foldJsonNull"] = foldJsonNull;;
 
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Type_Proxy = PS["Type.Proxy"];     
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  };
  var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Not a String"))(Data_Either.Right.create));
  var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number"))(Data_Either.Right.create));                     
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
  var decodeJsonInt = new DecodeJson(function (num) {
      var go = function (num1) {
          return Data_Maybe.maybe(new Data_Either.Left("Not an Int"))(Data_Either.Right.create)(Data_Int.fromNumber(num1));
      };
      return Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number"))(go)(num);
  });
  var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Not a Boolean"))(Data_Either.Right.create));
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };
  var decodeJsonMaybe = function (dictDecodeJson) {
      return new DecodeJson(function (j) {
          if (Data_Argonaut_Core.isNull(j)) {
              return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Prelude.otherwise) {
              return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(dictDecodeJson)(j)))(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value));
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode line 68, column 1 - line 73, column 1: " + [ j.constructor.name ]);
      });
  };
  var decodeMaybe = function (dictDecodeJson) {
      return function (json) {
          return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.pure(Data_Maybe.applicativeMaybe))(decodeJson(dictDecodeJson)(json));
      };
  };
  var decodeList = function (dictDecodeJson) {
      return new DecodeJson(function (json) {
          return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode List"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_List.toList(Data_Foldable.foldableArray))(Data_Argonaut_Core.toArray(json)))(function (v) {
              return Data_Traversable.traverse(Data_List.traversableList)(Data_Maybe.applicativeMaybe)(decodeMaybe(dictDecodeJson))(v);
          }));
      });
  };
  var decodeStrMap = function (dictDecodeJson) {
      return new DecodeJson(function (json) {
          return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode StrMap"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toObject(json))(function (v) {
              return Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Maybe.applicativeMaybe)(decodeMaybe(dictDecodeJson))(v);
          }));
      });
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson(function (json) {
          return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode Array"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (v) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(dictDecodeJson))(v);
          }));
      });
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeMaybe"] = decodeMaybe;
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonMaybe"] = decodeJsonMaybe;
  exports["decodeJsonBoolean"] = decodeJsonBoolean;
  exports["decodeJsonNumber"] = decodeJsonNumber;
  exports["decodeJsonInt"] = decodeJsonInt;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeStrMap"] = decodeStrMap;
  exports["decodeArray"] = decodeArray;
  exports["decodeList"] = decodeList;;
 
})(PS["Data.Argonaut.Decode"] = PS["Data.Argonaut.Decode"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var $dot$qmark = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Prelude.show(Prelude.showString)(s)))(Data_Argonaut_Decode.decodeJson(dictDecodeJson))(Data_StrMap.lookup(s)(o));
          };
      };
  };
  exports[".?"] = $dot$qmark;;
 
})(PS["Data.Argonaut.Combinators"] = PS["Data.Argonaut.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Argonaut_Combinators = PS["Data.Argonaut.Combinators"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Printer = PS["Data.Argonaut.Printer"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];     
  var V4 = (function () {
      function V4(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      V4.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new V4(value0, value1, value2, value3);
                  };
              };
          };
      };
      return V4;
  })();
  var V3 = (function () {
      function V3(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      V3.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new V3(value0, value1, value2);
              };
          };
      };
      return V3;
  })();
  var V2 = (function () {
      function V2(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      V2.create = function (value0) {
          return function (value1) {
              return new V2(value0, value1);
          };
      };
      return V2;
  })();
  var decodeJsonV4 = function (dictDecodeJson) {
      return new Data_Argonaut_Decode.DecodeJson(function (json) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
              return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(V4.create)(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("x")))(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("y")))(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("z")))(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("w"));
          });
      });
  };
  var decodeJsonV3 = function (dictDecodeJson) {
      return new Data_Argonaut_Decode.DecodeJson(function (json) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
              return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(V3.create)(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("x")))(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("y")))(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("z"));
          });
      });
  };
  var decodeJsonV2 = function (dictDecodeJson) {
      return new Data_Argonaut_Decode.DecodeJson(function (json) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
              return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(V2.create)(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("x")))(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v)("y"));
          });
      });
  };
  exports["V4"] = V4;
  exports["V3"] = V3;
  exports["V2"] = V2;
  exports["decodeJsonV2"] = decodeJsonV2;
  exports["decodeJsonV3"] = decodeJsonV3;
  exports["decodeJsonV4"] = decodeJsonV4;;
 
})(PS["LinearBase"] = PS["LinearBase"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Map = PS["Data.Map"];
  var Data_List = PS["Data.List"];
  var LinearBase = PS["LinearBase"];
  var Data_Argonaut_Combinators = PS["Data.Argonaut.Combinators"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Printer = PS["Data.Argonaut.Printer"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Either = PS["Data.Either"];     
  var VBool = (function () {
      function VBool(value0) {
          this.value0 = value0;
      };
      VBool.create = function (value0) {
          return new VBool(value0);
      };
      return VBool;
  })();
  var VV2B = (function () {
      function VV2B(value0) {
          this.value0 = value0;
      };
      VV2B.create = function (value0) {
          return new VV2B(value0);
      };
      return VV2B;
  })();
  var VV3B = (function () {
      function VV3B(value0) {
          this.value0 = value0;
      };
      VV3B.create = function (value0) {
          return new VV3B(value0);
      };
      return VV3B;
  })();
  var VV4B = (function () {
      function VV4B(value0) {
          this.value0 = value0;
      };
      VV4B.create = function (value0) {
          return new VV4B(value0);
      };
      return VV4B;
  })();
  var VWord = (function () {
      function VWord(value0) {
          this.value0 = value0;
      };
      VWord.create = function (value0) {
          return new VWord(value0);
      };
      return VWord;
  })();
  var VV2U = (function () {
      function VV2U(value0) {
          this.value0 = value0;
      };
      VV2U.create = function (value0) {
          return new VV2U(value0);
      };
      return VV2U;
  })();
  var VV3U = (function () {
      function VV3U(value0) {
          this.value0 = value0;
      };
      VV3U.create = function (value0) {
          return new VV3U(value0);
      };
      return VV3U;
  })();
  var VV4U = (function () {
      function VV4U(value0) {
          this.value0 = value0;
      };
      VV4U.create = function (value0) {
          return new VV4U(value0);
      };
      return VV4U;
  })();
  var VInt = (function () {
      function VInt(value0) {
          this.value0 = value0;
      };
      VInt.create = function (value0) {
          return new VInt(value0);
      };
      return VInt;
  })();
  var VV2I = (function () {
      function VV2I(value0) {
          this.value0 = value0;
      };
      VV2I.create = function (value0) {
          return new VV2I(value0);
      };
      return VV2I;
  })();
  var VV3I = (function () {
      function VV3I(value0) {
          this.value0 = value0;
      };
      VV3I.create = function (value0) {
          return new VV3I(value0);
      };
      return VV3I;
  })();
  var VV4I = (function () {
      function VV4I(value0) {
          this.value0 = value0;
      };
      VV4I.create = function (value0) {
          return new VV4I(value0);
      };
      return VV4I;
  })();
  var VFloat = (function () {
      function VFloat(value0) {
          this.value0 = value0;
      };
      VFloat.create = function (value0) {
          return new VFloat(value0);
      };
      return VFloat;
  })();
  var VV2F = (function () {
      function VV2F(value0) {
          this.value0 = value0;
      };
      VV2F.create = function (value0) {
          return new VV2F(value0);
      };
      return VV2F;
  })();
  var VV3F = (function () {
      function VV3F(value0) {
          this.value0 = value0;
      };
      VV3F.create = function (value0) {
          return new VV3F(value0);
      };
      return VV3F;
  })();
  var VV4F = (function () {
      function VV4F(value0) {
          this.value0 = value0;
      };
      VV4F.create = function (value0) {
          return new VV4F(value0);
      };
      return VV4F;
  })();
  var VM22F = (function () {
      function VM22F(value0) {
          this.value0 = value0;
      };
      VM22F.create = function (value0) {
          return new VM22F(value0);
      };
      return VM22F;
  })();
  var VM23F = (function () {
      function VM23F(value0) {
          this.value0 = value0;
      };
      VM23F.create = function (value0) {
          return new VM23F(value0);
      };
      return VM23F;
  })();
  var VM24F = (function () {
      function VM24F(value0) {
          this.value0 = value0;
      };
      VM24F.create = function (value0) {
          return new VM24F(value0);
      };
      return VM24F;
  })();
  var VM32F = (function () {
      function VM32F(value0) {
          this.value0 = value0;
      };
      VM32F.create = function (value0) {
          return new VM32F(value0);
      };
      return VM32F;
  })();
  var VM33F = (function () {
      function VM33F(value0) {
          this.value0 = value0;
      };
      VM33F.create = function (value0) {
          return new VM33F(value0);
      };
      return VM33F;
  })();
  var VM34F = (function () {
      function VM34F(value0) {
          this.value0 = value0;
      };
      VM34F.create = function (value0) {
          return new VM34F(value0);
      };
      return VM34F;
  })();
  var VM42F = (function () {
      function VM42F(value0) {
          this.value0 = value0;
      };
      VM42F.create = function (value0) {
          return new VM42F(value0);
      };
      return VM42F;
  })();
  var VM43F = (function () {
      function VM43F(value0) {
          this.value0 = value0;
      };
      VM43F.create = function (value0) {
          return new VM43F(value0);
      };
      return VM43F;
  })();
  var VM44F = (function () {
      function VM44F(value0) {
          this.value0 = value0;
      };
      VM44F.create = function (value0) {
          return new VM44F(value0);
      };
      return VM44F;
  })();
  var OpZero = (function () {
      function OpZero() {

      };
      OpZero.value = new OpZero();
      return OpZero;
  })();
  var OpKeep = (function () {
      function OpKeep() {

      };
      OpKeep.value = new OpKeep();
      return OpKeep;
  })();
  var OpReplace = (function () {
      function OpReplace() {

      };
      OpReplace.value = new OpReplace();
      return OpReplace;
  })();
  var OpIncr = (function () {
      function OpIncr() {

      };
      OpIncr.value = new OpIncr();
      return OpIncr;
  })();
  var OpIncrWrap = (function () {
      function OpIncrWrap() {

      };
      OpIncrWrap.value = new OpIncrWrap();
      return OpIncrWrap;
  })();
  var OpDecr = (function () {
      function OpDecr() {

      };
      OpDecr.value = new OpDecr();
      return OpDecr;
  })();
  var OpDecrWrap = (function () {
      function OpDecrWrap() {

      };
      OpDecrWrap.value = new OpDecrWrap();
      return OpDecrWrap;
  })();
  var OpInvert = (function () {
      function OpInvert() {

      };
      OpInvert.value = new OpInvert();
      return OpInvert;
  })();
  var StencilOps = (function () {
      function StencilOps(value0) {
          this.value0 = value0;
      };
      StencilOps.create = function (value0) {
          return new StencilOps(value0);
      };
      return StencilOps;
  })();
  var FirstVertex = (function () {
      function FirstVertex() {

      };
      FirstVertex.value = new FirstVertex();
      return FirstVertex;
  })();
  var LastVertex = (function () {
      function LastVertex() {

      };
      LastVertex.value = new LastVertex();
      return LastVertex;
  })();
  var NoOffset = (function () {
      function NoOffset() {

      };
      NoOffset.value = new NoOffset();
      return NoOffset;
  })();
  var Offset = (function () {
      function Offset(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Offset.create = function (value0) {
          return function (value1) {
              return new Offset(value0, value1);
          };
      };
      return Offset;
  })();
  var LowerLeft = (function () {
      function LowerLeft() {

      };
      LowerLeft.value = new LowerLeft();
      return LowerLeft;
  })();
  var UpperLeft = (function () {
      function UpperLeft() {

      };
      UpperLeft.value = new UpperLeft();
      return UpperLeft;
  })();
  var PointSize = (function () {
      function PointSize(value0) {
          this.value0 = value0;
      };
      PointSize.create = function (value0) {
          return new PointSize(value0);
      };
      return PointSize;
  })();
  var ProgramPointSize = (function () {
      function ProgramPointSize() {

      };
      ProgramPointSize.value = new ProgramPointSize();
      return ProgramPointSize;
  })();
  var PolygonPoint = (function () {
      function PolygonPoint(value0) {
          this.value0 = value0;
      };
      PolygonPoint.create = function (value0) {
          return new PolygonPoint(value0);
      };
      return PolygonPoint;
  })();
  var PolygonLine = (function () {
      function PolygonLine(value0) {
          this.value0 = value0;
      };
      PolygonLine.create = function (value0) {
          return new PolygonLine(value0);
      };
      return PolygonLine;
  })();
  var PolygonFill = (function () {
      function PolygonFill() {

      };
      PolygonFill.value = new PolygonFill();
      return PolygonFill;
  })();
  var Clear = (function () {
      function Clear() {

      };
      Clear.value = new Clear();
      return Clear;
  })();
  var And = (function () {
      function And() {

      };
      And.value = new And();
      return And;
  })();
  var AndReverse = (function () {
      function AndReverse() {

      };
      AndReverse.value = new AndReverse();
      return AndReverse;
  })();
  var Copy = (function () {
      function Copy() {

      };
      Copy.value = new Copy();
      return Copy;
  })();
  var AndInverted = (function () {
      function AndInverted() {

      };
      AndInverted.value = new AndInverted();
      return AndInverted;
  })();
  var Noop = (function () {
      function Noop() {

      };
      Noop.value = new Noop();
      return Noop;
  })();
  var Xor = (function () {
      function Xor() {

      };
      Xor.value = new Xor();
      return Xor;
  })();
  var Or = (function () {
      function Or() {

      };
      Or.value = new Or();
      return Or;
  })();
  var Nor = (function () {
      function Nor() {

      };
      Nor.value = new Nor();
      return Nor;
  })();
  var Equiv = (function () {
      function Equiv() {

      };
      Equiv.value = new Equiv();
      return Equiv;
  })();
  var Invert = (function () {
      function Invert() {

      };
      Invert.value = new Invert();
      return Invert;
  })();
  var OrReverse = (function () {
      function OrReverse() {

      };
      OrReverse.value = new OrReverse();
      return OrReverse;
  })();
  var CopyInverted = (function () {
      function CopyInverted() {

      };
      CopyInverted.value = new CopyInverted();
      return CopyInverted;
  })();
  var OrInverted = (function () {
      function OrInverted() {

      };
      OrInverted.value = new OrInverted();
      return OrInverted;
  })();
  var Nand = (function () {
      function Nand() {

      };
      Nand.value = new Nand();
      return Nand;
  })();
  var $$Set = (function () {
      function Set() {

      };
      Set.value = new Set();
      return Set;
  })();
  var Bool = (function () {
      function Bool() {

      };
      Bool.value = new Bool();
      return Bool;
  })();
  var V2B = (function () {
      function V2B() {

      };
      V2B.value = new V2B();
      return V2B;
  })();
  var V3B = (function () {
      function V3B() {

      };
      V3B.value = new V3B();
      return V3B;
  })();
  var V4B = (function () {
      function V4B() {

      };
      V4B.value = new V4B();
      return V4B;
  })();
  var Word = (function () {
      function Word() {

      };
      Word.value = new Word();
      return Word;
  })();
  var V2U = (function () {
      function V2U() {

      };
      V2U.value = new V2U();
      return V2U;
  })();
  var V3U = (function () {
      function V3U() {

      };
      V3U.value = new V3U();
      return V3U;
  })();
  var V4U = (function () {
      function V4U() {

      };
      V4U.value = new V4U();
      return V4U;
  })();
  var Int = (function () {
      function Int() {

      };
      Int.value = new Int();
      return Int;
  })();
  var V2I = (function () {
      function V2I() {

      };
      V2I.value = new V2I();
      return V2I;
  })();
  var V3I = (function () {
      function V3I() {

      };
      V3I.value = new V3I();
      return V3I;
  })();
  var V4I = (function () {
      function V4I() {

      };
      V4I.value = new V4I();
      return V4I;
  })();
  var Float = (function () {
      function Float() {

      };
      Float.value = new Float();
      return Float;
  })();
  var V2F = (function () {
      function V2F() {

      };
      V2F.value = new V2F();
      return V2F;
  })();
  var V3F = (function () {
      function V3F() {

      };
      V3F.value = new V3F();
      return V3F;
  })();
  var V4F = (function () {
      function V4F() {

      };
      V4F.value = new V4F();
      return V4F;
  })();
  var M22F = (function () {
      function M22F() {

      };
      M22F.value = new M22F();
      return M22F;
  })();
  var M23F = (function () {
      function M23F() {

      };
      M23F.value = new M23F();
      return M23F;
  })();
  var M24F = (function () {
      function M24F() {

      };
      M24F.value = new M24F();
      return M24F;
  })();
  var M32F = (function () {
      function M32F() {

      };
      M32F.value = new M32F();
      return M32F;
  })();
  var M33F = (function () {
      function M33F() {

      };
      M33F.value = new M33F();
      return M33F;
  })();
  var M34F = (function () {
      function M34F() {

      };
      M34F.value = new M34F();
      return M34F;
  })();
  var M42F = (function () {
      function M42F() {

      };
      M42F.value = new M42F();
      return M42F;
  })();
  var M43F = (function () {
      function M43F() {

      };
      M43F.value = new M43F();
      return M43F;
  })();
  var M44F = (function () {
      function M44F() {

      };
      M44F.value = new M44F();
      return M44F;
  })();
  var STexture1D = (function () {
      function STexture1D() {

      };
      STexture1D.value = new STexture1D();
      return STexture1D;
  })();
  var STexture2D = (function () {
      function STexture2D() {

      };
      STexture2D.value = new STexture2D();
      return STexture2D;
  })();
  var STextureCube = (function () {
      function STextureCube() {

      };
      STextureCube.value = new STextureCube();
      return STextureCube;
  })();
  var STexture1DArray = (function () {
      function STexture1DArray() {

      };
      STexture1DArray.value = new STexture1DArray();
      return STexture1DArray;
  })();
  var STexture2DArray = (function () {
      function STexture2DArray() {

      };
      STexture2DArray.value = new STexture2DArray();
      return STexture2DArray;
  })();
  var STexture2DRect = (function () {
      function STexture2DRect() {

      };
      STexture2DRect.value = new STexture2DRect();
      return STexture2DRect;
  })();
  var FTexture1D = (function () {
      function FTexture1D() {

      };
      FTexture1D.value = new FTexture1D();
      return FTexture1D;
  })();
  var FTexture2D = (function () {
      function FTexture2D() {

      };
      FTexture2D.value = new FTexture2D();
      return FTexture2D;
  })();
  var FTexture3D = (function () {
      function FTexture3D() {

      };
      FTexture3D.value = new FTexture3D();
      return FTexture3D;
  })();
  var FTextureCube = (function () {
      function FTextureCube() {

      };
      FTextureCube.value = new FTextureCube();
      return FTextureCube;
  })();
  var FTexture1DArray = (function () {
      function FTexture1DArray() {

      };
      FTexture1DArray.value = new FTexture1DArray();
      return FTexture1DArray;
  })();
  var FTexture2DArray = (function () {
      function FTexture2DArray() {

      };
      FTexture2DArray.value = new FTexture2DArray();
      return FTexture2DArray;
  })();
  var FTexture2DMS = (function () {
      function FTexture2DMS() {

      };
      FTexture2DMS.value = new FTexture2DMS();
      return FTexture2DMS;
  })();
  var FTexture2DMSArray = (function () {
      function FTexture2DMSArray() {

      };
      FTexture2DMSArray.value = new FTexture2DMSArray();
      return FTexture2DMSArray;
  })();
  var FTextureBuffer = (function () {
      function FTextureBuffer() {

      };
      FTextureBuffer.value = new FTextureBuffer();
      return FTextureBuffer;
  })();
  var FTexture2DRect = (function () {
      function FTexture2DRect() {

      };
      FTexture2DRect.value = new FTexture2DRect();
      return FTexture2DRect;
  })();
  var ITexture1D = (function () {
      function ITexture1D() {

      };
      ITexture1D.value = new ITexture1D();
      return ITexture1D;
  })();
  var ITexture2D = (function () {
      function ITexture2D() {

      };
      ITexture2D.value = new ITexture2D();
      return ITexture2D;
  })();
  var ITexture3D = (function () {
      function ITexture3D() {

      };
      ITexture3D.value = new ITexture3D();
      return ITexture3D;
  })();
  var ITextureCube = (function () {
      function ITextureCube() {

      };
      ITextureCube.value = new ITextureCube();
      return ITextureCube;
  })();
  var ITexture1DArray = (function () {
      function ITexture1DArray() {

      };
      ITexture1DArray.value = new ITexture1DArray();
      return ITexture1DArray;
  })();
  var ITexture2DArray = (function () {
      function ITexture2DArray() {

      };
      ITexture2DArray.value = new ITexture2DArray();
      return ITexture2DArray;
  })();
  var ITexture2DMS = (function () {
      function ITexture2DMS() {

      };
      ITexture2DMS.value = new ITexture2DMS();
      return ITexture2DMS;
  })();
  var ITexture2DMSArray = (function () {
      function ITexture2DMSArray() {

      };
      ITexture2DMSArray.value = new ITexture2DMSArray();
      return ITexture2DMSArray;
  })();
  var ITextureBuffer = (function () {
      function ITextureBuffer() {

      };
      ITextureBuffer.value = new ITextureBuffer();
      return ITextureBuffer;
  })();
  var ITexture2DRect = (function () {
      function ITexture2DRect() {

      };
      ITexture2DRect.value = new ITexture2DRect();
      return ITexture2DRect;
  })();
  var UTexture1D = (function () {
      function UTexture1D() {

      };
      UTexture1D.value = new UTexture1D();
      return UTexture1D;
  })();
  var UTexture2D = (function () {
      function UTexture2D() {

      };
      UTexture2D.value = new UTexture2D();
      return UTexture2D;
  })();
  var UTexture3D = (function () {
      function UTexture3D() {

      };
      UTexture3D.value = new UTexture3D();
      return UTexture3D;
  })();
  var UTextureCube = (function () {
      function UTextureCube() {

      };
      UTextureCube.value = new UTextureCube();
      return UTextureCube;
  })();
  var UTexture1DArray = (function () {
      function UTexture1DArray() {

      };
      UTexture1DArray.value = new UTexture1DArray();
      return UTexture1DArray;
  })();
  var UTexture2DArray = (function () {
      function UTexture2DArray() {

      };
      UTexture2DArray.value = new UTexture2DArray();
      return UTexture2DArray;
  })();
  var UTexture2DMS = (function () {
      function UTexture2DMS() {

      };
      UTexture2DMS.value = new UTexture2DMS();
      return UTexture2DMS;
  })();
  var UTexture2DMSArray = (function () {
      function UTexture2DMSArray() {

      };
      UTexture2DMSArray.value = new UTexture2DMSArray();
      return UTexture2DMSArray;
  })();
  var UTextureBuffer = (function () {
      function UTextureBuffer() {

      };
      UTextureBuffer.value = new UTextureBuffer();
      return UTextureBuffer;
  })();
  var UTexture2DRect = (function () {
      function UTexture2DRect() {

      };
      UTexture2DRect.value = new UTexture2DRect();
      return UTexture2DRect;
  })();
  var Parameter = (function () {
      function Parameter(value0) {
          this.value0 = value0;
      };
      Parameter.create = function (value0) {
          return new Parameter(value0);
      };
      return Parameter;
  })();
  var Program = (function () {
      function Program(value0) {
          this.value0 = value0;
      };
      Program.create = function (value0) {
          return new Program(value0);
      };
      return Program;
  })();
  var Depth = (function () {
      function Depth() {

      };
      Depth.value = new Depth();
      return Depth;
  })();
  var Stencil = (function () {
      function Stencil() {

      };
      Stencil.value = new Stencil();
      return Stencil;
  })();
  var Color = (function () {
      function Color() {

      };
      Color.value = new Color();
      return Color;
  })();
  var TextureImage = (function () {
      function TextureImage(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TextureImage.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TextureImage(value0, value1, value2);
              };
          };
      };
      return TextureImage;
  })();
  var Framebuffer = (function () {
      function Framebuffer(value0) {
          this.value0 = value0;
      };
      Framebuffer.create = function (value0) {
          return new Framebuffer(value0);
      };
      return Framebuffer;
  })();
  var TargetItem = (function () {
      function TargetItem(value0) {
          this.value0 = value0;
      };
      TargetItem.create = function (value0) {
          return new TargetItem(value0);
      };
      return TargetItem;
  })();
  var RenderTarget = (function () {
      function RenderTarget(value0) {
          this.value0 = value0;
      };
      RenderTarget.create = function (value0) {
          return new RenderTarget(value0);
      };
      return RenderTarget;
  })();
  var CCW = (function () {
      function CCW() {

      };
      CCW.value = new CCW();
      return CCW;
  })();
  var CW = (function () {
      function CW() {

      };
      CW.value = new CW();
      return CW;
  })();
  var Nearest = (function () {
      function Nearest() {

      };
      Nearest.value = new Nearest();
      return Nearest;
  })();
  var Linear = (function () {
      function Linear() {

      };
      Linear.value = new Linear();
      return Linear;
  })();
  var NearestMipmapNearest = (function () {
      function NearestMipmapNearest() {

      };
      NearestMipmapNearest.value = new NearestMipmapNearest();
      return NearestMipmapNearest;
  })();
  var NearestMipmapLinear = (function () {
      function NearestMipmapLinear() {

      };
      NearestMipmapLinear.value = new NearestMipmapLinear();
      return NearestMipmapLinear;
  })();
  var LinearMipmapNearest = (function () {
      function LinearMipmapNearest() {

      };
      LinearMipmapNearest.value = new LinearMipmapNearest();
      return LinearMipmapNearest;
  })();
  var LinearMipmapLinear = (function () {
      function LinearMipmapLinear() {

      };
      LinearMipmapLinear.value = new LinearMipmapLinear();
      return LinearMipmapLinear;
  })();
  var Points = (function () {
      function Points() {

      };
      Points.value = new Points();
      return Points;
  })();
  var Lines = (function () {
      function Lines() {

      };
      Lines.value = new Lines();
      return Lines;
  })();
  var Triangles = (function () {
      function Triangles() {

      };
      Triangles.value = new Triangles();
      return Triangles;
  })();
  var LinesAdjacency = (function () {
      function LinesAdjacency() {

      };
      LinesAdjacency.value = new LinesAdjacency();
      return LinesAdjacency;
  })();
  var TrianglesAdjacency = (function () {
      function TrianglesAdjacency() {

      };
      TrianglesAdjacency.value = new TrianglesAdjacency();
      return TrianglesAdjacency;
  })();
  var Slot = (function () {
      function Slot(value0) {
          this.value0 = value0;
      };
      Slot.create = function (value0) {
          return new Slot(value0);
      };
      return Slot;
  })();
  var Repeat = (function () {
      function Repeat() {

      };
      Repeat.value = new Repeat();
      return Repeat;
  })();
  var MirroredRepeat = (function () {
      function MirroredRepeat() {

      };
      MirroredRepeat.value = new MirroredRepeat();
      return MirroredRepeat;
  })();
  var ClampToEdge = (function () {
      function ClampToEdge() {

      };
      ClampToEdge.value = new ClampToEdge();
      return ClampToEdge;
  })();
  var ClampToBorder = (function () {
      function ClampToBorder() {

      };
      ClampToBorder.value = new ClampToBorder();
      return ClampToBorder;
  })();
  var CullNone = (function () {
      function CullNone() {

      };
      CullNone.value = new CullNone();
      return CullNone;
  })();
  var CullFront = (function () {
      function CullFront(value0) {
          this.value0 = value0;
      };
      CullFront.create = function (value0) {
          return new CullFront(value0);
      };
      return CullFront;
  })();
  var CullBack = (function () {
      function CullBack(value0) {
          this.value0 = value0;
      };
      CullBack.create = function (value0) {
          return new CullBack(value0);
      };
      return CullBack;
  })();
  var PointCtx = (function () {
      function PointCtx(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      PointCtx.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new PointCtx(value0, value1, value2);
              };
          };
      };
      return PointCtx;
  })();
  var LineCtx = (function () {
      function LineCtx(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      LineCtx.create = function (value0) {
          return function (value1) {
              return new LineCtx(value0, value1);
          };
      };
      return LineCtx;
  })();
  var TriangleCtx = (function () {
      function TriangleCtx(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      TriangleCtx.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new TriangleCtx(value0, value1, value2, value3);
                  };
              };
          };
      };
      return TriangleCtx;
  })();
  var Never = (function () {
      function Never() {

      };
      Never.value = new Never();
      return Never;
  })();
  var Less = (function () {
      function Less() {

      };
      Less.value = new Less();
      return Less;
  })();
  var Equal = (function () {
      function Equal() {

      };
      Equal.value = new Equal();
      return Equal;
  })();
  var Lequal = (function () {
      function Lequal() {

      };
      Lequal.value = new Lequal();
      return Lequal;
  })();
  var Greater = (function () {
      function Greater() {

      };
      Greater.value = new Greater();
      return Greater;
  })();
  var Notequal = (function () {
      function Notequal() {

      };
      Notequal.value = new Notequal();
      return Notequal;
  })();
  var Gequal = (function () {
      function Gequal() {

      };
      Gequal.value = new Gequal();
      return Gequal;
  })();
  var Always = (function () {
      function Always() {

      };
      Always.value = new Always();
      return Always;
  })();
  var SamplerDescriptor = (function () {
      function SamplerDescriptor(value0) {
          this.value0 = value0;
      };
      SamplerDescriptor.create = function (value0) {
          return new SamplerDescriptor(value0);
      };
      return SamplerDescriptor;
  })();
  var StencilTest = (function () {
      function StencilTest(value0) {
          this.value0 = value0;
      };
      StencilTest.create = function (value0) {
          return new StencilTest(value0);
      };
      return StencilTest;
  })();
  var StencilTests = (function () {
      function StencilTests(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      StencilTests.create = function (value0) {
          return function (value1) {
              return new StencilTests(value0, value1);
          };
      };
      return StencilTests;
  })();
  var Red = (function () {
      function Red() {

      };
      Red.value = new Red();
      return Red;
  })();
  var RG = (function () {
      function RG() {

      };
      RG.value = new RG();
      return RG;
  })();
  var RGB = (function () {
      function RGB() {

      };
      RGB.value = new RGB();
      return RGB;
  })();
  var RGBA = (function () {
      function RGBA() {

      };
      RGBA.value = new RGBA();
      return RGBA;
  })();
  var FloatT = (function () {
      function FloatT(value0) {
          this.value0 = value0;
      };
      FloatT.create = function (value0) {
          return new FloatT(value0);
      };
      return FloatT;
  })();
  var IntT = (function () {
      function IntT(value0) {
          this.value0 = value0;
      };
      IntT.create = function (value0) {
          return new IntT(value0);
      };
      return IntT;
  })();
  var WordT = (function () {
      function WordT(value0) {
          this.value0 = value0;
      };
      WordT.create = function (value0) {
          return new WordT(value0);
      };
      return WordT;
  })();
  var ShadowT = (function () {
      function ShadowT() {

      };
      ShadowT.value = new ShadowT();
      return ShadowT;
  })();
  var Texture1D = (function () {
      function Texture1D(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Texture1D.create = function (value0) {
          return function (value1) {
              return new Texture1D(value0, value1);
          };
      };
      return Texture1D;
  })();
  var Texture2D = (function () {
      function Texture2D(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Texture2D.create = function (value0) {
          return function (value1) {
              return new Texture2D(value0, value1);
          };
      };
      return Texture2D;
  })();
  var Texture3D = (function () {
      function Texture3D(value0) {
          this.value0 = value0;
      };
      Texture3D.create = function (value0) {
          return new Texture3D(value0);
      };
      return Texture3D;
  })();
  var TextureCube = (function () {
      function TextureCube(value0) {
          this.value0 = value0;
      };
      TextureCube.create = function (value0) {
          return new TextureCube(value0);
      };
      return TextureCube;
  })();
  var TextureRect = (function () {
      function TextureRect(value0) {
          this.value0 = value0;
      };
      TextureRect.create = function (value0) {
          return new TextureRect(value0);
      };
      return TextureRect;
  })();
  var Texture2DMS = (function () {
      function Texture2DMS(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Texture2DMS.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Texture2DMS(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Texture2DMS;
  })();
  var TextureBuffer = (function () {
      function TextureBuffer(value0) {
          this.value0 = value0;
      };
      TextureBuffer.create = function (value0) {
          return new TextureBuffer(value0);
      };
      return TextureBuffer;
  })();
  var TextureDescriptor = (function () {
      function TextureDescriptor(value0) {
          this.value0 = value0;
      };
      TextureDescriptor.create = function (value0) {
          return new TextureDescriptor(value0);
      };
      return TextureDescriptor;
  })();
  var ClearImage = (function () {
      function ClearImage(value0) {
          this.value0 = value0;
      };
      ClearImage.create = function (value0) {
          return new ClearImage(value0);
      };
      return ClearImage;
  })();
  var Zero = (function () {
      function Zero() {

      };
      Zero.value = new Zero();
      return Zero;
  })();
  var One = (function () {
      function One() {

      };
      One.value = new One();
      return One;
  })();
  var SrcColor = (function () {
      function SrcColor() {

      };
      SrcColor.value = new SrcColor();
      return SrcColor;
  })();
  var OneMinusSrcColor = (function () {
      function OneMinusSrcColor() {

      };
      OneMinusSrcColor.value = new OneMinusSrcColor();
      return OneMinusSrcColor;
  })();
  var DstColor = (function () {
      function DstColor() {

      };
      DstColor.value = new DstColor();
      return DstColor;
  })();
  var OneMinusDstColor = (function () {
      function OneMinusDstColor() {

      };
      OneMinusDstColor.value = new OneMinusDstColor();
      return OneMinusDstColor;
  })();
  var SrcAlpha = (function () {
      function SrcAlpha() {

      };
      SrcAlpha.value = new SrcAlpha();
      return SrcAlpha;
  })();
  var OneMinusSrcAlpha = (function () {
      function OneMinusSrcAlpha() {

      };
      OneMinusSrcAlpha.value = new OneMinusSrcAlpha();
      return OneMinusSrcAlpha;
  })();
  var DstAlpha = (function () {
      function DstAlpha() {

      };
      DstAlpha.value = new DstAlpha();
      return DstAlpha;
  })();
  var OneMinusDstAlpha = (function () {
      function OneMinusDstAlpha() {

      };
      OneMinusDstAlpha.value = new OneMinusDstAlpha();
      return OneMinusDstAlpha;
  })();
  var ConstantColor = (function () {
      function ConstantColor() {

      };
      ConstantColor.value = new ConstantColor();
      return ConstantColor;
  })();
  var OneMinusConstantColor = (function () {
      function OneMinusConstantColor() {

      };
      OneMinusConstantColor.value = new OneMinusConstantColor();
      return OneMinusConstantColor;
  })();
  var ConstantAlpha = (function () {
      function ConstantAlpha() {

      };
      ConstantAlpha.value = new ConstantAlpha();
      return ConstantAlpha;
  })();
  var OneMinusConstantAlpha = (function () {
      function OneMinusConstantAlpha() {

      };
      OneMinusConstantAlpha.value = new OneMinusConstantAlpha();
      return OneMinusConstantAlpha;
  })();
  var SrcAlphaSaturate = (function () {
      function SrcAlphaSaturate() {

      };
      SrcAlphaSaturate.value = new SrcAlphaSaturate();
      return SrcAlphaSaturate;
  })();
  var FuncAdd = (function () {
      function FuncAdd() {

      };
      FuncAdd.value = new FuncAdd();
      return FuncAdd;
  })();
  var FuncSubtract = (function () {
      function FuncSubtract() {

      };
      FuncSubtract.value = new FuncSubtract();
      return FuncSubtract;
  })();
  var FuncReverseSubtract = (function () {
      function FuncReverseSubtract() {

      };
      FuncReverseSubtract.value = new FuncReverseSubtract();
      return FuncReverseSubtract;
  })();
  var Min = (function () {
      function Min() {

      };
      Min.value = new Min();
      return Min;
  })();
  var Max = (function () {
      function Max() {

      };
      Max.value = new Max();
      return Max;
  })();
  var NoBlending = (function () {
      function NoBlending() {

      };
      NoBlending.value = new NoBlending();
      return NoBlending;
  })();
  var BlendLogicOp = (function () {
      function BlendLogicOp(value0) {
          this.value0 = value0;
      };
      BlendLogicOp.create = function (value0) {
          return new BlendLogicOp(value0);
      };
      return BlendLogicOp;
  })();
  var Blend = (function () {
      function Blend(value0) {
          this.value0 = value0;
      };
      Blend.create = function (value0) {
          return new Blend(value0);
      };
      return Blend;
  })();
  var DepthOp = (function () {
      function DepthOp(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DepthOp.create = function (value0) {
          return function (value1) {
              return new DepthOp(value0, value1);
          };
      };
      return DepthOp;
  })();
  var StencilOp = (function () {
      function StencilOp(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      StencilOp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new StencilOp(value0, value1, value2);
              };
          };
      };
      return StencilOp;
  })();
  var ColorOp = (function () {
      function ColorOp(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ColorOp.create = function (value0) {
          return function (value1) {
              return new ColorOp(value0, value1);
          };
      };
      return ColorOp;
  })();
  var WebGL1 = (function () {
      function WebGL1() {

      };
      WebGL1.value = new WebGL1();
      return WebGL1;
  })();
  var OpenGL33 = (function () {
      function OpenGL33() {

      };
      OpenGL33.value = new OpenGL33();
      return OpenGL33;
  })();
  var VBoolArray = (function () {
      function VBoolArray(value0) {
          this.value0 = value0;
      };
      VBoolArray.create = function (value0) {
          return new VBoolArray(value0);
      };
      return VBoolArray;
  })();
  var VIntArray = (function () {
      function VIntArray(value0) {
          this.value0 = value0;
      };
      VIntArray.create = function (value0) {
          return new VIntArray(value0);
      };
      return VIntArray;
  })();
  var VWordArray = (function () {
      function VWordArray(value0) {
          this.value0 = value0;
      };
      VWordArray.create = function (value0) {
          return new VWordArray(value0);
      };
      return VWordArray;
  })();
  var VFloatArray = (function () {
      function VFloatArray(value0) {
          this.value0 = value0;
      };
      VFloatArray.create = function (value0) {
          return new VFloatArray(value0);
      };
      return VFloatArray;
  })();
  var StreamData = (function () {
      function StreamData(value0) {
          this.value0 = value0;
      };
      StreamData.create = function (value0) {
          return new StreamData(value0);
      };
      return StreamData;
  })();
  var AccumulationContext = (function () {
      function AccumulationContext(value0) {
          this.value0 = value0;
      };
      AccumulationContext.create = function (value0) {
          return new AccumulationContext(value0);
      };
      return AccumulationContext;
  })();
  var SetRasterContext = (function () {
      function SetRasterContext(value0) {
          this.value0 = value0;
      };
      SetRasterContext.create = function (value0) {
          return new SetRasterContext(value0);
      };
      return SetRasterContext;
  })();
  var SetAccumulationContext = (function () {
      function SetAccumulationContext(value0) {
          this.value0 = value0;
      };
      SetAccumulationContext.create = function (value0) {
          return new SetAccumulationContext(value0);
      };
      return SetAccumulationContext;
  })();
  var SetRenderTarget = (function () {
      function SetRenderTarget(value0) {
          this.value0 = value0;
      };
      SetRenderTarget.create = function (value0) {
          return new SetRenderTarget(value0);
      };
      return SetRenderTarget;
  })();
  var SetProgram = (function () {
      function SetProgram(value0) {
          this.value0 = value0;
      };
      SetProgram.create = function (value0) {
          return new SetProgram(value0);
      };
      return SetProgram;
  })();
  var SetSamplerUniform = (function () {
      function SetSamplerUniform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSamplerUniform.create = function (value0) {
          return function (value1) {
              return new SetSamplerUniform(value0, value1);
          };
      };
      return SetSamplerUniform;
  })();
  var SetTexture = (function () {
      function SetTexture(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetTexture.create = function (value0) {
          return function (value1) {
              return new SetTexture(value0, value1);
          };
      };
      return SetTexture;
  })();
  var SetSampler = (function () {
      function SetSampler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSampler.create = function (value0) {
          return function (value1) {
              return new SetSampler(value0, value1);
          };
      };
      return SetSampler;
  })();
  var RenderSlot = (function () {
      function RenderSlot(value0) {
          this.value0 = value0;
      };
      RenderSlot.create = function (value0) {
          return new RenderSlot(value0);
      };
      return RenderSlot;
  })();
  var RenderStream = (function () {
      function RenderStream(value0) {
          this.value0 = value0;
      };
      RenderStream.create = function (value0) {
          return new RenderStream(value0);
      };
      return RenderStream;
  })();
  var ClearRenderTarget = (function () {
      function ClearRenderTarget(value0) {
          this.value0 = value0;
      };
      ClearRenderTarget.create = function (value0) {
          return new ClearRenderTarget(value0);
      };
      return ClearRenderTarget;
  })();
  var GenerateMipMap = (function () {
      function GenerateMipMap(value0) {
          this.value0 = value0;
      };
      GenerateMipMap.create = function (value0) {
          return new GenerateMipMap(value0);
      };
      return GenerateMipMap;
  })();
  var SaveImage = (function () {
      function SaveImage(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SaveImage.create = function (value0) {
          return function (value1) {
              return new SaveImage(value0, value1);
          };
      };
      return SaveImage;
  })();
  var LoadImage = (function () {
      function LoadImage(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      LoadImage.create = function (value0) {
          return function (value1) {
              return new LoadImage(value0, value1);
          };
      };
      return LoadImage;
  })();
  var Pipeline = (function () {
      function Pipeline(value0) {
          this.value0 = value0;
      };
      Pipeline.create = function (value0) {
          return new Pipeline(value0);
      };
      return Pipeline;
  })();                                                                              
  var genericFetchPrimitive = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.Points" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(Points.value);
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.Lines" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(Lines.value);
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.Triangles" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(Triangles.value);
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.LinesAdjacency" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(LinesAdjacency.value);
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.TrianglesAdjacency" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(TrianglesAdjacency.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("IR.FetchPrimitive", [ {
          sigConstructor: "IR.Points", 
          sigValues: [  ]
      }, {
          sigConstructor: "IR.Lines", 
          sigValues: [  ]
      }, {
          sigConstructor: "IR.Triangles", 
          sigValues: [  ]
      }, {
          sigConstructor: "IR.LinesAdjacency", 
          sigValues: [  ]
      }, {
          sigConstructor: "IR.TrianglesAdjacency", 
          sigValues: [  ]
      } ]);
  }, function ($dollarx) {
      if ($dollarx instanceof Points) {
          return new Data_Generic.SProd("IR.Points", [  ]);
      };
      if ($dollarx instanceof Lines) {
          return new Data_Generic.SProd("IR.Lines", [  ]);
      };
      if ($dollarx instanceof Triangles) {
          return new Data_Generic.SProd("IR.Triangles", [  ]);
      };
      if ($dollarx instanceof LinesAdjacency) {
          return new Data_Generic.SProd("IR.LinesAdjacency", [  ]);
      };
      if ($dollarx instanceof TrianglesAdjacency) {
          return new Data_Generic.SProd("IR.TrianglesAdjacency", [  ]);
      };
      throw new Error("Failed pattern match at IR line 461, column 1 - line 462, column 1: " + [ $dollarx.constructor.name ]);
  });
  var showFetchPrimitive = new Prelude.Show(Data_Generic.gShow(genericFetchPrimitive));
  var genericColorArity = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.Red" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(Red.value);
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.RG" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(RG.value);
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.RGB" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(RGB.value);
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.RGBA" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(RGBA.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("IR.ColorArity", [ {
          sigConstructor: "IR.Red", 
          sigValues: [  ]
      }, {
          sigConstructor: "IR.RG", 
          sigValues: [  ]
      }, {
          sigConstructor: "IR.RGB", 
          sigValues: [  ]
      }, {
          sigConstructor: "IR.RGBA", 
          sigValues: [  ]
      } ]);
  }, function ($dollarx) {
      if ($dollarx instanceof Red) {
          return new Data_Generic.SProd("IR.Red", [  ]);
      };
      if ($dollarx instanceof RG) {
          return new Data_Generic.SProd("IR.RG", [  ]);
      };
      if ($dollarx instanceof RGB) {
          return new Data_Generic.SProd("IR.RGB", [  ]);
      };
      if ($dollarx instanceof RGBA) {
          return new Data_Generic.SProd("IR.RGBA", [  ]);
      };
      throw new Error("Failed pattern match at IR line 465, column 1 - line 466, column 1: " + [ $dollarx.constructor.name ]);
  });
  var genericTextureDataType = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.FloatT" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(FloatT.create))(Data_Generic.fromSpine(genericColorArity)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.IntT" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(IntT.create))(Data_Generic.fromSpine(genericColorArity)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.WordT" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(WordT.create))(Data_Generic.fromSpine(genericColorArity)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "IR.ShadowT" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(ShadowT.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("IR.TextureDataType", [ {
          sigConstructor: "IR.FloatT", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericColorArity)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "IR.IntT", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericColorArity)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "IR.WordT", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericColorArity)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "IR.ShadowT", 
          sigValues: [  ]
      } ]);
  }, function ($dollarx) {
      if ($dollarx instanceof FloatT) {
          return new Data_Generic.SProd("IR.FloatT", [ function ($dollarq) {
              return Data_Generic.toSpine(genericColorArity)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof IntT) {
          return new Data_Generic.SProd("IR.IntT", [ function ($dollarq) {
              return Data_Generic.toSpine(genericColorArity)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof WordT) {
          return new Data_Generic.SProd("IR.WordT", [ function ($dollarq) {
              return Data_Generic.toSpine(genericColorArity)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof ShadowT) {
          return new Data_Generic.SProd("IR.ShadowT", [  ]);
      };
      throw new Error("Failed pattern match at IR line 469, column 1 - line 470, column 1: " + [ $dollarx.constructor.name ]);
  });
  var showTextureDataType = new Prelude.Show(Data_Generic.gShow(genericTextureDataType));
  var eqFetchPrimitive = new Prelude.Eq(Data_Generic.gEq(genericFetchPrimitive));
  var decodeJsonValue = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "VBool") {
                  return Prelude["<$>"](Data_Either.functorEither)(VBool.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonBoolean)(v)("arg0"));
              };
              if (v1 === "VV2B") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV2B.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV2(Data_Argonaut_Decode.decodeJsonBoolean))(v)("arg0"));
              };
              if (v1 === "VV3B") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV3B.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV3(Data_Argonaut_Decode.decodeJsonBoolean))(v)("arg0"));
              };
              if (v1 === "VV4B") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV4B.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV4(Data_Argonaut_Decode.decodeJsonBoolean))(v)("arg0"));
              };
              if (v1 === "VWord") {
                  return Prelude["<$>"](Data_Either.functorEither)(VWord.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "VV2U") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV2U.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV2(Data_Argonaut_Decode.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VV3U") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV3U.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV3(Data_Argonaut_Decode.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VV4U") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV4U.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV4(Data_Argonaut_Decode.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VInt") {
                  return Prelude["<$>"](Data_Either.functorEither)(VInt.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "VV2I") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV2I.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV2(Data_Argonaut_Decode.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VV3I") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV3I.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV3(Data_Argonaut_Decode.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VV4I") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV4I.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV4(Data_Argonaut_Decode.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VFloat") {
                  return Prelude["<$>"](Data_Either.functorEither)(VFloat.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(v)("arg0"));
              };
              if (v1 === "VV2F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV2F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV2(Data_Argonaut_Decode.decodeJsonNumber))(v)("arg0"));
              };
              if (v1 === "VV3F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV3F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV3(Data_Argonaut_Decode.decodeJsonNumber))(v)("arg0"));
              };
              if (v1 === "VV4F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VV4F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV4(Data_Argonaut_Decode.decodeJsonNumber))(v)("arg0"));
              };
              if (v1 === "VM22F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM22F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV2(LinearBase.decodeJsonV2(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM23F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM23F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV3(LinearBase.decodeJsonV2(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM24F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM24F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV4(LinearBase.decodeJsonV2(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM32F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM32F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV2(LinearBase.decodeJsonV3(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM33F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM33F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV3(LinearBase.decodeJsonV3(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM34F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM34F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV4(LinearBase.decodeJsonV3(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM42F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM42F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV2(LinearBase.decodeJsonV4(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM43F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM43F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV3(LinearBase.decodeJsonV4(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM44F") {
                  return Prelude["<$>"](Data_Either.functorEither)(VM44F.create)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV4(LinearBase.decodeJsonV4(Data_Argonaut_Decode.decodeJsonNumber)))(v)("arg0"));
              };
              throw new Error("Failed pattern match at IR line 531, column 1 - line 562, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonStencilOperation = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "OpZero") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpZero.value);
              };
              if (v1 === "OpKeep") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpKeep.value);
              };
              if (v1 === "OpReplace") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpReplace.value);
              };
              if (v1 === "OpIncr") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpIncr.value);
              };
              if (v1 === "OpIncrWrap") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpIncrWrap.value);
              };
              if (v1 === "OpDecr") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpDecr.value);
              };
              if (v1 === "OpDecrWrap") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpDecrWrap.value);
              };
              if (v1 === "OpInvert") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpInvert.value);
              };
              throw new Error("Failed pattern match at IR line 824, column 1 - line 838, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonStencilOps = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "StencilOps") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonStencilOperation)(v)("frontStencilOp"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonStencilOperation)(v)("backStencilOp"))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)(new StencilOps({
                              frontStencilOp: v2, 
                              backStencilOp: v3
                          }));
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 945, column 1 - line 958, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonProvokingVertex = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "FirstVertex") {
                  return Prelude.pure(Data_Either.applicativeEither)(FirstVertex.value);
              };
              if (v1 === "LastVertex") {
                  return Prelude.pure(Data_Either.applicativeEither)(LastVertex.value);
              };
              throw new Error("Failed pattern match at IR line 765, column 1 - line 773, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonPolygonOffset = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "NoOffset") {
                  return Prelude.pure(Data_Either.applicativeEither)(NoOffset.value);
              };
              if (v1 === "Offset") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Offset.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(v)("arg1"));
              };
              throw new Error("Failed pattern match at IR line 724, column 1 - line 732, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonPointSpriteCoordOrigin = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "LowerLeft") {
                  return Prelude.pure(Data_Either.applicativeEither)(LowerLeft.value);
              };
              if (v1 === "UpperLeft") {
                  return Prelude.pure(Data_Either.applicativeEither)(UpperLeft.value);
              };
              throw new Error("Failed pattern match at IR line 698, column 1 - line 706, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonPointSize = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "PointSize") {
                  return Prelude["<$>"](Data_Either.functorEither)(PointSize.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(v)("arg0"));
              };
              if (v1 === "ProgramPointSize") {
                  return Prelude.pure(Data_Either.applicativeEither)(ProgramPointSize.value);
              };
              throw new Error("Failed pattern match at IR line 711, column 1 - line 719, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonPolygonMode = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "PolygonPoint") {
                  return Prelude["<$>"](Data_Either.functorEither)(PolygonPoint.create)(Data_Argonaut_Combinators[".?"](decodeJsonPointSize)(v)("arg0"));
              };
              if (v1 === "PolygonLine") {
                  return Prelude["<$>"](Data_Either.functorEither)(PolygonLine.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(v)("arg0"));
              };
              if (v1 === "PolygonFill") {
                  return Prelude.pure(Data_Either.applicativeEither)(PolygonFill.value);
              };
              throw new Error("Failed pattern match at IR line 751, column 1 - line 760, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonLogicOperation = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Clear") {
                  return Prelude.pure(Data_Either.applicativeEither)(Clear.value);
              };
              if (v1 === "And") {
                  return Prelude.pure(Data_Either.applicativeEither)(And.value);
              };
              if (v1 === "AndReverse") {
                  return Prelude.pure(Data_Either.applicativeEither)(AndReverse.value);
              };
              if (v1 === "Copy") {
                  return Prelude.pure(Data_Either.applicativeEither)(Copy.value);
              };
              if (v1 === "AndInverted") {
                  return Prelude.pure(Data_Either.applicativeEither)(AndInverted.value);
              };
              if (v1 === "Noop") {
                  return Prelude.pure(Data_Either.applicativeEither)(Noop.value);
              };
              if (v1 === "Xor") {
                  return Prelude.pure(Data_Either.applicativeEither)(Xor.value);
              };
              if (v1 === "Or") {
                  return Prelude.pure(Data_Either.applicativeEither)(Or.value);
              };
              if (v1 === "Nor") {
                  return Prelude.pure(Data_Either.applicativeEither)(Nor.value);
              };
              if (v1 === "Equiv") {
                  return Prelude.pure(Data_Either.applicativeEither)(Equiv.value);
              };
              if (v1 === "Invert") {
                  return Prelude.pure(Data_Either.applicativeEither)(Invert.value);
              };
              if (v1 === "OrReverse") {
                  return Prelude.pure(Data_Either.applicativeEither)(OrReverse.value);
              };
              if (v1 === "CopyInverted") {
                  return Prelude.pure(Data_Either.applicativeEither)(CopyInverted.value);
              };
              if (v1 === "OrInverted") {
                  return Prelude.pure(Data_Either.applicativeEither)(OrInverted.value);
              };
              if (v1 === "Nand") {
                  return Prelude.pure(Data_Either.applicativeEither)(Nand.value);
              };
              if (v1 === "Set") {
                  return Prelude.pure(Data_Either.applicativeEither)($$Set.value);
              };
              throw new Error("Failed pattern match at IR line 915, column 1 - line 937, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonInputType = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Bool") {
                  return Prelude.pure(Data_Either.applicativeEither)(Bool.value);
              };
              if (v1 === "V2B") {
                  return Prelude.pure(Data_Either.applicativeEither)(V2B.value);
              };
              if (v1 === "V3B") {
                  return Prelude.pure(Data_Either.applicativeEither)(V3B.value);
              };
              if (v1 === "V4B") {
                  return Prelude.pure(Data_Either.applicativeEither)(V4B.value);
              };
              if (v1 === "Word") {
                  return Prelude.pure(Data_Either.applicativeEither)(Word.value);
              };
              if (v1 === "V2U") {
                  return Prelude.pure(Data_Either.applicativeEither)(V2U.value);
              };
              if (v1 === "V3U") {
                  return Prelude.pure(Data_Either.applicativeEither)(V3U.value);
              };
              if (v1 === "V4U") {
                  return Prelude.pure(Data_Either.applicativeEither)(V4U.value);
              };
              if (v1 === "Int") {
                  return Prelude.pure(Data_Either.applicativeEither)(Int.value);
              };
              if (v1 === "V2I") {
                  return Prelude.pure(Data_Either.applicativeEither)(V2I.value);
              };
              if (v1 === "V3I") {
                  return Prelude.pure(Data_Either.applicativeEither)(V3I.value);
              };
              if (v1 === "V4I") {
                  return Prelude.pure(Data_Either.applicativeEither)(V4I.value);
              };
              if (v1 === "Float") {
                  return Prelude.pure(Data_Either.applicativeEither)(Float.value);
              };
              if (v1 === "V2F") {
                  return Prelude.pure(Data_Either.applicativeEither)(V2F.value);
              };
              if (v1 === "V3F") {
                  return Prelude.pure(Data_Either.applicativeEither)(V3F.value);
              };
              if (v1 === "V4F") {
                  return Prelude.pure(Data_Either.applicativeEither)(V4F.value);
              };
              if (v1 === "M22F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M22F.value);
              };
              if (v1 === "M23F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M23F.value);
              };
              if (v1 === "M24F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M24F.value);
              };
              if (v1 === "M32F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M32F.value);
              };
              if (v1 === "M33F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M33F.value);
              };
              if (v1 === "M34F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M34F.value);
              };
              if (v1 === "M42F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M42F.value);
              };
              if (v1 === "M43F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M43F.value);
              };
              if (v1 === "M44F") {
                  return Prelude.pure(Data_Either.applicativeEither)(M44F.value);
              };
              if (v1 === "STexture1D") {
                  return Prelude.pure(Data_Either.applicativeEither)(STexture1D.value);
              };
              if (v1 === "STexture2D") {
                  return Prelude.pure(Data_Either.applicativeEither)(STexture2D.value);
              };
              if (v1 === "STextureCube") {
                  return Prelude.pure(Data_Either.applicativeEither)(STextureCube.value);
              };
              if (v1 === "STexture1DArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(STexture1DArray.value);
              };
              if (v1 === "STexture2DArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(STexture2DArray.value);
              };
              if (v1 === "STexture2DRect") {
                  return Prelude.pure(Data_Either.applicativeEither)(STexture2DRect.value);
              };
              if (v1 === "FTexture1D") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTexture1D.value);
              };
              if (v1 === "FTexture2D") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTexture2D.value);
              };
              if (v1 === "FTexture3D") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTexture3D.value);
              };
              if (v1 === "FTextureCube") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTextureCube.value);
              };
              if (v1 === "FTexture1DArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTexture1DArray.value);
              };
              if (v1 === "FTexture2DArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTexture2DArray.value);
              };
              if (v1 === "FTexture2DMS") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTexture2DMS.value);
              };
              if (v1 === "FTexture2DMSArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTexture2DMSArray.value);
              };
              if (v1 === "FTextureBuffer") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTextureBuffer.value);
              };
              if (v1 === "FTexture2DRect") {
                  return Prelude.pure(Data_Either.applicativeEither)(FTexture2DRect.value);
              };
              if (v1 === "ITexture1D") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITexture1D.value);
              };
              if (v1 === "ITexture2D") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITexture2D.value);
              };
              if (v1 === "ITexture3D") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITexture3D.value);
              };
              if (v1 === "ITextureCube") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITextureCube.value);
              };
              if (v1 === "ITexture1DArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITexture1DArray.value);
              };
              if (v1 === "ITexture2DArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITexture2DArray.value);
              };
              if (v1 === "ITexture2DMS") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITexture2DMS.value);
              };
              if (v1 === "ITexture2DMSArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITexture2DMSArray.value);
              };
              if (v1 === "ITextureBuffer") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITextureBuffer.value);
              };
              if (v1 === "ITexture2DRect") {
                  return Prelude.pure(Data_Either.applicativeEither)(ITexture2DRect.value);
              };
              if (v1 === "UTexture1D") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTexture1D.value);
              };
              if (v1 === "UTexture2D") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTexture2D.value);
              };
              if (v1 === "UTexture3D") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTexture3D.value);
              };
              if (v1 === "UTextureCube") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTextureCube.value);
              };
              if (v1 === "UTexture1DArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTexture1DArray.value);
              };
              if (v1 === "UTexture2DArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTexture2DArray.value);
              };
              if (v1 === "UTexture2DMS") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTexture2DMS.value);
              };
              if (v1 === "UTexture2DMSArray") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTexture2DMSArray.value);
              };
              if (v1 === "UTextureBuffer") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTextureBuffer.value);
              };
              if (v1 === "UTexture2DRect") {
                  return Prelude.pure(Data_Either.applicativeEither)(UTexture2DRect.value);
              };
              throw new Error("Failed pattern match at IR line 626, column 1 - line 693, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonParameter = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Parameter") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("name"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonInputType)(v)("ty"))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)(new Parameter({
                              name: v2, 
                              ty: v3
                          }));
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1398, column 1 - line 1411, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonProgram = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Program") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeStrMap(decodeJsonInputType))(v)("programUniforms"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeStrMap(decodeJsonParameter))(v)("programStreams"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeStrMap(decodeJsonInputType))(v)("programInTextures"))(function (v4) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonParameter))(v)("programOutput"))(function (v5) {
                                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("vertexShader"))(function (v6) {
                                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(v)("geometryShader"))(function (v7) {
                                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("fragmentShader"))(function (v8) {
                                              return Prelude.pure(Data_Either.applicativeEither)(new Program({
                                                  programUniforms: v2, 
                                                  programStreams: v3, 
                                                  programInTextures: v4, 
                                                  programOutput: v5, 
                                                  vertexShader: v6, 
                                                  geometryShader: v7, 
                                                  fragmentShader: v8
                                              }));
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1424, column 1 - line 1447, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonImageSemantic = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Depth") {
                  return Prelude.pure(Data_Either.applicativeEither)(Depth.value);
              };
              if (v1 === "Stencil") {
                  return Prelude.pure(Data_Either.applicativeEither)(Stencil.value);
              };
              if (v1 === "Color") {
                  return Prelude.pure(Data_Either.applicativeEither)(Color.value);
              };
              throw new Error("Failed pattern match at IR line 1234, column 1 - line 1243, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonImageRef = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "TextureImage") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(TextureImage.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg1")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonInt))(v)("arg2"));
              };
              if (v1 === "Framebuffer") {
                  return Prelude["<$>"](Data_Either.functorEither)(Framebuffer.create)(Data_Argonaut_Combinators[".?"](decodeJsonImageSemantic)(v)("arg0"));
              };
              throw new Error("Failed pattern match at IR line 1248, column 1 - line 1256, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonTargetItem = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "TargetItem") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonImageSemantic)(v)("targetSemantic"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(decodeJsonImageRef))(v)("targetRef"))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)(new TargetItem({
                              targetSemantic: v2, 
                              targetRef: v3
                          }));
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1512, column 1 - line 1525, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonRenderTarget = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "RenderTarget") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonTargetItem))(v)("renderTargets"))(function (v2) {
                      return Prelude.pure(Data_Either.applicativeEither)(new RenderTarget({
                          renderTargets: v2
                      }));
                  });
              };
              throw new Error("Failed pattern match at IR line 1532, column 1 - line 1543, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonFrontFace = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "CCW") {
                  return Prelude.pure(Data_Either.applicativeEither)(CCW.value);
              };
              if (v1 === "CW") {
                  return Prelude.pure(Data_Either.applicativeEither)(CW.value);
              };
              throw new Error("Failed pattern match at IR line 737, column 1 - line 745, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonFilter = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Nearest") {
                  return Prelude.pure(Data_Either.applicativeEither)(Nearest.value);
              };
              if (v1 === "Linear") {
                  return Prelude.pure(Data_Either.applicativeEither)(Linear.value);
              };
              if (v1 === "NearestMipmapNearest") {
                  return Prelude.pure(Data_Either.applicativeEither)(NearestMipmapNearest.value);
              };
              if (v1 === "NearestMipmapLinear") {
                  return Prelude.pure(Data_Either.applicativeEither)(NearestMipmapLinear.value);
              };
              if (v1 === "LinearMipmapNearest") {
                  return Prelude.pure(Data_Either.applicativeEither)(LinearMipmapNearest.value);
              };
              if (v1 === "LinearMipmapLinear") {
                  return Prelude.pure(Data_Either.applicativeEither)(LinearMipmapLinear.value);
              };
              throw new Error("Failed pattern match at IR line 1199, column 1 - line 1211, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonFetchPrimitive = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Points") {
                  return Prelude.pure(Data_Either.applicativeEither)(Points.value);
              };
              if (v1 === "Lines") {
                  return Prelude.pure(Data_Either.applicativeEither)(Lines.value);
              };
              if (v1 === "Triangles") {
                  return Prelude.pure(Data_Either.applicativeEither)(Triangles.value);
              };
              if (v1 === "LinesAdjacency") {
                  return Prelude.pure(Data_Either.applicativeEither)(LinesAdjacency.value);
              };
              if (v1 === "TrianglesAdjacency") {
                  return Prelude.pure(Data_Either.applicativeEither)(TrianglesAdjacency.value);
              };
              throw new Error("Failed pattern match at IR line 1001, column 1 - line 1012, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonSlot = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Slot") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("slotName"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeStrMap(decodeJsonInputType))(v)("slotStreams"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeStrMap(decodeJsonInputType))(v)("slotUniforms"))(function (v4) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonFetchPrimitive)(v)("slotPrimitive"))(function (v5) {
                                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonInt))(v)("slotPrograms"))(function (v6) {
                                      return Prelude.pure(Data_Either.applicativeEither)(new Slot({
                                          slotName: v2, 
                                          slotStreams: v3, 
                                          slotUniforms: v4, 
                                          slotPrimitive: v5, 
                                          slotPrograms: v6
                                      }));
                                  });
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1458, column 1 - line 1477, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonEdgeMode = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Repeat") {
                  return Prelude.pure(Data_Either.applicativeEither)(Repeat.value);
              };
              if (v1 === "MirroredRepeat") {
                  return Prelude.pure(Data_Either.applicativeEither)(MirroredRepeat.value);
              };
              if (v1 === "ClampToEdge") {
                  return Prelude.pure(Data_Either.applicativeEither)(ClampToEdge.value);
              };
              if (v1 === "ClampToBorder") {
                  return Prelude.pure(Data_Either.applicativeEither)(ClampToBorder.value);
              };
              throw new Error("Failed pattern match at IR line 1218, column 1 - line 1228, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonCullMode = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "CullNone") {
                  return Prelude.pure(Data_Either.applicativeEither)(CullNone.value);
              };
              if (v1 === "CullFront") {
                  return Prelude["<$>"](Data_Either.functorEither)(CullFront.create)(Data_Argonaut_Combinators[".?"](decodeJsonFrontFace)(v)("arg0"));
              };
              if (v1 === "CullBack") {
                  return Prelude["<$>"](Data_Either.functorEither)(CullBack.create)(Data_Argonaut_Combinators[".?"](decodeJsonFrontFace)(v)("arg0"));
              };
              throw new Error("Failed pattern match at IR line 779, column 1 - line 788, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonRasterContext = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "PointCtx") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(PointCtx.create)(Data_Argonaut_Combinators[".?"](decodeJsonPointSize)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(v)("arg1")))(Data_Argonaut_Combinators[".?"](decodeJsonPointSpriteCoordOrigin)(v)("arg2"));
              };
              if (v1 === "LineCtx") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(LineCtx.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(v)("arg0")))(Data_Argonaut_Combinators[".?"](decodeJsonProvokingVertex)(v)("arg1"));
              };
              if (v1 === "TriangleCtx") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(TriangleCtx.create)(Data_Argonaut_Combinators[".?"](decodeJsonCullMode)(v)("arg0")))(Data_Argonaut_Combinators[".?"](decodeJsonPolygonMode)(v)("arg1")))(Data_Argonaut_Combinators[".?"](decodeJsonPolygonOffset)(v)("arg2")))(Data_Argonaut_Combinators[".?"](decodeJsonProvokingVertex)(v)("arg3"));
              };
              throw new Error("Failed pattern match at IR line 1090, column 1 - line 1099, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonComparisonFunction = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Never") {
                  return Prelude.pure(Data_Either.applicativeEither)(Never.value);
              };
              if (v1 === "Less") {
                  return Prelude.pure(Data_Either.applicativeEither)(Less.value);
              };
              if (v1 === "Equal") {
                  return Prelude.pure(Data_Either.applicativeEither)(Equal.value);
              };
              if (v1 === "Lequal") {
                  return Prelude.pure(Data_Either.applicativeEither)(Lequal.value);
              };
              if (v1 === "Greater") {
                  return Prelude.pure(Data_Either.applicativeEither)(Greater.value);
              };
              if (v1 === "Notequal") {
                  return Prelude.pure(Data_Either.applicativeEither)(Notequal.value);
              };
              if (v1 === "Gequal") {
                  return Prelude.pure(Data_Either.applicativeEither)(Gequal.value);
              };
              if (v1 === "Always") {
                  return Prelude.pure(Data_Either.applicativeEither)(Always.value);
              };
              throw new Error("Failed pattern match at IR line 799, column 1 - line 813, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonSamplerDescriptor = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "SamplerDescriptor") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonEdgeMode)(v)("samplerWrapS"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(decodeJsonEdgeMode))(v)("samplerWrapT"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(decodeJsonEdgeMode))(v)("samplerWrapR"))(function (v4) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonFilter)(v)("samplerMinFilter"))(function (v5) {
                                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonFilter)(v)("samplerMagFilter"))(function (v6) {
                                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonValue)(v)("samplerBorderColor"))(function (v7) {
                                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(v)("samplerMinLod"))(function (v8) {
                                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(v)("samplerMaxLod"))(function (v9) {
                                                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(v)("samplerLodBias"))(function (v10) {
                                                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(decodeJsonComparisonFunction))(v)("samplerCompareFunc"))(function (v11) {
                                                          return Prelude.pure(Data_Either.applicativeEither)(new SamplerDescriptor({
                                                              samplerWrapS: v2, 
                                                              samplerWrapT: v3, 
                                                              samplerWrapR: v4, 
                                                              samplerMinFilter: v5, 
                                                              samplerMagFilter: v6, 
                                                              samplerBorderColor: v7, 
                                                              samplerMinLod: v8, 
                                                              samplerMaxLod: v9, 
                                                              samplerLodBias: v10, 
                                                              samplerCompareFunc: v11
                                                          }));
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1328, column 1 - line 1357, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonStencilTest = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "StencilTest") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonComparisonFunction)(v)("stencilComparision"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("stencilReference"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("stencilMask"))(function (v4) {
                              return Prelude.pure(Data_Either.applicativeEither)(new StencilTest({
                                  stencilComparision: v2, 
                                  stencilReference: v3, 
                                  stencilMask: v4
                              }));
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 967, column 1 - line 982, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonStencilTests = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "StencilTests") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(StencilTests.create)(Data_Argonaut_Combinators[".?"](decodeJsonStencilTest)(v)("arg0")))(Data_Argonaut_Combinators[".?"](decodeJsonStencilTest)(v)("arg1"));
              };
              throw new Error("Failed pattern match at IR line 986, column 1 - line 993, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonColorArity = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Red") {
                  return Prelude.pure(Data_Either.applicativeEither)(Red.value);
              };
              if (v1 === "RG") {
                  return Prelude.pure(Data_Either.applicativeEither)(RG.value);
              };
              if (v1 === "RGB") {
                  return Prelude.pure(Data_Either.applicativeEither)(RGB.value);
              };
              if (v1 === "RGBA") {
                  return Prelude.pure(Data_Either.applicativeEither)(RGBA.value);
              };
              throw new Error("Failed pattern match at IR line 1034, column 1 - line 1044, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonTextureDataType = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "FloatT") {
                  return Prelude["<$>"](Data_Either.functorEither)(FloatT.create)(Data_Argonaut_Combinators[".?"](decodeJsonColorArity)(v)("arg0"));
              };
              if (v1 === "IntT") {
                  return Prelude["<$>"](Data_Either.functorEither)(IntT.create)(Data_Argonaut_Combinators[".?"](decodeJsonColorArity)(v)("arg0"));
              };
              if (v1 === "WordT") {
                  return Prelude["<$>"](Data_Either.functorEither)(WordT.create)(Data_Argonaut_Combinators[".?"](decodeJsonColorArity)(v)("arg0"));
              };
              if (v1 === "ShadowT") {
                  return Prelude.pure(Data_Either.applicativeEither)(ShadowT.value);
              };
              throw new Error("Failed pattern match at IR line 1142, column 1 - line 1152, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonTextureType = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Texture1D") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Texture1D.create)(Data_Argonaut_Combinators[".?"](decodeJsonTextureDataType)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg1"));
              };
              if (v1 === "Texture2D") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Texture2D.create)(Data_Argonaut_Combinators[".?"](decodeJsonTextureDataType)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg1"));
              };
              if (v1 === "Texture3D") {
                  return Prelude["<$>"](Data_Either.functorEither)(Texture3D.create)(Data_Argonaut_Combinators[".?"](decodeJsonTextureDataType)(v)("arg0"));
              };
              if (v1 === "TextureCube") {
                  return Prelude["<$>"](Data_Either.functorEither)(TextureCube.create)(Data_Argonaut_Combinators[".?"](decodeJsonTextureDataType)(v)("arg0"));
              };
              if (v1 === "TextureRect") {
                  return Prelude["<$>"](Data_Either.functorEither)(TextureRect.create)(Data_Argonaut_Combinators[".?"](decodeJsonTextureDataType)(v)("arg0"));
              };
              if (v1 === "Texture2DMS") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Texture2DMS.create)(Data_Argonaut_Combinators[".?"](decodeJsonTextureDataType)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg1")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg2")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonBoolean)(v)("arg3"));
              };
              if (v1 === "TextureBuffer") {
                  return Prelude["<$>"](Data_Either.functorEither)(TextureBuffer.create)(Data_Argonaut_Combinators[".?"](decodeJsonTextureDataType)(v)("arg0"));
              };
              throw new Error("Failed pattern match at IR line 1162, column 1 - line 1175, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonTextureDescriptor = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "TextureDescriptor") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonTextureType)(v)("textureType"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonValue)(v)("textureSize"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonImageSemantic)(v)("textureSemantic"))(function (v4) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonSamplerDescriptor)(v)("textureSampler"))(function (v5) {
                                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("textureBaseLevel"))(function (v6) {
                                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("textureMaxLevel"))(function (v7) {
                                          return Prelude.pure(Data_Either.applicativeEither)(new TextureDescriptor({
                                              textureType: v2, 
                                              textureSize: v3, 
                                              textureSemantic: v4, 
                                              textureSampler: v5, 
                                              textureBaseLevel: v6, 
                                              textureMaxLevel: v7
                                          }));
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1369, column 1 - line 1390, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonClearImage = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "ClearImage") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonImageSemantic)(v)("imageSemantic"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonValue)(v)("clearValue"))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)(new ClearImage({
                              imageSemantic: v2, 
                              clearValue: v3
                          }));
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1264, column 1 - line 1277, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonBlendingFactor = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Zero") {
                  return Prelude.pure(Data_Either.applicativeEither)(Zero.value);
              };
              if (v1 === "One") {
                  return Prelude.pure(Data_Either.applicativeEither)(One.value);
              };
              if (v1 === "SrcColor") {
                  return Prelude.pure(Data_Either.applicativeEither)(SrcColor.value);
              };
              if (v1 === "OneMinusSrcColor") {
                  return Prelude.pure(Data_Either.applicativeEither)(OneMinusSrcColor.value);
              };
              if (v1 === "DstColor") {
                  return Prelude.pure(Data_Either.applicativeEither)(DstColor.value);
              };
              if (v1 === "OneMinusDstColor") {
                  return Prelude.pure(Data_Either.applicativeEither)(OneMinusDstColor.value);
              };
              if (v1 === "SrcAlpha") {
                  return Prelude.pure(Data_Either.applicativeEither)(SrcAlpha.value);
              };
              if (v1 === "OneMinusSrcAlpha") {
                  return Prelude.pure(Data_Either.applicativeEither)(OneMinusSrcAlpha.value);
              };
              if (v1 === "DstAlpha") {
                  return Prelude.pure(Data_Either.applicativeEither)(DstAlpha.value);
              };
              if (v1 === "OneMinusDstAlpha") {
                  return Prelude.pure(Data_Either.applicativeEither)(OneMinusDstAlpha.value);
              };
              if (v1 === "ConstantColor") {
                  return Prelude.pure(Data_Either.applicativeEither)(ConstantColor.value);
              };
              if (v1 === "OneMinusConstantColor") {
                  return Prelude.pure(Data_Either.applicativeEither)(OneMinusConstantColor.value);
              };
              if (v1 === "ConstantAlpha") {
                  return Prelude.pure(Data_Either.applicativeEither)(ConstantAlpha.value);
              };
              if (v1 === "OneMinusConstantAlpha") {
                  return Prelude.pure(Data_Either.applicativeEither)(OneMinusConstantAlpha.value);
              };
              if (v1 === "SrcAlphaSaturate") {
                  return Prelude.pure(Data_Either.applicativeEither)(SrcAlphaSaturate.value);
              };
              throw new Error("Failed pattern match at IR line 875, column 1 - line 896, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonBlendEquation = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "FuncAdd") {
                  return Prelude.pure(Data_Either.applicativeEither)(FuncAdd.value);
              };
              if (v1 === "FuncSubtract") {
                  return Prelude.pure(Data_Either.applicativeEither)(FuncSubtract.value);
              };
              if (v1 === "FuncReverseSubtract") {
                  return Prelude.pure(Data_Either.applicativeEither)(FuncReverseSubtract.value);
              };
              if (v1 === "Min") {
                  return Prelude.pure(Data_Either.applicativeEither)(Min.value);
              };
              if (v1 === "Max") {
                  return Prelude.pure(Data_Either.applicativeEither)(Max.value);
              };
              throw new Error("Failed pattern match at IR line 846, column 1 - line 857, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonBlending = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "NoBlending") {
                  return Prelude.pure(Data_Either.applicativeEither)(NoBlending.value);
              };
              if (v1 === "BlendLogicOp") {
                  return Prelude["<$>"](Data_Either.functorEither)(BlendLogicOp.create)(Data_Argonaut_Combinators[".?"](decodeJsonLogicOperation)(v)("arg0"));
              };
              if (v1 === "Blend") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonBlendEquation)(v)("colorEqSrc"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonBlendEquation)(v)("alphaEqSrc"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonBlendingFactor)(v)("colorFSrc"))(function (v4) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonBlendingFactor)(v)("colorFDst"))(function (v5) {
                                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonBlendingFactor)(v)("alphaFSrc"))(function (v6) {
                                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonBlendingFactor)(v)("alphaFDst"))(function (v7) {
                                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](LinearBase.decodeJsonV4(Data_Argonaut_Decode.decodeJsonNumber))(v)("color"))(function (v8) {
                                              return Prelude.pure(Data_Either.applicativeEither)(new Blend({
                                                  colorEqSrc: v2, 
                                                  alphaEqSrc: v3, 
                                                  colorFSrc: v4, 
                                                  colorFDst: v5, 
                                                  alphaFSrc: v6, 
                                                  alphaFDst: v7, 
                                                  color: v8
                                              }));
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1059, column 1 - line 1084, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonFragmentOperation = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "DepthOp") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(DepthOp.create)(Data_Argonaut_Combinators[".?"](decodeJsonComparisonFunction)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonBoolean)(v)("arg1"));
              };
              if (v1 === "StencilOp") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(StencilOp.create)(Data_Argonaut_Combinators[".?"](decodeJsonStencilTests)(v)("arg0")))(Data_Argonaut_Combinators[".?"](decodeJsonStencilOps)(v)("arg1")))(Data_Argonaut_Combinators[".?"](decodeJsonStencilOps)(v)("arg2"));
              };
              if (v1 === "ColorOp") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(ColorOp.create)(Data_Argonaut_Combinators[".?"](decodeJsonBlending)(v)("arg0")))(Data_Argonaut_Combinators[".?"](decodeJsonValue)(v)("arg1"));
              };
              throw new Error("Failed pattern match at IR line 1105, column 1 - line 1114, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonBackend = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "WebGL1") {
                  return Prelude.pure(Data_Either.applicativeEither)(WebGL1.value);
              };
              if (v1 === "OpenGL33") {
                  return Prelude.pure(Data_Either.applicativeEither)(OpenGL33.value);
              };
              throw new Error("Failed pattern match at IR line 1548, column 1 - line 1556, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonArrayValue = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "VBoolArray") {
                  return Prelude["<$>"](Data_Either.functorEither)(VBoolArray.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonBoolean))(v)("arg0"));
              };
              if (v1 === "VIntArray") {
                  return Prelude["<$>"](Data_Either.functorEither)(VIntArray.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VWordArray") {
                  return Prelude["<$>"](Data_Either.functorEither)(VWordArray.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VFloatArray") {
                  return Prelude["<$>"](Data_Either.functorEither)(VFloatArray.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(v)("arg0"));
              };
              throw new Error("Failed pattern match at IR line 493, column 1 - line 503, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonStreamData = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "StreamData") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeStrMap(decodeJsonArrayValue))(v)("streamData"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeStrMap(decodeJsonInputType))(v)("streamType"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonFetchPrimitive)(v)("streamPrimitive"))(function (v4) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonInt))(v)("streamPrograms"))(function (v5) {
                                  return Prelude.pure(Data_Either.applicativeEither)(new StreamData({
                                      streamData: v2, 
                                      streamType: v3, 
                                      streamPrimitive: v4, 
                                      streamPrograms: v5
                                  }));
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1487, column 1 - line 1504, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonAccumulationContext = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "AccumulationContext") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(v)("accViewportName"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeList(decodeJsonFragmentOperation))(v)("accOperations"))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)(new AccumulationContext({
                              accViewportName: v2, 
                              accOperations: v3
                          }));
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1122, column 1 - line 1135, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonCommand = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "SetRasterContext") {
                  return Prelude["<$>"](Data_Either.functorEither)(SetRasterContext.create)(Data_Argonaut_Combinators[".?"](decodeJsonRasterContext)(v)("arg0"));
              };
              if (v1 === "SetAccumulationContext") {
                  return Prelude["<$>"](Data_Either.functorEither)(SetAccumulationContext.create)(Data_Argonaut_Combinators[".?"](decodeJsonAccumulationContext)(v)("arg0"));
              };
              if (v1 === "SetRenderTarget") {
                  return Prelude["<$>"](Data_Either.functorEither)(SetRenderTarget.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "SetProgram") {
                  return Prelude["<$>"](Data_Either.functorEither)(SetProgram.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "SetSamplerUniform") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(SetSamplerUniform.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg1"));
              };
              if (v1 === "SetTexture") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(SetTexture.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg1"));
              };
              if (v1 === "SetSampler") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(SetSampler.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonInt))(v)("arg1"));
              };
              if (v1 === "RenderSlot") {
                  return Prelude["<$>"](Data_Either.functorEither)(RenderSlot.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "RenderStream") {
                  return Prelude["<$>"](Data_Either.functorEither)(RenderStream.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "ClearRenderTarget") {
                  return Prelude["<$>"](Data_Either.functorEither)(ClearRenderTarget.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonClearImage))(v)("arg0"));
              };
              if (v1 === "GenerateMipMap") {
                  return Prelude["<$>"](Data_Either.functorEither)(GenerateMipMap.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "SaveImage") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(SaveImage.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg0")))(Data_Argonaut_Combinators[".?"](decodeJsonImageRef)(v)("arg1"));
              };
              if (v1 === "LoadImage") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(LoadImage.create)(Data_Argonaut_Combinators[".?"](decodeJsonImageRef)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("arg1"));
              };
              throw new Error("Failed pattern match at IR line 1293, column 1 - line 1312, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonPipeline = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Pipeline") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonBackend)(v)("backend"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonTextureDescriptor))(v)("textures"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonSamplerDescriptor))(v)("samplers"))(function (v4) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonRenderTarget))(v)("targets"))(function (v5) {
                                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonProgram))(v)("programs"))(function (v6) {
                                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonSlot))(v)("slots"))(function (v7) {
                                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonStreamData))(v)("streams"))(function (v8) {
                                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonCommand))(v)("commands"))(function (v9) {
                                                  return Prelude.pure(Data_Either.applicativeEither)(new Pipeline({
                                                      backend: v2, 
                                                      textures: v3, 
                                                      samplers: v4, 
                                                      targets: v5, 
                                                      programs: v6, 
                                                      slots: v7, 
                                                      streams: v8, 
                                                      commands: v9
                                                  }));
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at IR line 1570, column 1 - line 1593, column 11: " + [ v1.constructor.name ]);
          });
      });
  });
  exports["Pipeline"] = Pipeline;
  exports["WebGL1"] = WebGL1;
  exports["OpenGL33"] = OpenGL33;
  exports["RenderTarget"] = RenderTarget;
  exports["TargetItem"] = TargetItem;
  exports["StreamData"] = StreamData;
  exports["Slot"] = Slot;
  exports["Program"] = Program;
  exports["Parameter"] = Parameter;
  exports["TextureDescriptor"] = TextureDescriptor;
  exports["SamplerDescriptor"] = SamplerDescriptor;
  exports["SetRasterContext"] = SetRasterContext;
  exports["SetAccumulationContext"] = SetAccumulationContext;
  exports["SetRenderTarget"] = SetRenderTarget;
  exports["SetProgram"] = SetProgram;
  exports["SetSamplerUniform"] = SetSamplerUniform;
  exports["SetTexture"] = SetTexture;
  exports["SetSampler"] = SetSampler;
  exports["RenderSlot"] = RenderSlot;
  exports["RenderStream"] = RenderStream;
  exports["ClearRenderTarget"] = ClearRenderTarget;
  exports["GenerateMipMap"] = GenerateMipMap;
  exports["SaveImage"] = SaveImage;
  exports["LoadImage"] = LoadImage;
  exports["ClearImage"] = ClearImage;
  exports["TextureImage"] = TextureImage;
  exports["Framebuffer"] = Framebuffer;
  exports["Depth"] = Depth;
  exports["Stencil"] = Stencil;
  exports["Color"] = Color;
  exports["Repeat"] = Repeat;
  exports["MirroredRepeat"] = MirroredRepeat;
  exports["ClampToEdge"] = ClampToEdge;
  exports["ClampToBorder"] = ClampToBorder;
  exports["Nearest"] = Nearest;
  exports["Linear"] = Linear;
  exports["NearestMipmapNearest"] = NearestMipmapNearest;
  exports["NearestMipmapLinear"] = NearestMipmapLinear;
  exports["LinearMipmapNearest"] = LinearMipmapNearest;
  exports["LinearMipmapLinear"] = LinearMipmapLinear;
  exports["Texture1D"] = Texture1D;
  exports["Texture2D"] = Texture2D;
  exports["Texture3D"] = Texture3D;
  exports["TextureCube"] = TextureCube;
  exports["TextureRect"] = TextureRect;
  exports["Texture2DMS"] = Texture2DMS;
  exports["TextureBuffer"] = TextureBuffer;
  exports["FloatT"] = FloatT;
  exports["IntT"] = IntT;
  exports["WordT"] = WordT;
  exports["ShadowT"] = ShadowT;
  exports["AccumulationContext"] = AccumulationContext;
  exports["DepthOp"] = DepthOp;
  exports["StencilOp"] = StencilOp;
  exports["ColorOp"] = ColorOp;
  exports["PointCtx"] = PointCtx;
  exports["LineCtx"] = LineCtx;
  exports["TriangleCtx"] = TriangleCtx;
  exports["NoBlending"] = NoBlending;
  exports["BlendLogicOp"] = BlendLogicOp;
  exports["Blend"] = Blend;
  exports["Red"] = Red;
  exports["RG"] = RG;
  exports["RGB"] = RGB;
  exports["RGBA"] = RGBA;
  exports["Points"] = Points;
  exports["Lines"] = Lines;
  exports["Triangles"] = Triangles;
  exports["LinesAdjacency"] = LinesAdjacency;
  exports["TrianglesAdjacency"] = TrianglesAdjacency;
  exports["StencilTests"] = StencilTests;
  exports["StencilTest"] = StencilTest;
  exports["StencilOps"] = StencilOps;
  exports["Clear"] = Clear;
  exports["And"] = And;
  exports["AndReverse"] = AndReverse;
  exports["Copy"] = Copy;
  exports["AndInverted"] = AndInverted;
  exports["Noop"] = Noop;
  exports["Xor"] = Xor;
  exports["Or"] = Or;
  exports["Nor"] = Nor;
  exports["Equiv"] = Equiv;
  exports["Invert"] = Invert;
  exports["OrReverse"] = OrReverse;
  exports["CopyInverted"] = CopyInverted;
  exports["OrInverted"] = OrInverted;
  exports["Nand"] = Nand;
  exports["Zero"] = Zero;
  exports["One"] = One;
  exports["SrcColor"] = SrcColor;
  exports["OneMinusSrcColor"] = OneMinusSrcColor;
  exports["DstColor"] = DstColor;
  exports["OneMinusDstColor"] = OneMinusDstColor;
  exports["SrcAlpha"] = SrcAlpha;
  exports["OneMinusSrcAlpha"] = OneMinusSrcAlpha;
  exports["DstAlpha"] = DstAlpha;
  exports["OneMinusDstAlpha"] = OneMinusDstAlpha;
  exports["ConstantColor"] = ConstantColor;
  exports["OneMinusConstantColor"] = OneMinusConstantColor;
  exports["ConstantAlpha"] = ConstantAlpha;
  exports["OneMinusConstantAlpha"] = OneMinusConstantAlpha;
  exports["SrcAlphaSaturate"] = SrcAlphaSaturate;
  exports["FuncAdd"] = FuncAdd;
  exports["FuncSubtract"] = FuncSubtract;
  exports["FuncReverseSubtract"] = FuncReverseSubtract;
  exports["Min"] = Min;
  exports["Max"] = Max;
  exports["OpZero"] = OpZero;
  exports["OpKeep"] = OpKeep;
  exports["OpReplace"] = OpReplace;
  exports["OpIncr"] = OpIncr;
  exports["OpIncrWrap"] = OpIncrWrap;
  exports["OpDecr"] = OpDecr;
  exports["OpDecrWrap"] = OpDecrWrap;
  exports["OpInvert"] = OpInvert;
  exports["Never"] = Never;
  exports["Less"] = Less;
  exports["Equal"] = Equal;
  exports["Lequal"] = Lequal;
  exports["Greater"] = Greater;
  exports["Notequal"] = Notequal;
  exports["Gequal"] = Gequal;
  exports["Always"] = Always;
  exports["CullNone"] = CullNone;
  exports["CullFront"] = CullFront;
  exports["CullBack"] = CullBack;
  exports["FirstVertex"] = FirstVertex;
  exports["LastVertex"] = LastVertex;
  exports["PolygonPoint"] = PolygonPoint;
  exports["PolygonLine"] = PolygonLine;
  exports["PolygonFill"] = PolygonFill;
  exports["CCW"] = CCW;
  exports["CW"] = CW;
  exports["NoOffset"] = NoOffset;
  exports["Offset"] = Offset;
  exports["PointSize"] = PointSize;
  exports["ProgramPointSize"] = ProgramPointSize;
  exports["LowerLeft"] = LowerLeft;
  exports["UpperLeft"] = UpperLeft;
  exports["Bool"] = Bool;
  exports["V2B"] = V2B;
  exports["V3B"] = V3B;
  exports["V4B"] = V4B;
  exports["Word"] = Word;
  exports["V2U"] = V2U;
  exports["V3U"] = V3U;
  exports["V4U"] = V4U;
  exports["Int"] = Int;
  exports["V2I"] = V2I;
  exports["V3I"] = V3I;
  exports["V4I"] = V4I;
  exports["Float"] = Float;
  exports["V2F"] = V2F;
  exports["V3F"] = V3F;
  exports["V4F"] = V4F;
  exports["M22F"] = M22F;
  exports["M23F"] = M23F;
  exports["M24F"] = M24F;
  exports["M32F"] = M32F;
  exports["M33F"] = M33F;
  exports["M34F"] = M34F;
  exports["M42F"] = M42F;
  exports["M43F"] = M43F;
  exports["M44F"] = M44F;
  exports["STexture1D"] = STexture1D;
  exports["STexture2D"] = STexture2D;
  exports["STextureCube"] = STextureCube;
  exports["STexture1DArray"] = STexture1DArray;
  exports["STexture2DArray"] = STexture2DArray;
  exports["STexture2DRect"] = STexture2DRect;
  exports["FTexture1D"] = FTexture1D;
  exports["FTexture2D"] = FTexture2D;
  exports["FTexture3D"] = FTexture3D;
  exports["FTextureCube"] = FTextureCube;
  exports["FTexture1DArray"] = FTexture1DArray;
  exports["FTexture2DArray"] = FTexture2DArray;
  exports["FTexture2DMS"] = FTexture2DMS;
  exports["FTexture2DMSArray"] = FTexture2DMSArray;
  exports["FTextureBuffer"] = FTextureBuffer;
  exports["FTexture2DRect"] = FTexture2DRect;
  exports["ITexture1D"] = ITexture1D;
  exports["ITexture2D"] = ITexture2D;
  exports["ITexture3D"] = ITexture3D;
  exports["ITextureCube"] = ITextureCube;
  exports["ITexture1DArray"] = ITexture1DArray;
  exports["ITexture2DArray"] = ITexture2DArray;
  exports["ITexture2DMS"] = ITexture2DMS;
  exports["ITexture2DMSArray"] = ITexture2DMSArray;
  exports["ITextureBuffer"] = ITextureBuffer;
  exports["ITexture2DRect"] = ITexture2DRect;
  exports["UTexture1D"] = UTexture1D;
  exports["UTexture2D"] = UTexture2D;
  exports["UTexture3D"] = UTexture3D;
  exports["UTextureCube"] = UTextureCube;
  exports["UTexture1DArray"] = UTexture1DArray;
  exports["UTexture2DArray"] = UTexture2DArray;
  exports["UTexture2DMS"] = UTexture2DMS;
  exports["UTexture2DMSArray"] = UTexture2DMSArray;
  exports["UTextureBuffer"] = UTextureBuffer;
  exports["UTexture2DRect"] = UTexture2DRect;
  exports["VBool"] = VBool;
  exports["VV2B"] = VV2B;
  exports["VV3B"] = VV3B;
  exports["VV4B"] = VV4B;
  exports["VWord"] = VWord;
  exports["VV2U"] = VV2U;
  exports["VV3U"] = VV3U;
  exports["VV4U"] = VV4U;
  exports["VInt"] = VInt;
  exports["VV2I"] = VV2I;
  exports["VV3I"] = VV3I;
  exports["VV4I"] = VV4I;
  exports["VFloat"] = VFloat;
  exports["VV2F"] = VV2F;
  exports["VV3F"] = VV3F;
  exports["VV4F"] = VV4F;
  exports["VM22F"] = VM22F;
  exports["VM23F"] = VM23F;
  exports["VM24F"] = VM24F;
  exports["VM32F"] = VM32F;
  exports["VM33F"] = VM33F;
  exports["VM34F"] = VM34F;
  exports["VM42F"] = VM42F;
  exports["VM43F"] = VM43F;
  exports["VM44F"] = VM44F;
  exports["VBoolArray"] = VBoolArray;
  exports["VIntArray"] = VIntArray;
  exports["VWordArray"] = VWordArray;
  exports["VFloatArray"] = VFloatArray;
  exports["genericFetchPrimitive"] = genericFetchPrimitive;
  exports["showFetchPrimitive"] = showFetchPrimitive;
  exports["eqFetchPrimitive"] = eqFetchPrimitive;
  exports["genericColorArity"] = genericColorArity;
  exports["genericTextureDataType"] = genericTextureDataType;
  exports["showTextureDataType"] = showTextureDataType;
  exports["decodeJsonArrayValue"] = decodeJsonArrayValue;
  exports["decodeJsonValue"] = decodeJsonValue;
  exports["decodeJsonInputType"] = decodeJsonInputType;
  exports["decodeJsonPointSpriteCoordOrigin"] = decodeJsonPointSpriteCoordOrigin;
  exports["decodeJsonPointSize"] = decodeJsonPointSize;
  exports["decodeJsonPolygonOffset"] = decodeJsonPolygonOffset;
  exports["decodeJsonFrontFace"] = decodeJsonFrontFace;
  exports["decodeJsonPolygonMode"] = decodeJsonPolygonMode;
  exports["decodeJsonProvokingVertex"] = decodeJsonProvokingVertex;
  exports["decodeJsonCullMode"] = decodeJsonCullMode;
  exports["decodeJsonComparisonFunction"] = decodeJsonComparisonFunction;
  exports["decodeJsonStencilOperation"] = decodeJsonStencilOperation;
  exports["decodeJsonBlendEquation"] = decodeJsonBlendEquation;
  exports["decodeJsonBlendingFactor"] = decodeJsonBlendingFactor;
  exports["decodeJsonLogicOperation"] = decodeJsonLogicOperation;
  exports["decodeJsonStencilOps"] = decodeJsonStencilOps;
  exports["decodeJsonStencilTest"] = decodeJsonStencilTest;
  exports["decodeJsonStencilTests"] = decodeJsonStencilTests;
  exports["decodeJsonFetchPrimitive"] = decodeJsonFetchPrimitive;
  exports["decodeJsonColorArity"] = decodeJsonColorArity;
  exports["decodeJsonBlending"] = decodeJsonBlending;
  exports["decodeJsonRasterContext"] = decodeJsonRasterContext;
  exports["decodeJsonFragmentOperation"] = decodeJsonFragmentOperation;
  exports["decodeJsonAccumulationContext"] = decodeJsonAccumulationContext;
  exports["decodeJsonTextureDataType"] = decodeJsonTextureDataType;
  exports["decodeJsonTextureType"] = decodeJsonTextureType;
  exports["decodeJsonFilter"] = decodeJsonFilter;
  exports["decodeJsonEdgeMode"] = decodeJsonEdgeMode;
  exports["decodeJsonImageSemantic"] = decodeJsonImageSemantic;
  exports["decodeJsonImageRef"] = decodeJsonImageRef;
  exports["decodeJsonClearImage"] = decodeJsonClearImage;
  exports["decodeJsonCommand"] = decodeJsonCommand;
  exports["decodeJsonSamplerDescriptor"] = decodeJsonSamplerDescriptor;
  exports["decodeJsonTextureDescriptor"] = decodeJsonTextureDescriptor;
  exports["decodeJsonParameter"] = decodeJsonParameter;
  exports["decodeJsonProgram"] = decodeJsonProgram;
  exports["decodeJsonSlot"] = decodeJsonSlot;
  exports["decodeJsonStreamData"] = decodeJsonStreamData;
  exports["decodeJsonTargetItem"] = decodeJsonTargetItem;
  exports["decodeJsonRenderTarget"] = decodeJsonRenderTarget;
  exports["decodeJsonBackend"] = decodeJsonBackend;
  exports["decodeJsonPipeline"] = decodeJsonPipeline;;
 
})(PS["IR"] = PS["IR"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Data_StrMap = PS["Data.StrMap"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Data_Map = PS["Data.Map"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var Data_Int = PS["Data.Int"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var IR = PS["IR"];
  var LinearBase = PS["LinearBase"];     
  var TextureData = (function () {
      function TextureData(value0) {
          this.value0 = value0;
      };
      TextureData.create = function (value0) {
          return new TextureData(value0);
      };
      return TextureData;
  })();
  var TFloat = (function () {
      function TFloat() {

      };
      TFloat.value = new TFloat();
      return TFloat;
  })();
  var TV2F = (function () {
      function TV2F() {

      };
      TV2F.value = new TV2F();
      return TV2F;
  })();
  var TV3F = (function () {
      function TV3F() {

      };
      TV3F.value = new TV3F();
      return TV3F;
  })();
  var TV4F = (function () {
      function TV4F() {

      };
      TV4F.value = new TV4F();
      return TV4F;
  })();
  var TM22F = (function () {
      function TM22F() {

      };
      TM22F.value = new TM22F();
      return TM22F;
  })();
  var TM33F = (function () {
      function TM33F() {

      };
      TM33F.value = new TM33F();
      return TM33F;
  })();
  var TM44F = (function () {
      function TM44F() {

      };
      TM44F.value = new TM44F();
      return TM44F;
  })();
  var ConstFloat = (function () {
      function ConstFloat(value0) {
          this.value0 = value0;
      };
      ConstFloat.create = function (value0) {
          return new ConstFloat(value0);
      };
      return ConstFloat;
  })();
  var ConstV2F = (function () {
      function ConstV2F(value0) {
          this.value0 = value0;
      };
      ConstV2F.create = function (value0) {
          return new ConstV2F(value0);
      };
      return ConstV2F;
  })();
  var ConstV3F = (function () {
      function ConstV3F(value0) {
          this.value0 = value0;
      };
      ConstV3F.create = function (value0) {
          return new ConstV3F(value0);
      };
      return ConstV3F;
  })();
  var ConstV4F = (function () {
      function ConstV4F(value0) {
          this.value0 = value0;
      };
      ConstV4F.create = function (value0) {
          return new ConstV4F(value0);
      };
      return ConstV4F;
  })();
  var ConstM22F = (function () {
      function ConstM22F(value0) {
          this.value0 = value0;
      };
      ConstM22F.create = function (value0) {
          return new ConstM22F(value0);
      };
      return ConstM22F;
  })();
  var ConstM33F = (function () {
      function ConstM33F(value0) {
          this.value0 = value0;
      };
      ConstM33F.create = function (value0) {
          return new ConstM33F(value0);
      };
      return ConstM33F;
  })();
  var ConstM44F = (function () {
      function ConstM44F(value0) {
          this.value0 = value0;
      };
      ConstM44F.create = function (value0) {
          return new ConstM44F(value0);
      };
      return ConstM44F;
  })();
  var Stream = (function () {
      function Stream(value0) {
          this.value0 = value0;
      };
      Stream.create = function (value0) {
          return new Stream(value0);
      };
      return Stream;
  })();
  var TriangleStrip = (function () {
      function TriangleStrip() {

      };
      TriangleStrip.value = new TriangleStrip();
      return TriangleStrip;
  })();
  var TriangleList = (function () {
      function TriangleList() {

      };
      TriangleList.value = new TriangleList();
      return TriangleList;
  })();
  var TriangleFan = (function () {
      function TriangleFan() {

      };
      TriangleFan.value = new TriangleFan();
      return TriangleFan;
  })();
  var LineStrip = (function () {
      function LineStrip() {

      };
      LineStrip.value = new LineStrip();
      return LineStrip;
  })();
  var LineList = (function () {
      function LineList() {

      };
      LineList.value = new LineList();
      return LineList;
  })();
  var LineLoop = (function () {
      function LineLoop() {

      };
      LineLoop.value = new LineLoop();
      return LineLoop;
  })();
  var PointList = (function () {
      function PointList() {

      };
      PointList.value = new PointList();
      return PointList;
  })();
  var Generate = (function () {
      function Generate() {

      };
      Generate.value = new Generate();
      return Generate;
  })();
  var Reorder = (function () {
      function Reorder() {

      };
      Reorder.value = new Reorder();
      return Reorder;
  })();
  var Ordered = (function () {
      function Ordered() {

      };
      Ordered.value = new Ordered();
      return Ordered;
  })();
  var UniBool = (function () {
      function UniBool(value0) {
          this.value0 = value0;
      };
      UniBool.create = function (value0) {
          return new UniBool(value0);
      };
      return UniBool;
  })();
  var UniV2B = (function () {
      function UniV2B(value0) {
          this.value0 = value0;
      };
      UniV2B.create = function (value0) {
          return new UniV2B(value0);
      };
      return UniV2B;
  })();
  var UniV3B = (function () {
      function UniV3B(value0) {
          this.value0 = value0;
      };
      UniV3B.create = function (value0) {
          return new UniV3B(value0);
      };
      return UniV3B;
  })();
  var UniV4B = (function () {
      function UniV4B(value0) {
          this.value0 = value0;
      };
      UniV4B.create = function (value0) {
          return new UniV4B(value0);
      };
      return UniV4B;
  })();
  var UniInt = (function () {
      function UniInt(value0) {
          this.value0 = value0;
      };
      UniInt.create = function (value0) {
          return new UniInt(value0);
      };
      return UniInt;
  })();
  var UniV2I = (function () {
      function UniV2I(value0) {
          this.value0 = value0;
      };
      UniV2I.create = function (value0) {
          return new UniV2I(value0);
      };
      return UniV2I;
  })();
  var UniV3I = (function () {
      function UniV3I(value0) {
          this.value0 = value0;
      };
      UniV3I.create = function (value0) {
          return new UniV3I(value0);
      };
      return UniV3I;
  })();
  var UniV4I = (function () {
      function UniV4I(value0) {
          this.value0 = value0;
      };
      UniV4I.create = function (value0) {
          return new UniV4I(value0);
      };
      return UniV4I;
  })();
  var UniFloat = (function () {
      function UniFloat(value0) {
          this.value0 = value0;
      };
      UniFloat.create = function (value0) {
          return new UniFloat(value0);
      };
      return UniFloat;
  })();
  var UniV2F = (function () {
      function UniV2F(value0) {
          this.value0 = value0;
      };
      UniV2F.create = function (value0) {
          return new UniV2F(value0);
      };
      return UniV2F;
  })();
  var UniV3F = (function () {
      function UniV3F(value0) {
          this.value0 = value0;
      };
      UniV3F.create = function (value0) {
          return new UniV3F(value0);
      };
      return UniV3F;
  })();
  var UniV4F = (function () {
      function UniV4F(value0) {
          this.value0 = value0;
      };
      UniV4F.create = function (value0) {
          return new UniV4F(value0);
      };
      return UniV4F;
  })();
  var UniM22F = (function () {
      function UniM22F(value0) {
          this.value0 = value0;
      };
      UniM22F.create = function (value0) {
          return new UniM22F(value0);
      };
      return UniM22F;
  })();
  var UniM33F = (function () {
      function UniM33F(value0) {
          this.value0 = value0;
      };
      UniM33F.create = function (value0) {
          return new UniM33F(value0);
      };
      return UniM33F;
  })();
  var UniM44F = (function () {
      function UniM44F(value0) {
          this.value0 = value0;
      };
      UniM44F.create = function (value0) {
          return new UniM44F(value0);
      };
      return UniM44F;
  })();
  var UniFTexture2D = (function () {
      function UniFTexture2D(value0) {
          this.value0 = value0;
      };
      UniFTexture2D.create = function (value0) {
          return new UniFTexture2D(value0);
      };
      return UniFTexture2D;
  })();
  var SBool = (function () {
      function SBool(value0) {
          this.value0 = value0;
      };
      SBool.create = function (value0) {
          return new SBool(value0);
      };
      return SBool;
  })();
  var SV2B = (function () {
      function SV2B(value0) {
          this.value0 = value0;
      };
      SV2B.create = function (value0) {
          return new SV2B(value0);
      };
      return SV2B;
  })();
  var SV3B = (function () {
      function SV3B(value0) {
          this.value0 = value0;
      };
      SV3B.create = function (value0) {
          return new SV3B(value0);
      };
      return SV3B;
  })();
  var SV4B = (function () {
      function SV4B(value0) {
          this.value0 = value0;
      };
      SV4B.create = function (value0) {
          return new SV4B(value0);
      };
      return SV4B;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SV2I = (function () {
      function SV2I(value0) {
          this.value0 = value0;
      };
      SV2I.create = function (value0) {
          return new SV2I(value0);
      };
      return SV2I;
  })();
  var SV3I = (function () {
      function SV3I(value0) {
          this.value0 = value0;
      };
      SV3I.create = function (value0) {
          return new SV3I(value0);
      };
      return SV3I;
  })();
  var SV4I = (function () {
      function SV4I(value0) {
          this.value0 = value0;
      };
      SV4I.create = function (value0) {
          return new SV4I(value0);
      };
      return SV4I;
  })();
  var SFloat = (function () {
      function SFloat(value0) {
          this.value0 = value0;
      };
      SFloat.create = function (value0) {
          return new SFloat(value0);
      };
      return SFloat;
  })();
  var SV2F = (function () {
      function SV2F(value0) {
          this.value0 = value0;
      };
      SV2F.create = function (value0) {
          return new SV2F(value0);
      };
      return SV2F;
  })();
  var SV3F = (function () {
      function SV3F(value0) {
          this.value0 = value0;
      };
      SV3F.create = function (value0) {
          return new SV3F(value0);
      };
      return SV3F;
  })();
  var SV4F = (function () {
      function SV4F(value0) {
          this.value0 = value0;
      };
      SV4F.create = function (value0) {
          return new SV4F(value0);
      };
      return SV4F;
  })();
  var SM22F = (function () {
      function SM22F(value0) {
          this.value0 = value0;
      };
      SM22F.create = function (value0) {
          return new SM22F(value0);
      };
      return SM22F;
  })();
  var SM33F = (function () {
      function SM33F(value0) {
          this.value0 = value0;
      };
      SM33F.create = function (value0) {
          return new SM33F(value0);
      };
      return SM33F;
  })();
  var SM44F = (function () {
      function SM44F(value0) {
          this.value0 = value0;
      };
      SM44F.create = function (value0) {
          return new SM44F(value0);
      };
      return SM44F;
  })();
  var SFTexture2D = (function () {
      function SFTexture2D(value0) {
          this.value0 = value0;
      };
      SFTexture2D.create = function (value0) {
          return new SFTexture2D(value0);
      };
      return SFTexture2D;
  })();
  var ArrWord8 = (function () {
      function ArrWord8() {

      };
      ArrWord8.value = new ArrWord8();
      return ArrWord8;
  })();
  var ArrWord16 = (function () {
      function ArrWord16() {

      };
      ArrWord16.value = new ArrWord16();
      return ArrWord16;
  })();
  var ArrInt8 = (function () {
      function ArrInt8() {

      };
      ArrInt8.value = new ArrInt8();
      return ArrInt8;
  })();
  var ArrInt16 = (function () {
      function ArrInt16() {

      };
      ArrInt16.value = new ArrInt16();
      return ArrInt16;
  })();
  var ArrFloat = (function () {
      function ArrFloat() {

      };
      ArrFloat.value = new ArrFloat();
      return ArrFloat;
  })();
  var $$Array = (function () {
      function Array(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Array.create = function (value0) {
          return function (value1) {
              return new Array(value0, value1);
          };
      };
      return Array;
  })();
  var GLSetVertexAttribArray = (function () {
      function GLSetVertexAttribArray(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      GLSetVertexAttribArray.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new GLSetVertexAttribArray(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return GLSetVertexAttribArray;
  })();
  var GLDrawArrays = (function () {
      function GLDrawArrays(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      GLDrawArrays.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new GLDrawArrays(value0, value1, value2);
              };
          };
      };
      return GLDrawArrays;
  })();
  var GLDrawElements = (function () {
      function GLDrawElements(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      GLDrawElements.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new GLDrawElements(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return GLDrawElements;
  })();
  var GLSetVertexAttrib = (function () {
      function GLSetVertexAttrib(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GLSetVertexAttrib.create = function (value0) {
          return function (value1) {
              return new GLSetVertexAttrib(value0, value1);
          };
      };
      return GLSetVertexAttrib;
  })();
  var GLSetUniform = (function () {
      function GLSetUniform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GLSetUniform.create = function (value0) {
          return function (value1) {
              return new GLSetUniform(value0, value1);
          };
      };
      return GLSetUniform;
  })();
  var GLBindTexture = (function () {
      function GLBindTexture(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      GLBindTexture.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new GLBindTexture(value0, value1, value2);
              };
          };
      };
      return GLBindTexture;
  })();
  var InputConnection = (function () {
      function InputConnection(value0) {
          this.value0 = value0;
      };
      InputConnection.create = function (value0) {
          return new InputConnection(value0);
      };
      return InputConnection;
  })();
  var NumberStorable = function (toArray) {
      this.toArray = toArray;
  };
  var IntStorable = function (toIntArray) {
      this.toIntArray = toIntArray;
  };
  var toIntArray = function (dict) {
      return dict.toIntArray;
  };
  var v2IntStorable = function (dictIntStorable) {
      return new IntStorable(function (v) {
          return Data_Array.concatMap(toIntArray(dictIntStorable))([ v.value0, v.value1 ]);
      });
  };
  var v3IntStorable = function (dictIntStorable) {
      return new IntStorable(function (v) {
          return Data_Array.concatMap(toIntArray(dictIntStorable))([ v.value0, v.value1, v.value2 ]);
      });
  };
  var v4IntStorable = function (dictIntStorable) {
      return new IntStorable(function (v) {
          return Data_Array.concatMap(toIntArray(dictIntStorable))([ v.value0, v.value1, v.value2, v.value3 ]);
      });
  };
  var toArray = function (dict) {
      return dict.toArray;
  };
  var v2Storable = function (dictNumberStorable) {
      return new NumberStorable(function (v) {
          return Data_Array.concatMap(toArray(dictNumberStorable))([ v.value0, v.value1 ]);
      });
  };
  var v3Storable = function (dictNumberStorable) {
      return new NumberStorable(function (v) {
          return Data_Array.concatMap(toArray(dictNumberStorable))([ v.value0, v.value1, v.value2 ]);
      });
  };
  var v4Storable = function (dictNumberStorable) {
      return new NumberStorable(function (v) {
          return Data_Array.concatMap(toArray(dictNumberStorable))([ v.value0, v.value1, v.value2, v.value3 ]);
      });
  };
  var streamToStreamType = function (s) {
      if (s instanceof ConstFloat) {
          return TFloat.value;
      };
      if (s instanceof ConstV2F) {
          return TV2F.value;
      };
      if (s instanceof ConstV3F) {
          return TV3F.value;
      };
      if (s instanceof ConstV4F) {
          return TV4F.value;
      };
      if (s instanceof ConstM22F) {
          return TM22F.value;
      };
      if (s instanceof ConstM33F) {
          return TM33F.value;
      };
      if (s instanceof ConstM44F) {
          return TM44F.value;
      };
      if (s instanceof Stream) {
          return s.value0.sType;
      };
      throw new Error("Failed pattern match at Type line 271, column 1 - line 272, column 1: " + [ s.constructor.name ]);
  };
  var sizeOfArrayType = function (v) {
      if (v instanceof ArrWord8) {
          return 1;
      };
      if (v instanceof ArrWord16) {
          return 2;
      };
      if (v instanceof ArrInt8) {
          return 1;
      };
      if (v instanceof ArrInt16) {
          return 2;
      };
      if (v instanceof ArrFloat) {
          return 4;
      };
      throw new Error("Failed pattern match at Type line 51, column 1 - line 52, column 1: " + [ v.constructor.name ]);
  };
  var showStreamType = new Prelude.Show(function (v) {
      if (v instanceof TFloat) {
          return "TFloat";
      };
      if (v instanceof TV2F) {
          return "TV2F";
      };
      if (v instanceof TV3F) {
          return "TV3F";
      };
      if (v instanceof TV4F) {
          return "TV4F";
      };
      if (v instanceof TM22F) {
          return "TM22F";
      };
      if (v instanceof TM33F) {
          return "TM33F";
      };
      if (v instanceof TM44F) {
          return "TM44F";
      };
      throw new Error("Failed pattern match at Type line 80, column 1 - line 89, column 1: " + [ v.constructor.name ]);
  });
  var showPrimitive = new Prelude.Show(function (v) {
      if (v instanceof TriangleStrip) {
          return "TriangleStrip";
      };
      if (v instanceof TriangleList) {
          return "TriangleList";
      };
      if (v instanceof TriangleFan) {
          return "TriangleFan";
      };
      if (v instanceof LineStrip) {
          return "LineStrip";
      };
      if (v instanceof LineList) {
          return "LineList";
      };
      if (v instanceof LineLoop) {
          return "LineLoop";
      };
      if (v instanceof PointList) {
          return "PointList";
      };
      throw new Error("Failed pattern match at Type line 121, column 1 - line 130, column 1: " + [ v.constructor.name ]);
  });
  var numStorable = new NumberStorable(function (a) {
      return [ a ];
  });
  var intStorable = new NumberStorable(function (a) {
      return [ Data_Int.toNumber(a) ];
  });
  var intIntStorable = new IntStorable(function (a) {
      return [ a ];
  });
  var eqStreamType = new Prelude.Eq(function (v) {
      return function (v1) {
          if (v instanceof TFloat && v1 instanceof TFloat) {
              return true;
          };
          if (v instanceof TV2F && v1 instanceof TV2F) {
              return true;
          };
          if (v instanceof TV3F && v1 instanceof TV3F) {
              return true;
          };
          if (v instanceof TV4F && v1 instanceof TV4F) {
              return true;
          };
          if (v instanceof TM22F && v1 instanceof TM22F) {
              return true;
          };
          if (v instanceof TM33F && v1 instanceof TM33F) {
              return true;
          };
          if (v instanceof TM44F && v1 instanceof TM44F) {
              return true;
          };
          return false;
      };
  });
  var boolIntStorable = new IntStorable(function (a) {
      return [ (function () {
          if (a) {
              return 1;
          };
          if (!a) {
              return 0;
          };
          throw new Error("Failed pattern match at Type line 298, column 1 - line 299, column 1: " + [ a.constructor.name ]);
      })() ];
  });
  var arrStorable = function (dictNumberStorable) {
      return new NumberStorable(function (a) {
          return Data_Array.concatMap(toArray(dictNumberStorable))(a);
      });
  };
  exports["SBool"] = SBool;
  exports["SV2B"] = SV2B;
  exports["SV3B"] = SV3B;
  exports["SV4B"] = SV4B;
  exports["SInt"] = SInt;
  exports["SV2I"] = SV2I;
  exports["SV3I"] = SV3I;
  exports["SV4I"] = SV4I;
  exports["SFloat"] = SFloat;
  exports["SV2F"] = SV2F;
  exports["SV3F"] = SV3F;
  exports["SV4F"] = SV4F;
  exports["SM22F"] = SM22F;
  exports["SM33F"] = SM33F;
  exports["SM44F"] = SM44F;
  exports["SFTexture2D"] = SFTexture2D;
  exports["TextureData"] = TextureData;
  exports["GLSetVertexAttribArray"] = GLSetVertexAttribArray;
  exports["GLDrawArrays"] = GLDrawArrays;
  exports["GLDrawElements"] = GLDrawElements;
  exports["GLSetVertexAttrib"] = GLSetVertexAttrib;
  exports["GLSetUniform"] = GLSetUniform;
  exports["GLBindTexture"] = GLBindTexture;
  exports["InputConnection"] = InputConnection;
  exports["UniBool"] = UniBool;
  exports["UniV2B"] = UniV2B;
  exports["UniV3B"] = UniV3B;
  exports["UniV4B"] = UniV4B;
  exports["UniInt"] = UniInt;
  exports["UniV2I"] = UniV2I;
  exports["UniV3I"] = UniV3I;
  exports["UniV4I"] = UniV4I;
  exports["UniFloat"] = UniFloat;
  exports["UniV2F"] = UniV2F;
  exports["UniV3F"] = UniV3F;
  exports["UniV4F"] = UniV4F;
  exports["UniM22F"] = UniM22F;
  exports["UniM33F"] = UniM33F;
  exports["UniM44F"] = UniM44F;
  exports["UniFTexture2D"] = UniFTexture2D;
  exports["Generate"] = Generate;
  exports["Reorder"] = Reorder;
  exports["Ordered"] = Ordered;
  exports["TriangleStrip"] = TriangleStrip;
  exports["TriangleList"] = TriangleList;
  exports["TriangleFan"] = TriangleFan;
  exports["LineStrip"] = LineStrip;
  exports["LineList"] = LineList;
  exports["LineLoop"] = LineLoop;
  exports["PointList"] = PointList;
  exports["ConstFloat"] = ConstFloat;
  exports["ConstV2F"] = ConstV2F;
  exports["ConstV3F"] = ConstV3F;
  exports["ConstV4F"] = ConstV4F;
  exports["ConstM22F"] = ConstM22F;
  exports["ConstM33F"] = ConstM33F;
  exports["ConstM44F"] = ConstM44F;
  exports["Stream"] = Stream;
  exports["TFloat"] = TFloat;
  exports["TV2F"] = TV2F;
  exports["TV3F"] = TV3F;
  exports["TV4F"] = TV4F;
  exports["TM22F"] = TM22F;
  exports["TM33F"] = TM33F;
  exports["TM44F"] = TM44F;
  exports["Array"] = $$Array;
  exports["ArrWord8"] = ArrWord8;
  exports["ArrWord16"] = ArrWord16;
  exports["ArrInt8"] = ArrInt8;
  exports["ArrInt16"] = ArrInt16;
  exports["ArrFloat"] = ArrFloat;
  exports["IntStorable"] = IntStorable;
  exports["NumberStorable"] = NumberStorable;
  exports["toIntArray"] = toIntArray;
  exports["toArray"] = toArray;
  exports["streamToStreamType"] = streamToStreamType;
  exports["sizeOfArrayType"] = sizeOfArrayType;
  exports["eqStreamType"] = eqStreamType;
  exports["showStreamType"] = showStreamType;
  exports["showPrimitive"] = showPrimitive;
  exports["intStorable"] = intStorable;
  exports["numStorable"] = numStorable;
  exports["v2Storable"] = v2Storable;
  exports["v3Storable"] = v3Storable;
  exports["v4Storable"] = v4Storable;
  exports["arrStorable"] = arrStorable;
  exports["intIntStorable"] = intIntStorable;
  exports["boolIntStorable"] = boolIntStorable;
  exports["v2IntStorable"] = v2IntStorable;
  exports["v3IntStorable"] = v3IntStorable;
  exports["v4IntStorable"] = v4IntStorable;;
 
})(PS["Type"] = PS["Type"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Util

  exports.setFloatArray
    = function setFloatArray(ta) {
        return function(a) {
          return function(){ta.set(a);};
        };
       };

  exports.setIntArray
    = function setIntArray(ta) {
        return function(a) {
          return function(){ta.set(a);};
        };
       };

  exports.newArrayBuffer
    = function newArrayBuffer(s) {
        return function() {return new ArrayBuffer(s);};
       };

  exports.newWord8View
    = function newWord8View(b) {
        return function(o) {
          return function(l) {
            return function(){return new Uint8Array(b,o,l);};
          };
        };
       };

  exports.newWord16View
    = function newWord16View(b) {
        return function(o) {
          return function(l) {
            return function(){return new Uint16Array(b,o,l);};
          };
        };
       };

  exports.newInt8View
    = function newInt8View(b) {
        return function(o) {
          return function(l) {
            return function(){return new Int8Array(b,o,l);};
          };
        };
       };

  exports.newInt16View
    = function newInt16View(b) {
        return function(o) {
          return function(l) {
            return function(){return new Int16Array(b,o,l);};
          };
        };
       };

  exports.newFloatView
    = function newFloatView(b) {
        return function(o) {
          return function(l) {
            return function(){return new Float32Array(b,o,l);};
          };
        };
       };

  exports.setArrayView
    = function setArrayView(av) {
        return function(a) {
          return function(){av.set(a);};
        };
       };

  exports.nullWebGLBuffer = null;

  exports.bufferDataAlloc
    = function bufferDataAlloc(target)
     {return function(size)
      {return function(usage)
       {return function()
        {gl.bufferData(target,size,usage);};};};};

  exports.bufferSubDataArrayBuffer
    = function bufferSubDataArrayBuffer(target)
     {return function(offset)
      {return function(data)
       {return function()
        {gl.bufferSubData(target,offset,data);};};};};

  exports.texImage2DNull_
    = function texImage2DNull_(target)
     {return function(level)
      {return function(internalformat)
       {return function(width)
        {return function(height)
         {return function(border)
          {return function(format)
           {return function(type)
             {return function()
              {gl.texImage2D(target,level,internalformat,width,height,border,format,type,null);};};};};};};};};};

  exports.nullWebGLTexture = null;

  exports.loadImage_ = function(name,continuation)
     {return function()
      {var i = new Image();
       i.src = name;
       i.onload = continuation (i);
        };};
 
})(PS["Util"] = PS["Util"] || {});
(function(exports) {
  /* global exports */

  // module Data.TypedArray


      "use strict";     

      exports.asInt32Array = function (array)
          {var res = new Int32Array (array);
           return res;};

      exports.asFloat32Array = function (array)
          {var res = new Float32Array (array);
           return res;};
 
})(PS["Data.TypedArray"] = PS["Data.TypedArray"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.TypedArray"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  exports["asFloat32Array"] = $foreign.asFloat32Array;
  exports["asInt32Array"] = $foreign.asInt32Array;;
 
})(PS["Data.TypedArray"] = PS["Data.TypedArray"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Util"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_TypedArray = PS["Data.TypedArray"];
  var $$Math = PS["Math"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var IR = PS["IR"];
  var LinearBase = PS["LinearBase"];
  var Type = PS["Type"];     
  var unlines = function (l) {
      var $16 = Data_Array.uncons(l);
      if ($16 instanceof Data_Maybe.Nothing) {
          return "";
      };
      if ($16 instanceof Data_Maybe.Just) {
          var $17 = Data_Array["null"]($16.value0.tail);
          if ($17) {
              return $16.value0.head;
          };
          if (!$17) {
              return $16.value0.head + ("\n" + unlines($16.value0.tail));
          };
          throw new Error("Failed pattern match: " + [ $17.constructor.name ]);
      };
      throw new Error("Failed pattern match: " + [ $16.constructor.name ]);
  };
  var toStreamType = function (a) {
      if (a instanceof IR.Float) {
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Type.TFloat.value);
      };
      if (a instanceof IR.V2F) {
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Type.TV2F.value);
      };
      if (a instanceof IR.V3F) {
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Type.TV3F.value);
      };
      if (a instanceof IR.V4F) {
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Type.TV4F.value);
      };
      if (a instanceof IR.M22F) {
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Type.TM22F.value);
      };
      if (a instanceof IR.M33F) {
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Type.TM33F.value);
      };
      if (a instanceof IR.M44F) {
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Type.TM44F.value);
      };
      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid Stream Type"));
  };
  var textureDataTypeToGLType = function (v) {
      return function (a) {
          if (v instanceof IR.Color) {
              if (a instanceof IR.FloatT && a.value0 instanceof IR.RGBA) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              if (a instanceof IR.IntT && a.value0 instanceof IR.RGBA) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              if (a instanceof IR.WordT && a.value0 instanceof IR.RGBA) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Prelude.show(IR.showTextureDataType)(a)));
          };
          if (v instanceof IR.Depth) {
              if (a instanceof IR.FloatT && a.value0 instanceof IR.Red) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._DEPTH_COMPONENT);
              };
              if (a instanceof IR.WordT && a.value0 instanceof IR.Red) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._DEPTH_COMPONENT);
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Prelude.show(IR.showTextureDataType)(a)));
          };
          if (v instanceof IR.Stencil) {
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Prelude.show(IR.showTextureDataType)(a)));
          };
          throw new Error("Failed pattern match at Util line 231, column 1 - line 232, column 1: " + [ v.constructor.name, a.constructor.name ]);
      };
  };
  var textureDataTypeToGLArityType = function (v) {
      return function (a) {
          if (v instanceof IR.Color) {
              if (a instanceof IR.FloatT && a.value0 instanceof IR.RGBA) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              if (a instanceof IR.IntT && a.value0 instanceof IR.RGBA) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              if (a instanceof IR.WordT && a.value0 instanceof IR.RGBA) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Prelude.show(IR.showTextureDataType)(a)));
          };
          if (v instanceof IR.Depth) {
              if (a instanceof IR.FloatT && a.value0 instanceof IR.Red) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._DEPTH_COMPONENT);
              };
              if (a instanceof IR.WordT && a.value0 instanceof IR.Red) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._DEPTH_COMPONENT);
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Prelude.show(IR.showTextureDataType)(a)));
          };
          if (v instanceof IR.Stencil) {
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Prelude.show(IR.showTextureDataType)(a)));
          };
          throw new Error("Failed pattern match at Util line 244, column 1 - line 245, column 1: " + [ v.constructor.name, a.constructor.name ]);
      };
  };
  var setUniform = function (i) {
      return function (uni) {
          if (uni instanceof Type.UniBool) {
              return Graphics_WebGLRaw.uniform1iv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV2B) {
              return Graphics_WebGLRaw.uniform2iv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV3B) {
              return Graphics_WebGLRaw.uniform3iv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV4B) {
              return Graphics_WebGLRaw.uniform4iv_(i, uni.value0);
          };
          if (uni instanceof Type.UniInt) {
              return Graphics_WebGLRaw.uniform1iv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV2I) {
              return Graphics_WebGLRaw.uniform2iv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV3I) {
              return Graphics_WebGLRaw.uniform3iv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV4I) {
              return Graphics_WebGLRaw.uniform4iv_(i, uni.value0);
          };
          if (uni instanceof Type.UniFloat) {
              return Graphics_WebGLRaw.uniform1fv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV2F) {
              return Graphics_WebGLRaw.uniform2fv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV3F) {
              return Graphics_WebGLRaw.uniform3fv_(i, uni.value0);
          };
          if (uni instanceof Type.UniV4F) {
              return Graphics_WebGLRaw.uniform4fv_(i, uni.value0);
          };
          if (uni instanceof Type.UniM22F) {
              return Graphics_WebGLRaw.uniformMatrix2fv_(i, false, uni.value0);
          };
          if (uni instanceof Type.UniM33F) {
              return Graphics_WebGLRaw.uniformMatrix3fv_(i, false, uni.value0);
          };
          if (uni instanceof Type.UniM44F) {
              return Graphics_WebGLRaw.uniformMatrix4fv_(i, false, uni.value0);
          };
          if (uni instanceof Type.UniFTexture2D) {
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
          };
          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (setUniform)!"));
      };
  };
  var setAV4F = function (i) {
      return function (v) {
          return Graphics_WebGLRaw.vertexAttrib4f_(i, v.value0, v.value1, v.value2, v.value3);
      };
  };
  var setAV3F = function (i) {
      return function (v) {
          return Graphics_WebGLRaw.vertexAttrib3f_(i, v.value0, v.value1, v.value2);
      };
  };
  var setAV2F = function (i) {
      return function (v) {
          return Graphics_WebGLRaw.vertexAttrib2f_(i, v.value0, v.value1);
      };
  };
  var setAFloat = function (i) {
      return function (v) {
          return Graphics_WebGLRaw.vertexAttrib1f_(i, v);
      };
  };
  var setVertexAttrib = function (i) {
      return function (val) {
          if (val instanceof Type.ConstFloat) {
              return setAFloat(i)(val.value0);
          };
          if (val instanceof Type.ConstV2F) {
              return setAV2F(i)(val.value0);
          };
          if (val instanceof Type.ConstV3F) {
              return setAV3F(i)(val.value0);
          };
          if (val instanceof Type.ConstV4F) {
              return setAV4F(i)(val.value0);
          };
          if (val instanceof Type.ConstM22F) {
              return function __do() {
                  setAV2F(i)(val.value0.value0)();
                  return setAV2F(i + 1 | 0)(val.value0.value1)();
              };
          };
          if (val instanceof Type.ConstM33F) {
              return function __do() {
                  setAV3F(i)(val.value0.value0)();
                  setAV3F(i + 1 | 0)(val.value0.value1)();
                  return setAV3F(i + 2 | 0)(val.value0.value2)();
              };
          };
          if (val instanceof Type.ConstM44F) {
              return function __do() {
                  setAV4F(i)(val.value0.value0)();
                  setAV4F(i + 1 | 0)(val.value0.value1)();
                  setAV4F(i + 2 | 0)(val.value0.value2)();
                  return setAV4F(i + 3 | 0)(val.value0.value3)();
              };
          };
          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (setVertexAttrib)!"));
      };
  };
  var primitiveToGLType = function (p) {
      if (p instanceof Type.TriangleStrip) {
          return Graphics_WebGLRaw._TRIANGLE_STRIP;
      };
      if (p instanceof Type.TriangleList) {
          return Graphics_WebGLRaw._TRIANGLES;
      };
      if (p instanceof Type.TriangleFan) {
          return Graphics_WebGLRaw._TRIANGLE_FAN;
      };
      if (p instanceof Type.LineStrip) {
          return Graphics_WebGLRaw._LINE_STRIP;
      };
      if (p instanceof Type.LineLoop) {
          return Graphics_WebGLRaw._LINE_LOOP;
      };
      if (p instanceof Type.LineList) {
          return Graphics_WebGLRaw._LINES;
      };
      if (p instanceof Type.PointList) {
          return Graphics_WebGLRaw._POINTS;
      };
      throw new Error("Failed pattern match at Util line 171, column 1 - line 172, column 1: " + [ p.constructor.name ]);
  };
  var primitiveToFetchPrimitive = function (prim) {
      if (prim instanceof Type.TriangleStrip) {
          return IR.Triangles.value;
      };
      if (prim instanceof Type.TriangleList) {
          return IR.Triangles.value;
      };
      if (prim instanceof Type.TriangleFan) {
          return IR.Triangles.value;
      };
      if (prim instanceof Type.LineStrip) {
          return IR.Lines.value;
      };
      if (prim instanceof Type.LineLoop) {
          return IR.Lines.value;
      };
      if (prim instanceof Type.LineList) {
          return IR.Lines.value;
      };
      if (prim instanceof Type.PointList) {
          return IR.Points.value;
      };
      throw new Error("Failed pattern match at Util line 96, column 1 - line 97, column 1: " + [ prim.constructor.name ]);
  };
  var mkUniformSetter = function (v) {
      if (v instanceof IR.Bool) {
          var r = Data_TypedArray.asInt32Array([ 0 ]);
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniBool(r), Type.SBool.create(function ($127) {
              return $foreign.setIntArray(r)(Type.toIntArray(Type.boolIntStorable)($127));
          })));
      };
      if (v instanceof IR.V2B) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(2)(0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV2B(r), Type.SV2B.create(function ($128) {
              return $foreign.setIntArray(r)(Type.toIntArray(Type.v2IntStorable(Type.boolIntStorable))($128));
          })));
      };
      if (v instanceof IR.V3B) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(3)(0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV3B(r), Type.SV3B.create(function ($129) {
              return $foreign.setIntArray(r)(Type.toIntArray(Type.v3IntStorable(Type.boolIntStorable))($129));
          })));
      };
      if (v instanceof IR.V4B) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(4)(0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV4B(r), Type.SV4B.create(function ($130) {
              return $foreign.setIntArray(r)(Type.toIntArray(Type.v4IntStorable(Type.boolIntStorable))($130));
          })));
      };
      if (v instanceof IR.Int) {
          var r = Data_TypedArray.asInt32Array([ 0 ]);
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniInt(r), Type.SInt.create(function ($131) {
              return $foreign.setIntArray(r)(Type.toIntArray(Type.intIntStorable)($131));
          })));
      };
      if (v instanceof IR.V2I) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(2)(0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV2I(r), Type.SV2I.create(function ($132) {
              return $foreign.setIntArray(r)(Type.toIntArray(Type.v2IntStorable(Type.intIntStorable))($132));
          })));
      };
      if (v instanceof IR.V3I) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(3)(0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV3I(r), Type.SV3I.create(function ($133) {
              return $foreign.setIntArray(r)(Type.toIntArray(Type.v3IntStorable(Type.intIntStorable))($133));
          })));
      };
      if (v instanceof IR.V4I) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(4)(0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV4I(r), Type.SV4I.create(function ($134) {
              return $foreign.setIntArray(r)(Type.toIntArray(Type.v4IntStorable(Type.intIntStorable))($134));
          })));
      };
      if (v instanceof IR.Float) {
          var r = Data_TypedArray.asFloat32Array([ 0.0 ]);
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniFloat(r), Type.SFloat.create(function ($135) {
              return $foreign.setFloatArray(r)(Type.toArray(Type.numStorable)($135));
          })));
      };
      if (v instanceof IR.V2F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(2)(0.0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV2F(r), Type.SV2F.create(function ($136) {
              return $foreign.setFloatArray(r)(Type.toArray(Type.v2Storable(Type.numStorable))($136));
          })));
      };
      if (v instanceof IR.V3F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(3)(0.0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV3F(r), Type.SV3F.create(function ($137) {
              return $foreign.setFloatArray(r)(Type.toArray(Type.v3Storable(Type.numStorable))($137));
          })));
      };
      if (v instanceof IR.V4F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(4)(0.0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniV4F(r), Type.SV4F.create(function ($138) {
              return $foreign.setFloatArray(r)(Type.toArray(Type.v4Storable(Type.numStorable))($138));
          })));
      };
      if (v instanceof IR.M22F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(4)(0.0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniM22F(r), Type.SM22F.create(function ($139) {
              return $foreign.setFloatArray(r)(Type.toArray(Type.v2Storable(Type.v2Storable(Type.numStorable)))($139));
          })));
      };
      if (v instanceof IR.M33F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(9)(0.0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniM33F(r), Type.SM33F.create(function ($140) {
              return $foreign.setFloatArray(r)(Type.toArray(Type.v3Storable(Type.v3Storable(Type.numStorable)))($140));
          })));
      };
      if (v instanceof IR.M44F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(16)(0.0));
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new Type.UniM44F(r), Type.SM44F.create(function ($141) {
              return $foreign.setFloatArray(r)(Type.toArray(Type.v4Storable(Type.v4Storable(Type.numStorable)))($141));
          })));
      };
      if (v instanceof IR.FTexture2D) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.newRef(new Type.TextureData($foreign.nullWebGLTexture))();
              return new Data_Tuple.Tuple(new Type.UniFTexture2D(v1), Type.SFTexture2D.create(Control_Monad_Eff_Ref.writeRef(v1)));
          };
      };
      throw new Error("Failed pattern match at Util line 76, column 1 - line 77, column 1: " + [ v.constructor.name ]);
  };
  var filterToGLType = function (a) {
      if (a instanceof IR.Nearest) {
          return Graphics_WebGLRaw._NEAREST;
      };
      if (a instanceof IR.Linear) {
          return Graphics_WebGLRaw._LINEAR;
      };
      if (a instanceof IR.NearestMipmapNearest) {
          return Graphics_WebGLRaw._NEAREST_MIPMAP_NEAREST;
      };
      if (a instanceof IR.NearestMipmapLinear) {
          return Graphics_WebGLRaw._NEAREST_MIPMAP_LINEAR;
      };
      if (a instanceof IR.LinearMipmapNearest) {
          return Graphics_WebGLRaw._LINEAR_MIPMAP_NEAREST;
      };
      if (a instanceof IR.LinearMipmapLinear) {
          return Graphics_WebGLRaw._LINEAR_MIPMAP_LINEAR;
      };
      throw new Error("Failed pattern match at Util line 277, column 1 - line 278, column 1: " + [ a.constructor.name ]);
  };
  var edgeModeToGLType = function (a) {
      if (a instanceof IR.Repeat) {
          return Graphics_WebGLRaw._REPEAT;
      };
      if (a instanceof IR.MirroredRepeat) {
          return Graphics_WebGLRaw._MIRRORED_REPEAT;
      };
      if (a instanceof IR.ClampToEdge) {
          return Graphics_WebGLRaw._CLAMP_TO_EDGE;
      };
      throw new Error("Failed pattern match at Util line 286, column 1 - line 287, column 1: " + [ a.constructor.name ]);
  };
  var setTextureSamplerParameters = function (t) {
      return function (v) {
          return function __do() {
              Graphics_WebGLRaw.texParameteri_(t, Graphics_WebGLRaw._TEXTURE_WRAP_S, edgeModeToGLType(v.value0.samplerWrapS))();
              (function () {
                  if (v.value0.samplerWrapT instanceof Data_Maybe.Nothing) {
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                  };
                  if (v.value0.samplerWrapT instanceof Data_Maybe.Just) {
                      return Graphics_WebGLRaw.texParameteri_(t, Graphics_WebGLRaw._TEXTURE_WRAP_T, edgeModeToGLType(v.value0.samplerWrapT.value0));
                  };
                  throw new Error("Failed pattern match at Util line 268, column 1 - line 269, column 1: " + [ v.value0.samplerWrapT.constructor.name ]);
              })()();
              Graphics_WebGLRaw.texParameteri_(t, Graphics_WebGLRaw._TEXTURE_MIN_FILTER, filterToGLType(v.value0.samplerMinFilter))();
              return Graphics_WebGLRaw.texParameteri_(t, Graphics_WebGLRaw._TEXTURE_MAG_FILTER, filterToGLType(v.value0.samplerMagFilter))();
          };
      };
  };
  var compileTexture = function (v) {
      return function __do() {
          var v1 = Graphics_WebGLRaw.createTexture_()();
          var txSetup = function (txTarget) {
              return function (dTy) {
                  return function __do() {
                      var v2 = textureDataTypeToGLType(v.value0.textureSemantic)(dTy)();
                      var v3 = textureDataTypeToGLArityType(v.value0.textureSemantic)(dTy)();
                      Graphics_WebGLRaw.bindTexture_(txTarget, v1)();
                      setTextureSamplerParameters(txTarget)(v.value0.textureSampler)();
                      return new Data_Tuple.Tuple(v2, v3);
                  };
              };
          };
          var mipSize = function (v2) {
              return function (x) {
                  if (v2 === 0) {
                      return [ x ];
                  };
                  return Data_Array[":"](x)(mipSize(v2 - 1)(x / 2 | 0));
              };
          };
          var mipS = mipSize(v.value0.textureMaxLevel - v.value0.textureBaseLevel);
          var levels = Data_Array[".."](v.value0.textureBaseLevel)(v.value0.textureMaxLevel);
          var div = function (a) {
              return function (b) {
                  return $$Math.floor(a / b);
              };
          };
          var act = (function () {
              if (v.value0.textureType instanceof IR.Texture2D && v.value0.textureType.value1 === 1) {
                  return function __do() {
                      if (v.value0.textureSize instanceof IR.VV2U) {
                          var v3 = txSetup(Graphics_WebGLRaw._TEXTURE_2D)(v.value0.textureType.value0)();
                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_Array.zip(levels)(Data_Array.zip(mipS(v.value0.textureSize.value0.value0))(mipS(v.value0.textureSize.value0.value1))))(function (v4) {
                              return function __do() {
                                  $foreign.texImage2DNull_(Graphics_WebGLRaw._TEXTURE_2D)(v4.value0)(v3.value0)(v4.value1.value0)(v4.value1.value1)(0)(v3.value1)((function () {
                                      var $110 = v3.value1 === Graphics_WebGLRaw._DEPTH_COMPONENT;
                                      if ($110) {
                                          return Graphics_WebGLRaw._UNSIGNED_SHORT;
                                      };
                                      if (!$110) {
                                          return Graphics_WebGLRaw._UNSIGNED_BYTE;
                                      };
                                      throw new Error("Failed pattern match at Util line 216, column 7 - line 229, column 3: " + [ $110.constructor.name ]);
                                  })())();
                                  return Prelude.unit;
                              };
                          })();
                          return {
                              textureObject: v1, 
                              textureTarget: Graphics_WebGLRaw._TEXTURE_2D
                          };
                      };
                      throw new Error("Failed pattern match at Util line 216, column 7 - line 229, column 3: " + [ v.value0.textureSize.constructor.name ]);
                  };
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Unsupported texture type!"));
          })();
          return act();
      };
  };
  var comparisonFunctionToGLType = function (a) {
      if (a instanceof IR.Always) {
          return Graphics_WebGLRaw._ALWAYS;
      };
      if (a instanceof IR.Equal) {
          return Graphics_WebGLRaw._EQUAL;
      };
      if (a instanceof IR.Gequal) {
          return Graphics_WebGLRaw._GEQUAL;
      };
      if (a instanceof IR.Greater) {
          return Graphics_WebGLRaw._GREATER;
      };
      if (a instanceof IR.Lequal) {
          return Graphics_WebGLRaw._LEQUAL;
      };
      if (a instanceof IR.Less) {
          return Graphics_WebGLRaw._LESS;
      };
      if (a instanceof IR.Never) {
          return Graphics_WebGLRaw._NEVER;
      };
      if (a instanceof IR.Notequal) {
          return Graphics_WebGLRaw._NOTEQUAL;
      };
      throw new Error("Failed pattern match at Util line 24, column 1 - line 25, column 1: " + [ a.constructor.name ]);
  };
  var blendingFactorToGLType = function (a) {
      if (a instanceof IR.ConstantAlpha) {
          return Graphics_WebGLRaw._CONSTANT_ALPHA;
      };
      if (a instanceof IR.ConstantColor) {
          return Graphics_WebGLRaw._CONSTANT_COLOR;
      };
      if (a instanceof IR.DstAlpha) {
          return Graphics_WebGLRaw._DST_ALPHA;
      };
      if (a instanceof IR.DstColor) {
          return Graphics_WebGLRaw._DST_COLOR;
      };
      if (a instanceof IR.One) {
          return Graphics_WebGLRaw._ONE;
      };
      if (a instanceof IR.OneMinusConstantAlpha) {
          return Graphics_WebGLRaw._ONE_MINUS_CONSTANT_ALPHA;
      };
      if (a instanceof IR.OneMinusConstantColor) {
          return Graphics_WebGLRaw._ONE_MINUS_CONSTANT_COLOR;
      };
      if (a instanceof IR.OneMinusDstAlpha) {
          return Graphics_WebGLRaw._ONE_MINUS_DST_ALPHA;
      };
      if (a instanceof IR.OneMinusDstColor) {
          return Graphics_WebGLRaw._ONE_MINUS_DST_COLOR;
      };
      if (a instanceof IR.OneMinusSrcAlpha) {
          return Graphics_WebGLRaw._ONE_MINUS_SRC_ALPHA;
      };
      if (a instanceof IR.OneMinusSrcColor) {
          return Graphics_WebGLRaw._ONE_MINUS_SRC_COLOR;
      };
      if (a instanceof IR.SrcAlpha) {
          return Graphics_WebGLRaw._SRC_ALPHA;
      };
      if (a instanceof IR.SrcAlphaSaturate) {
          return Graphics_WebGLRaw._SRC_ALPHA_SATURATE;
      };
      if (a instanceof IR.SrcColor) {
          return Graphics_WebGLRaw._SRC_COLOR;
      };
      if (a instanceof IR.Zero) {
          return Graphics_WebGLRaw._ZERO;
      };
      throw new Error("Failed pattern match at Util line 43, column 1 - line 44, column 1: " + [ a.constructor.name ]);
  };
  var blendEquationToGLType = function (a) {
      if (a instanceof IR.FuncAdd) {
          return Graphics_WebGLRaw._FUNC_ADD;
      };
      if (a instanceof IR.FuncReverseSubtract) {
          return Graphics_WebGLRaw._FUNC_REVERSE_SUBTRACT;
      };
      if (a instanceof IR.FuncSubtract) {
          return Graphics_WebGLRaw._FUNC_SUBTRACT;
      };
      if (a instanceof IR.Max) {
          return Graphics_WebGLRaw._FUNC_ADD;
      };
      if (a instanceof IR.Min) {
          return Graphics_WebGLRaw._FUNC_ADD;
      };
      throw new Error("Failed pattern match at Util line 35, column 1 - line 36, column 1: " + [ a.constructor.name ]);
  };
  var arrayTypeToGLType = function (a) {
      if (a instanceof Type.ArrWord8) {
          return Graphics_WebGLRaw._UNSIGNED_BYTE;
      };
      if (a instanceof Type.ArrWord16) {
          return Graphics_WebGLRaw._UNSIGNED_SHORT;
      };
      if (a instanceof Type.ArrInt8) {
          return Graphics_WebGLRaw._BYTE;
      };
      if (a instanceof Type.ArrInt16) {
          return Graphics_WebGLRaw._SHORT;
      };
      if (a instanceof Type.ArrFloat) {
          return Graphics_WebGLRaw._FLOAT;
      };
      throw new Error("Failed pattern match at Util line 181, column 1 - line 182, column 1: " + [ a.constructor.name ]);
  };
  exports["edgeModeToGLType"] = edgeModeToGLType;
  exports["filterToGLType"] = filterToGLType;
  exports["setTextureSamplerParameters"] = setTextureSamplerParameters;
  exports["textureDataTypeToGLArityType"] = textureDataTypeToGLArityType;
  exports["textureDataTypeToGLType"] = textureDataTypeToGLType;
  exports["compileTexture"] = compileTexture;
  exports["arrayTypeToGLType"] = arrayTypeToGLType;
  exports["primitiveToGLType"] = primitiveToGLType;
  exports["setUniform"] = setUniform;
  exports["setAV4F"] = setAV4F;
  exports["setAV3F"] = setAV3F;
  exports["setAV2F"] = setAV2F;
  exports["setAFloat"] = setAFloat;
  exports["setVertexAttrib"] = setVertexAttrib;
  exports["unlines"] = unlines;
  exports["primitiveToFetchPrimitive"] = primitiveToFetchPrimitive;
  exports["mkUniformSetter"] = mkUniformSetter;
  exports["toStreamType"] = toStreamType;
  exports["blendingFactorToGLType"] = blendingFactorToGLType;
  exports["blendEquationToGLType"] = blendEquationToGLType;
  exports["comparisonFunctionToGLType"] = comparisonFunctionToGLType;
  exports["loadImage_"] = $foreign.loadImage_;
  exports["bufferSubDataArrayBuffer"] = $foreign.bufferSubDataArrayBuffer;
  exports["bufferDataAlloc"] = $foreign.bufferDataAlloc;
  exports["nullWebGLBuffer"] = $foreign.nullWebGLBuffer;
  exports["setArrayView"] = $foreign.setArrayView;
  exports["newFloatView"] = $foreign.newFloatView;
  exports["newInt16View"] = $foreign.newInt16View;
  exports["newInt8View"] = $foreign.newInt8View;
  exports["newWord16View"] = $foreign.newWord16View;
  exports["newWord8View"] = $foreign.newWord8View;
  exports["newArrayBuffer"] = $foreign.newArrayBuffer;;
 
})(PS["Util"] = PS["Util"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Map = PS["Data.Map"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_StrMap_Unsafe = PS["Data.StrMap.Unsafe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Array = PS["Data.Array"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Type = PS["Type"];
  var IR = PS["IR"];
  var LinearBase = PS["LinearBase"];
  var Util = PS["Util"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Data_Unfoldable = PS["Data.Unfoldable"];     
  var sortSlotObjects = function (p) {
      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(p.slotVector)(function (slotRef) {
          return function __do() {
              var v = Control_Monad_Eff_Ref.readRef(slotRef)();
              var cmpFun = function (v1) {
                  return function (v2) {
                      return Prelude.compare(Prelude.ordInt)(v1.value0)(v2.value0);
                  };
              };
              var doSort = function (objs) {
                  return Control_Monad_Eff_Ref.writeRef(slotRef)((function () {
                      var $40 = {};
                      for (var $41 in v) {
                          if (v.hasOwnProperty($41)) {
                              $40[$41] = v[$41];
                          };
                      };
                      $40.sortedObjects = Data_Array.sortBy(cmpFun)(objs);
                      $40.orderJob = Type.Ordered.value;
                      return $40;
                  })());
              };
              if (v.orderJob instanceof Type.Ordered) {
                  return Prelude.unit;
              };
              if (v.orderJob instanceof Type.Generate) {
                  var v1 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(Data_Map.values(v.objectMap))(function (obj) {
                      return function __do() {
                          var v1 = Control_Monad_Eff_Ref.readRef(obj.order)();
                          return new Data_Tuple.Tuple(v1, obj);
                      };
                  })();
                  return doSort(Data_List.fromList(Data_Unfoldable.unfoldableArray)(v1))();
              };
              if (v.orderJob instanceof Type.Reorder) {
                  var v1 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(v.sortedObjects)(function (v1) {
                      return function __do() {
                          var v2 = Control_Monad_Eff_Ref.readRef(v1.value1.order)();
                          return new Data_Tuple.Tuple(v2, v1.value1);
                      };
                  })();
                  return doSort(v1)();
              };
              throw new Error("Failed pattern match at Input line 150, column 1 - line 151, column 1: " + [ v.orderJob.constructor.name ]);
          };
      });
  };
  var setScreenSize = function (p) {
      return function (s) {
          return Control_Monad_Eff_Ref.writeRef(p.screenSize)(s);
      };
  };
  var nullSetter = function (n) {
      return function (t) {
          return function (v) {
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
          };
      };
  };
  var uniformFTexture2D = function (n) {
      return function (is) {
          var $63 = Data_StrMap.lookup(n)(is);
          if ($63 instanceof Data_Maybe.Just && $63.value0 instanceof Type.SFTexture2D) {
              return $63.value0.value0;
          };
          return nullSetter(n)("FTexture2D");
      };
  };
  var uniformFloat = function (n) {
      return function (is) {
          var $66 = Data_StrMap.lookup(n)(is);
          if ($66 instanceof Data_Maybe.Just && $66.value0 instanceof Type.SFloat) {
              return $66.value0.value0;
          };
          return nullSetter(n)("Float");
      };
  };
  var uniformV2F = function (n) {
      return function (is) {
          var $84 = Data_StrMap.lookup(n)(is);
          if ($84 instanceof Data_Maybe.Just && $84.value0 instanceof Type.SV2F) {
              return $84.value0.value0;
          };
          return nullSetter(n)("V2F");
      };
  };
  var mkUniform = function (l) {
      return function __do() {
          var v = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(l)(function (v) {
              return function __do() {
                  var v1 = Util.mkUniformSetter(v.value1)();
                  return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, v1.value0), new Data_Tuple.Tuple(v.value0, v1.value1));
              };
          })();
          var fun = function (v1) {
              return new Data_Tuple.Tuple(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)(v1.value1)), Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)(v1.value0)));
          };
          return fun(Data_Array.unzip(v));
      };
  };
  var mkWebGLPipelineInput = function (sch) {
      var len = Data_Maybe_Unsafe.fromJust(Data_Int.fromNumber(Data_StrMap.size(sch.slots)));
      var sm = Data_StrMap.fromList(Data_List.zip(Data_List.toList(Data_Foldable.foldableArray)(Data_StrMap.keys(sch.slots)))(Data_List.range(0)(len)));
      return function __do() {
          var v = mkUniform(Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.toList(sch.uniforms)))();
          var v1 = Data_Array.replicateM(Control_Monad_Eff.monadEff)(len)(Control_Monad_Eff_Ref.newRef({
              objectMap: Data_Map.empty, 
              sortedObjects: [  ], 
              orderJob: Type.Ordered.value
          }))();
          var v2 = Control_Monad_Eff_Ref.newRef(0)();
          var v3 = Control_Monad_Eff_Ref.newRef(new LinearBase.V2(0, 0))();
          var v4 = Control_Monad_Eff_Ref.newRef([ Data_Maybe.Nothing.value ])();
          return {
              schema: sch, 
              slotMap: sm, 
              slotVector: v1, 
              objSeed: v2, 
              uniformSetter: v.value0, 
              uniformSetup: v.value1, 
              screenSize: v3, 
              pipelines: v4
          };
      };
  };
  var createObjectCommands = function (texUnitMap) {
      return function (topUnis) {
          return function (obj) {
              return function (prg) {
                  var objUniCmds = (function () {
                      var uniMap = Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.toList(prg.inputUniforms));
                      var uniCmds = Prelude.flip(Prelude.map(Prelude.functorArray))(uniMap)(function (v) {
                          return Type.GLSetUniform.create(v.value1)((function () {
                              var $126 = Data_StrMap.lookup(v.value0)(obj.uniSetup);
                              if ($126 instanceof Data_Maybe.Nothing) {
                                  return Data_StrMap_Unsafe.unsafeIndex(topUnis)(v.value0);
                              };
                              if ($126 instanceof Data_Maybe.Just) {
                                  return $126.value0;
                              };
                              throw new Error("Failed pattern match at Input line 257, column 5 - line 273, column 5: " + [ $126.constructor.name ]);
                          })());
                      });
                      var topUni = function (n) {
                          return Data_StrMap_Unsafe.unsafeIndex(topUnis)(n);
                      };
                      var texCmds = Prelude.flip(Prelude.map(Prelude.functorArray))(prg.inputTextureUniforms)(function (n) {
                          var u = (function () {
                              var $130 = Data_StrMap.lookup(n)(obj.uniSetup);
                              if ($130 instanceof Data_Maybe.Nothing) {
                                  return topUni(n);
                              };
                              if ($130 instanceof Data_Maybe.Just) {
                                  return $130.value0;
                              };
                              throw new Error("Failed pattern match at Input line 284, column 15 - line 285, column 15: " + [ $130.constructor.name ]);
                          })();
                          var texUnit = Data_StrMap_Unsafe.unsafeIndex(texUnitMap)(n);
                          return new Type.GLBindTexture(Graphics_WebGLRaw._TEXTURE_2D, texUnit, u);
                      });
                      return Prelude.append(Prelude.semigroupArray)(uniCmds)(texCmds);
                  })();
                  var objStreamCmds = Prelude.flip(Prelude.map(Prelude.functorArray))(Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.values(prg.inputStreams)))(function (is) {
                      var s = Data_StrMap_Unsafe.unsafeIndex(obj.attributes)(is.slotAttribute);
                      if (s instanceof Type.Stream) {
                          var glType = Util.arrayTypeToGLType((s.value0.buffer.arrays[s.value0.arrIdx]).arrType);
                          var ptr = function (compCnt) {
                              return (s.value0.buffer.arrays[s.value0.arrIdx]).arrOffset + ((s.value0.start * compCnt | 0) * Type.sizeOfArrayType((s.value0.buffer.arrays[s.value0.arrIdx]).arrType) | 0) | 0;
                          };
                          var setFloatAttrib = function (n) {
                              return new Type.GLSetVertexAttribArray(is.location, s.value0.buffer.glBuffer, n, glType, ptr(n));
                          };
                          return setFloatAttrib((function () {
                              if (s.value0.sType instanceof Type.TFloat) {
                                  return 1;
                              };
                              if (s.value0.sType instanceof Type.TV2F) {
                                  return 2;
                              };
                              if (s.value0.sType instanceof Type.TV3F) {
                                  return 3;
                              };
                              if (s.value0.sType instanceof Type.TV4F) {
                                  return 4;
                              };
                              if (s.value0.sType instanceof Type.TM22F) {
                                  return 4;
                              };
                              if (s.value0.sType instanceof Type.TM33F) {
                                  return 9;
                              };
                              if (s.value0.sType instanceof Type.TM44F) {
                                  return 16;
                              };
                              throw new Error("Failed pattern match at Input line 253, column 1 - line 254, column 1: " + [ s.value0.sType.constructor.name ]);
                          })());
                      };
                      return new Type.GLSetVertexAttrib(is.location, s);
                  });
                  var objDrawCmd = (function () {
                      var streamLen = function (a) {
                          if (a instanceof Type.Stream) {
                              return [ a.value0.length ];
                          };
                          return [  ];
                      };
                      var prim = Util.primitiveToGLType(obj.primitive);
                      var count = (Data_Array.concatMap(streamLen)(Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.values(obj.attributes))))[0];
                      if (obj.indices instanceof Data_Maybe.Nothing) {
                          return new Type.GLDrawArrays(prim, 0, count);
                      };
                      if (obj.indices instanceof Data_Maybe.Just) {
                          var idxType = Util.arrayTypeToGLType((obj.indices.value0.buffer.arrays[obj.indices.value0.arrIdx]).arrType);
                          var ptr = (obj.indices.value0.buffer.arrays[obj.indices.value0.arrIdx]).arrOffset + (obj.indices.value0.start * Type.sizeOfArrayType((obj.indices.value0.buffer.arrays[obj.indices.value0.arrIdx]).arrType) | 0) | 0;
                          return new Type.GLDrawElements(prim, obj.indices.value0.length, idxType, obj.indices.value0.buffer.glBuffer, ptr);
                      };
                      throw new Error("Failed pattern match at Input line 253, column 1 - line 254, column 1: " + [ obj.indices.constructor.name ]);
                  })();
                  return Data_Array.concat([ objUniCmds, objStreamCmds, [ objDrawCmd ] ]);
              };
          };
      };
  };
  var addObject = function (input) {
      return function (slotName) {
          return function (prim) {
              return function (indices) {
                  return function (attribs) {
                      return function (uniformNames) {
                          return function __do() {
                              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(uniformNames)(function (n) {
                                  var $139 = Data_StrMap.lookup(n)(input.schema.uniforms);
                                  if ($139 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Unknown uniform: " + Prelude.show(Prelude.showString)(n)));
                                  };
                                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                              })();
                              (function () {
                                  var $140 = Data_StrMap.lookup(slotName)(input.schema.slots);
                                  if ($140 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Unknown slot: " + slotName));
                                  };
                                  if ($140 instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          Control_Monad.when(Control_Monad_Eff.monadEff)(Prelude["/="](IR.eqFetchPrimitive)($140.value0.primitive)(Util.primitiveToFetchPrimitive(prim)))(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Primitive mismatch for slot (" + (Prelude.show(Prelude.showString)(slotName) + (") expected " + (Prelude.show(IR.showFetchPrimitive)($140.value0.primitive) + (" but got " + Prelude.show(Type.showPrimitive)(prim))))))))();
                                          var sType = Prelude["<$>"](Data_StrMap.functorStrMap)(Type.streamToStreamType)(attribs);
                                          return Control_Monad.when(Control_Monad_Eff.monadEff)(Prelude["/="](Data_StrMap.eqStrMap(Type.eqStreamType))(sType)($140.value0.attributes))(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error(Util.unlines([ "Attribute stream mismatch for slot (" + (Prelude.show(Prelude.showString)(slotName) + ") expected "), Prelude.show(Data_StrMap.showStrMap(Type.showStreamType))($140.value0.attributes), " but got ", Prelude.show(Data_StrMap.showStrMap(Type.showStreamType))(sType) ]))))();
                                      };
                                  };
                                  throw new Error("Failed pattern match at Input line 68, column 1 - line 69, column 1: " + [ $140.constructor.name ]);
                              })()();
                              var v = (function () {
                                  var $142 = Data_StrMap.lookup(slotName)(input.slotMap);
                                  if ($142 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (slot index)"));
                                  };
                                  if ($142 instanceof Data_Maybe.Just) {
                                      return Prelude["return"](Control_Monad_Eff.applicativeEff)($142.value0);
                                  };
                                  throw new Error("Failed pattern match at Input line 68, column 1 - line 69, column 1: " + [ $142.constructor.name ]);
                              })()();
                              var v1 = Control_Monad_Eff_Ref.newRef(0)();
                              var v2 = Control_Monad_Eff_Ref.newRef(true)();
                              var v3 = Control_Monad_Eff_Ref.readRef(input.objSeed)();
                              Control_Monad_Eff_Ref.modifyRef(input.objSeed)(Prelude["+"](Prelude.semiringInt)(1))();
                              var v4 = Control_Bind["=<<"](Control_Monad_Eff.bindEff)(mkUniform)(Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(uniformNames)(function (n) {
                                  var $148 = Data_StrMap.lookup(n)(input.schema.uniforms);
                                  if ($148 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (uniform setter not found)"));
                                  };
                                  if ($148 instanceof Data_Maybe.Just) {
                                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(n, $148.value0));
                                  };
                                  throw new Error("Failed pattern match at Input line 68, column 1 - line 69, column 1: " + [ $148.constructor.name ]);
                              }))();
                              var v5 = Control_Monad_Eff_Ref.newRef([ [  ] ])();
                              var obj = {
                                  slot: v, 
                                  primitive: prim, 
                                  indices: indices, 
                                  attributes: attribs, 
                                  uniSetter: v4.value0, 
                                  uniSetup: v4.value1, 
                                  order: v1, 
                                  enabled: v2, 
                                  id: v3, 
                                  commands: v5
                              };
                              Control_Monad_Eff_Ref.modifyRef(input.slotVector[v])(function (s) {
                                  return {
                                      objectMap: Data_Map.insert(Prelude.ordInt)(v3)(obj)(s.objectMap), 
                                      sortedObjects: [  ], 
                                      orderJob: Type.Generate.value
                                  };
                              })();
                              var v6 = Control_Monad_Eff_Ref.readRef(input.pipelines)();
                              var v7 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(v6)(function (mp) {
                                  if (mp instanceof Data_Maybe.Nothing) {
                                      return Prelude["return"](Control_Monad_Eff.applicativeEff)([  ]);
                                  };
                                  if (mp instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          var v7 = Control_Monad_Eff_Ref.readRef(mp.value0.input)();
                                          if (v7 instanceof Data_Maybe.Just) {
                                              if (v7.value0.value0.slotMapInputToPipeline[v] instanceof Data_Maybe.Nothing) {
                                                  return [  ];
                                              };
                                              if (v7.value0.value0.slotMapInputToPipeline[v] instanceof Data_Maybe.Just) {
                                                  var emptyV = Data_Array.replicate(Data_Array.length(mp.value0.programs))([  ]);
                                                  var addCmds = function (v8) {
                                                      return function (prgIdx) {
                                                          return Data_Maybe_Unsafe.fromJust(Data_Array.updateAt(prgIdx)(createObjectCommands(mp.value0.texUnitMapping)(input.uniformSetup)(obj)(mp.value0.programs[prgIdx]))(v8));
                                                      };
                                                  };
                                                  return Data_Foldable.foldl(Data_Foldable.foldableArray)(addCmds)(emptyV)(mp.value0.slotPrograms[(v7.value0.value0.slotMapInputToPipeline[v]).value0]);
                                              };
                                              throw new Error("Failed pattern match at Input line 68, column 1 - line 69, column 1: " + [ (v7.value0.value0.slotMapInputToPipeline[v]).constructor.name ]);
                                          };
                                          throw new Error("Failed pattern match at Input line 68, column 1 - line 69, column 1: " + [ v7.constructor.name ]);
                                      };
                                  };
                                  throw new Error("Failed pattern match at Input line 68, column 1 - line 69, column 1: " + [ mp.constructor.name ]);
                              })();
                              Control_Monad_Eff_Ref.writeRef(v5)(v7)();
                              return obj;
                          };
                      };
                  };
              };
          };
      };
  };
  exports["createObjectCommands"] = createObjectCommands;
  exports["uniformFTexture2D"] = uniformFTexture2D;
  exports["uniformV2F"] = uniformV2F;
  exports["uniformFloat"] = uniformFloat;
  exports["nullSetter"] = nullSetter;
  exports["sortSlotObjects"] = sortSlotObjects;
  exports["setScreenSize"] = setScreenSize;
  exports["addObject"] = addObject;
  exports["mkWebGLPipelineInput"] = mkWebGLPipelineInput;
  exports["mkUniform"] = mkUniform;;
 
})(PS["Input"] = PS["Input"] || {});
(function(exports) {
  /* global exports */

  // module Graphics.WebGLTexture


      "use strict";

      exports.texImage2D__ = function(target,level,internalformat,format,type,pixels)
                 {return function()
                  {gl.texImage2D(target,level,internalformat,format,type,pixels);};};                  

      exports.bindTexture__ = function(target)
          {return function()
           {gl.bindTexture(target,null);};};
 
})(PS["Graphics.WebGLTexture"] = PS["Graphics.WebGLTexture"] || {});
(function(exports) {
  /* global exports */

  // module Graphics.WebGL

      "use strict";


      exports.initGL_ = function (canvasId, attr) {
              return function() {
                var canvas = document.getElementById(canvasId);
                try {
                  gl = canvas.getContext("webgl", attr) || canvas.getContext("experimental-webgl", attr);
                }
                catch(e) {return false;}
                if (!gl)
                {
                  gl = null;
                  return false;
                }
                return true;
            };
        };

          exports.getCanvasWidth_ = function(canvasId) {
            return function() {
              var canvas = document.getElementById(canvasId);
              return canvas.width;
              };
          };

          exports.getCanvasHeight_ = function(canvasId) {
            return function() {
              var canvas = document.getElementById(canvasId);
              return canvas.height;
              };
          };                                          
 
})(PS["Graphics.WebGL"] = PS["Graphics.WebGL"] || {});
(function(exports) {
  /* global exports */

  // module Extensions


      "use strict";

      exports.fail = function(s) {
        throw new Error(s);
      }
 
})(PS["Extensions"] = PS["Extensions"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Extensions"];
  var Prelude = PS["Prelude"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Array = PS["Data.Array"];
  var $$Math = PS["Math"];
  exports["fail"] = $foreign.fail;;
 
})(PS["Extensions"] = PS["Extensions"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Graphics.WebGL"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_TypedArray = PS["Data.TypedArray"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Function = PS["Data.Function"];
  var Extensions = PS["Extensions"];
  var getCanvasWidth = function (context) {
      return $foreign.getCanvasWidth_(context.canvasName);
  };
  var getCanvasHeight = function (context) {
      return $foreign.getCanvasHeight_(context.canvasName);
  };
  var defContextAttributes = {
      alpha: true, 
      depth: true, 
      stencil: false, 
      antialias: true, 
      premultipliedAlpha: true, 
      preserveDrawingBuffer: false, 
      preferLowPowerToHighPerformance: false, 
      failIfMajorPerformanceCaveat: false
  };
  var runWebGL = function (canvasId) {
      return function (failure) {
          return function (success) {
              var makeContext = {
                  canvasName: canvasId
              };
              return function __do() {
                  var v = $foreign.initGL_(canvasId, defContextAttributes)();
                  if (v) {
                      return Control_Monad_Eff_WebGL.runWebGl_(success(makeContext))();
                  };
                  if (!v) {
                      return failure("Unable to initialize WebGL. Your browser may not support it.")();
                  };
                  throw new Error("Failed pattern match at Graphics.WebGL line 149, column 1 - line 150, column 1: " + [ v.constructor.name ]);
              };
          };
      };
  };
  exports["getCanvasHeight"] = getCanvasHeight;
  exports["getCanvasWidth"] = getCanvasWidth;
  exports["runWebGL"] = runWebGL;
  exports["defContextAttributes"] = defContextAttributes;;
 
})(PS["Graphics.WebGL"] = PS["Graphics.WebGL"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Graphics.WebGLTexture"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Graphics_WebGL = PS["Graphics.WebGL"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad = PS["Control.Monad"];
  var Extensions = PS["Extensions"];
  var Data_Function = PS["Data.Function"];
  var UNSIGNED_BYTE = (function () {
      function UNSIGNED_BYTE() {

      };
      UNSIGNED_BYTE.value = new UNSIGNED_BYTE();
      return UNSIGNED_BYTE;
  })();
  var RGBA = (function () {
      function RGBA() {

      };
      RGBA.value = new RGBA();
      return RGBA;
  })();
  var FLOAT = (function () {
      function FLOAT() {

      };
      FLOAT.value = new FLOAT();
      return FLOAT;
  })();
  var UNSIGNED_SHORT_5_6_5 = (function () {
      function UNSIGNED_SHORT_5_6_5() {

      };
      UNSIGNED_SHORT_5_6_5.value = new UNSIGNED_SHORT_5_6_5();
      return UNSIGNED_SHORT_5_6_5;
  })();
  var UNSIGNED_SHORT_4_4_4_4 = (function () {
      function UNSIGNED_SHORT_4_4_4_4() {

      };
      UNSIGNED_SHORT_4_4_4_4.value = new UNSIGNED_SHORT_4_4_4_4();
      return UNSIGNED_SHORT_4_4_4_4;
  })();
  var UNSIGNED_SHORT_5_5_5_1 = (function () {
      function UNSIGNED_SHORT_5_5_5_1() {

      };
      UNSIGNED_SHORT_5_5_5_1.value = new UNSIGNED_SHORT_5_5_5_1();
      return UNSIGNED_SHORT_5_5_5_1;
  })();
  var TTEXTURE_2D = (function () {
      function TTEXTURE_2D() {

      };
      TTEXTURE_2D.value = new TTEXTURE_2D();
      return TTEXTURE_2D;
  })();
  var TTEXTURE_CUBE_MAP = (function () {
      function TTEXTURE_CUBE_MAP() {

      };
      TTEXTURE_CUBE_MAP.value = new TTEXTURE_CUBE_MAP();
      return TTEXTURE_CUBE_MAP;
  })();
  var TEXTURE_MIN_FILTER = (function () {
      function TEXTURE_MIN_FILTER() {

      };
      TEXTURE_MIN_FILTER.value = new TEXTURE_MIN_FILTER();
      return TEXTURE_MIN_FILTER;
  })();
  var TEXTURE_MAG_FILTER = (function () {
      function TEXTURE_MAG_FILTER() {

      };
      TEXTURE_MAG_FILTER.value = new TEXTURE_MAG_FILTER();
      return TEXTURE_MAG_FILTER;
  })();
  var TEXTURE_WRAP_S = (function () {
      function TEXTURE_WRAP_S() {

      };
      TEXTURE_WRAP_S.value = new TEXTURE_WRAP_S();
      return TEXTURE_WRAP_S;
  })();
  var TEXTURE_WRAP_T = (function () {
      function TEXTURE_WRAP_T() {

      };
      TEXTURE_WRAP_T.value = new TEXTURE_WRAP_T();
      return TEXTURE_WRAP_T;
  })();
  var NEAREST = (function () {
      function NEAREST() {

      };
      NEAREST.value = new NEAREST();
      return NEAREST;
  })();
  var LINEAR = (function () {
      function LINEAR() {

      };
      LINEAR.value = new LINEAR();
      return LINEAR;
  })();
  var MIPMAP = (function () {
      function MIPMAP() {

      };
      MIPMAP.value = new MIPMAP();
      return MIPMAP;
  })();
  var TEXTURE_2D = (function () {
      function TEXTURE_2D() {

      };
      TEXTURE_2D.value = new TEXTURE_2D();
      return TEXTURE_2D;
  })();
  var TEXTURE_CUBE_MAP_POSITIVE_X = (function () {
      function TEXTURE_CUBE_MAP_POSITIVE_X() {

      };
      TEXTURE_CUBE_MAP_POSITIVE_X.value = new TEXTURE_CUBE_MAP_POSITIVE_X();
      return TEXTURE_CUBE_MAP_POSITIVE_X;
  })();
  var TEXTURE_CUBE_MAP_NEGATIVE_X = (function () {
      function TEXTURE_CUBE_MAP_NEGATIVE_X() {

      };
      TEXTURE_CUBE_MAP_NEGATIVE_X.value = new TEXTURE_CUBE_MAP_NEGATIVE_X();
      return TEXTURE_CUBE_MAP_NEGATIVE_X;
  })();
  var TEXTURE_CUBE_MAP_POSITIVE_Y = (function () {
      function TEXTURE_CUBE_MAP_POSITIVE_Y() {

      };
      TEXTURE_CUBE_MAP_POSITIVE_Y.value = new TEXTURE_CUBE_MAP_POSITIVE_Y();
      return TEXTURE_CUBE_MAP_POSITIVE_Y;
  })();
  var TEXTURE_CUBE_MAP_NEGATIVE_Y = (function () {
      function TEXTURE_CUBE_MAP_NEGATIVE_Y() {

      };
      TEXTURE_CUBE_MAP_NEGATIVE_Y.value = new TEXTURE_CUBE_MAP_NEGATIVE_Y();
      return TEXTURE_CUBE_MAP_NEGATIVE_Y;
  })();
  var TEXTURE_CUBE_MAP_POSITIVE_Z = (function () {
      function TEXTURE_CUBE_MAP_POSITIVE_Z() {

      };
      TEXTURE_CUBE_MAP_POSITIVE_Z.value = new TEXTURE_CUBE_MAP_POSITIVE_Z();
      return TEXTURE_CUBE_MAP_POSITIVE_Z;
  })();
  var TEXTURE_CUBE_MAP_NEGATIVE_Z = (function () {
      function TEXTURE_CUBE_MAP_NEGATIVE_Z() {

      };
      TEXTURE_CUBE_MAP_NEGATIVE_Z.value = new TEXTURE_CUBE_MAP_NEGATIVE_Z();
      return TEXTURE_CUBE_MAP_NEGATIVE_Z;
  })();
  var PACK_ALIGNMENT = (function () {
      function PACK_ALIGNMENT() {

      };
      PACK_ALIGNMENT.value = new PACK_ALIGNMENT();
      return PACK_ALIGNMENT;
  })();
  var UNPACK_ALIGNMENT = (function () {
      function UNPACK_ALIGNMENT() {

      };
      UNPACK_ALIGNMENT.value = new UNPACK_ALIGNMENT();
      return UNPACK_ALIGNMENT;
  })();
  var UNPACK_FLIP_Y_WEBGL = (function () {
      function UNPACK_FLIP_Y_WEBGL() {

      };
      UNPACK_FLIP_Y_WEBGL.value = new UNPACK_FLIP_Y_WEBGL();
      return UNPACK_FLIP_Y_WEBGL;
  })();
  var UNPACK_PREMULTIPLY_ALPHA_WEBGL = (function () {
      function UNPACK_PREMULTIPLY_ALPHA_WEBGL() {

      };
      UNPACK_PREMULTIPLY_ALPHA_WEBGL.value = new UNPACK_PREMULTIPLY_ALPHA_WEBGL();
      return UNPACK_PREMULTIPLY_ALPHA_WEBGL;
  })();
  var UNPACK_COLORSPACE_CONVERSION_WEBGL = (function () {
      function UNPACK_COLORSPACE_CONVERSION_WEBGL() {

      };
      UNPACK_COLORSPACE_CONVERSION_WEBGL.value = new UNPACK_COLORSPACE_CONVERSION_WEBGL();
      return UNPACK_COLORSPACE_CONVERSION_WEBGL;
  })();
  var IF_ALPHA = (function () {
      function IF_ALPHA() {

      };
      IF_ALPHA.value = new IF_ALPHA();
      return IF_ALPHA;
  })();
  var IF_LUMINANCE = (function () {
      function IF_LUMINANCE() {

      };
      IF_LUMINANCE.value = new IF_LUMINANCE();
      return IF_LUMINANCE;
  })();
  var IF_LUMINANCE_ALPHA = (function () {
      function IF_LUMINANCE_ALPHA() {

      };
      IF_LUMINANCE_ALPHA.value = new IF_LUMINANCE_ALPHA();
      return IF_LUMINANCE_ALPHA;
  })();
  var IF_RGB = (function () {
      function IF_RGB() {

      };
      IF_RGB.value = new IF_RGB();
      return IF_RGB;
  })();
  var IF_RGBA = (function () {
      function IF_RGBA() {

      };
      IF_RGBA.value = new IF_RGBA();
      return IF_RGBA;
  })();                                                              
  var textureTypeToConst = function (v) {
      if (v instanceof UNSIGNED_BYTE) {
          return Graphics_WebGLRaw._UNSIGNED_BYTE;
      };
      if (v instanceof RGBA) {
          return Graphics_WebGLRaw._RGBA;
      };
      if (v instanceof FLOAT) {
          return Graphics_WebGLRaw._FLOAT;
      };
      if (v instanceof UNSIGNED_SHORT_5_6_5) {
          return Graphics_WebGLRaw._UNSIGNED_SHORT_5_6_5;
      };
      if (v instanceof UNSIGNED_SHORT_4_4_4_4) {
          return Graphics_WebGLRaw._UNSIGNED_SHORT_4_4_4_4;
      };
      if (v instanceof UNSIGNED_SHORT_5_5_5_1) {
          return Graphics_WebGLRaw._UNSIGNED_SHORT_5_5_5_1;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 91, column 1 - line 92, column 1: " + [ v.constructor.name ]);
  };
  var texTargetToConst = function (v) {
      if (v instanceof TTEXTURE_2D) {
          return Graphics_WebGLRaw._TEXTURE_2D;
      };
      if (v instanceof TTEXTURE_CUBE_MAP) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 117, column 1 - line 118, column 1: " + [ v.constructor.name ]);
  };
  var texParNameToConst = function (v) {
      if (v instanceof TEXTURE_MIN_FILTER) {
          return Graphics_WebGLRaw._TEXTURE_MIN_FILTER;
      };
      if (v instanceof TEXTURE_MAG_FILTER) {
          return Graphics_WebGLRaw._TEXTURE_MAG_FILTER;
      };
      if (v instanceof TEXTURE_WRAP_S) {
          return Graphics_WebGLRaw._TEXTURE_WRAP_S;
      };
      if (v instanceof TEXTURE_WRAP_T) {
          return Graphics_WebGLRaw._TEXTURE_WRAP_T;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 128, column 1 - line 129, column 1: " + [ v.constructor.name ]);
  };
  var texParameteri = function (target) {
      return function (pname) {
          return function (param) {
              return Graphics_WebGLRaw.texParameteri_(texTargetToConst(target), texParNameToConst(pname), param);
          };
      };
  };
  var texFilterSpecToMinConst = function (v) {
      if (v instanceof NEAREST) {
          return Graphics_WebGLRaw._NEAREST;
      };
      if (v instanceof LINEAR) {
          return Graphics_WebGLRaw._LINEAR;
      };
      if (v instanceof MIPMAP) {
          return Graphics_WebGLRaw._LINEAR_MIPMAP_NEAREST;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 145, column 1 - line 146, column 1: " + [ v.constructor.name ]);
  };
  var texFilterSpecToMagConst = function (v) {
      if (v instanceof NEAREST) {
          return Graphics_WebGLRaw._NEAREST;
      };
      if (v instanceof LINEAR) {
          return Graphics_WebGLRaw._LINEAR;
      };
      if (v instanceof MIPMAP) {
          return Graphics_WebGLRaw._LINEAR;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 140, column 1 - line 141, column 1: " + [ v.constructor.name ]);
  };
  var targetTypeToConst = function (v) {
      if (v instanceof TEXTURE_2D) {
          return Graphics_WebGLRaw._TEXTURE_2D;
      };
      if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_X) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_X;
      };
      if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_X) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_X;
      };
      if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_Y) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_Y;
      };
      if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_Y) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_Y;
      };
      if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_Z) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_Z;
      };
      if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_Z) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_Z;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 60, column 1 - line 61, column 1: " + [ v.constructor.name ]);
  };
  var unbindTexture = function (tt) {
      return $foreign.bindTexture__(targetTypeToConst(tt));
  };
  var symbolicParameterToConst = function (v) {
      if (v instanceof PACK_ALIGNMENT) {
          return Graphics_WebGLRaw._PACK_ALIGNMENT;
      };
      if (v instanceof UNPACK_ALIGNMENT) {
          return Graphics_WebGLRaw._UNPACK_ALIGNMENT;
      };
      if (v instanceof UNPACK_FLIP_Y_WEBGL) {
          return Graphics_WebGLRaw._UNPACK_FLIP_Y_WEBGL;
      };
      if (v instanceof UNPACK_PREMULTIPLY_ALPHA_WEBGL) {
          return Graphics_WebGLRaw._UNPACK_PREMULTIPLY_ALPHA_WEBGL;
      };
      if (v instanceof UNPACK_COLORSPACE_CONVERSION_WEBGL) {
          return Graphics_WebGLRaw._UNPACK_COLORSPACE_CONVERSION_WEBGL;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 106, column 1 - line 107, column 1: " + [ v.constructor.name ]);
  };
  var pixelStorei = function (symbolicParameter) {
      return function (num) {
          return Graphics_WebGLRaw.pixelStorei_(symbolicParameterToConst(symbolicParameter), num);
      };
  };
  var internalFormatToConst = function (v) {
      if (v instanceof IF_ALPHA) {
          return Graphics_WebGLRaw._ALPHA;
      };
      if (v instanceof IF_LUMINANCE) {
          return Graphics_WebGLRaw._LUMINANCE;
      };
      if (v instanceof IF_LUMINANCE_ALPHA) {
          return Graphics_WebGLRaw._LUMINANCE_ALPHA;
      };
      if (v instanceof IF_RGB) {
          return Graphics_WebGLRaw._RGB;
      };
      if (v instanceof IF_RGBA) {
          return Graphics_WebGLRaw._RGBA;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 76, column 1 - line 77, column 1: " + [ v.constructor.name ]);
  };
  var texImage2D = function (target) {
      return function (level) {
          return function (internalFormat) {
              return function (format) {
                  return function (typ) {
                      return function (pixels) {
                          return $foreign.texImage2D__(targetTypeToConst(target), level, internalFormatToConst(internalFormat), internalFormatToConst(format), textureTypeToConst(typ), pixels);
                      };
                  };
              };
          };
      };
  };
  var bindTexture = function (tt) {
      return function (v) {
          return Graphics_WebGLRaw.bindTexture_(targetTypeToConst(tt), v);
      };
  };
  var handleLoad2D = function (texture) {
      return function (filterSpec) {
          return function (whatever) {
              return function __do() {
                  bindTexture(TEXTURE_2D.value)(texture)();
                  pixelStorei(UNPACK_FLIP_Y_WEBGL.value)(1)();
                  texImage2D(TEXTURE_2D.value)(0)(IF_RGBA.value)(IF_RGBA.value)(UNSIGNED_BYTE.value)(whatever)();
                  texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                  texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                  (function () {
                      if (filterSpec instanceof MIPMAP) {
                          return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                      };
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                  })()();
                  return unbindTexture(TEXTURE_2D.value)();
              };
          };
      };
  };
  exports["NEAREST"] = NEAREST;
  exports["LINEAR"] = LINEAR;
  exports["MIPMAP"] = MIPMAP;
  exports["TEXTURE_MIN_FILTER"] = TEXTURE_MIN_FILTER;
  exports["TEXTURE_MAG_FILTER"] = TEXTURE_MAG_FILTER;
  exports["TEXTURE_WRAP_S"] = TEXTURE_WRAP_S;
  exports["TEXTURE_WRAP_T"] = TEXTURE_WRAP_T;
  exports["TTEXTURE_2D"] = TTEXTURE_2D;
  exports["TTEXTURE_CUBE_MAP"] = TTEXTURE_CUBE_MAP;
  exports["PACK_ALIGNMENT"] = PACK_ALIGNMENT;
  exports["UNPACK_ALIGNMENT"] = UNPACK_ALIGNMENT;
  exports["UNPACK_FLIP_Y_WEBGL"] = UNPACK_FLIP_Y_WEBGL;
  exports["UNPACK_PREMULTIPLY_ALPHA_WEBGL"] = UNPACK_PREMULTIPLY_ALPHA_WEBGL;
  exports["UNPACK_COLORSPACE_CONVERSION_WEBGL"] = UNPACK_COLORSPACE_CONVERSION_WEBGL;
  exports["UNSIGNED_BYTE"] = UNSIGNED_BYTE;
  exports["RGBA"] = RGBA;
  exports["FLOAT"] = FLOAT;
  exports["UNSIGNED_SHORT_5_6_5"] = UNSIGNED_SHORT_5_6_5;
  exports["UNSIGNED_SHORT_4_4_4_4"] = UNSIGNED_SHORT_4_4_4_4;
  exports["UNSIGNED_SHORT_5_5_5_1"] = UNSIGNED_SHORT_5_5_5_1;
  exports["IF_ALPHA"] = IF_ALPHA;
  exports["IF_LUMINANCE"] = IF_LUMINANCE;
  exports["IF_LUMINANCE_ALPHA"] = IF_LUMINANCE_ALPHA;
  exports["IF_RGB"] = IF_RGB;
  exports["IF_RGBA"] = IF_RGBA;
  exports["TEXTURE_2D"] = TEXTURE_2D;
  exports["TEXTURE_CUBE_MAP_POSITIVE_X"] = TEXTURE_CUBE_MAP_POSITIVE_X;
  exports["TEXTURE_CUBE_MAP_NEGATIVE_X"] = TEXTURE_CUBE_MAP_NEGATIVE_X;
  exports["TEXTURE_CUBE_MAP_POSITIVE_Y"] = TEXTURE_CUBE_MAP_POSITIVE_Y;
  exports["TEXTURE_CUBE_MAP_NEGATIVE_Y"] = TEXTURE_CUBE_MAP_NEGATIVE_Y;
  exports["TEXTURE_CUBE_MAP_POSITIVE_Z"] = TEXTURE_CUBE_MAP_POSITIVE_Z;
  exports["TEXTURE_CUBE_MAP_NEGATIVE_Z"] = TEXTURE_CUBE_MAP_NEGATIVE_Z;
  exports["targetTypeToConst"] = targetTypeToConst;
  exports["handleLoad2D"] = handleLoad2D;
  exports["unbindTexture"] = unbindTexture;
  exports["bindTexture"] = bindTexture;;
 
})(PS["Graphics.WebGLTexture"] = PS["Graphics.WebGLTexture"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Graphics_WebGLTexture = PS["Graphics.WebGLTexture"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Function = PS["Data.Function"];
  var IR = PS["IR"];
  var LinearBase = PS["LinearBase"];
  var Type = PS["Type"];
  var Util = PS["Util"];     
  var uploadTexture2DToGPU = function (name) {
      return function (action) {
          return function __do() {
              var v = Graphics_WebGLRaw.createTexture_()();
              return Util.loadImage_(name, function (image) {
                  return function __do() {
                      Graphics_WebGLTexture.handleLoad2D(v)(Graphics_WebGLTexture.MIPMAP.value)(image)();
                      return action(new Type.TextureData(v))();
                  };
              })();
          };
      };
  };
  var compileBuffer = function (arrs) {
      var offsets = Prelude.append(Prelude.semigroupArray)([ 0 ])(Data_Traversable.scanl(Data_Traversable.traversableArray)(function (s) {
          return function (v) {
              return s + (Type.sizeOfArrayType(v.value0) * Data_Array.length(v.value1) | 0) | 0;
          };
      })(0)(arrs));
      var size = (function () {
          var $19 = Data_Array.last(offsets);
          if ($19 instanceof Data_Maybe.Just) {
              return $19.value0;
          };
          if ($19 instanceof Data_Maybe.Nothing) {
              return 0;
          };
          throw new Error("Failed pattern match at Data line 23, column 1 - line 24, column 1: " + [ $19.constructor.name ]);
      })();
      return function __do() {
          var v = Util.newArrayBuffer(size)();
          var v1 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(Data_Array.zip(arrs)(Data_Array.take(Data_Array.length(arrs))(offsets)))(function (v1) {
              var newView = (function () {
                  if (v1.value0.value0 instanceof Type.ArrWord8) {
                      return Util.newWord8View;
                  };
                  if (v1.value0.value0 instanceof Type.ArrWord16) {
                      return Util.newWord16View;
                  };
                  if (v1.value0.value0 instanceof Type.ArrInt8) {
                      return Util.newInt8View;
                  };
                  if (v1.value0.value0 instanceof Type.ArrInt16) {
                      return Util.newInt16View;
                  };
                  if (v1.value0.value0 instanceof Type.ArrFloat) {
                      return Util.newFloatView;
                  };
                  throw new Error("Failed pattern match at Data line 32, column 11 - line 33, column 11: " + [ v1.value0.value0.constructor.name ]);
              })();
              var len = Data_Array.length(v1.value0.value1);
              var bytes = len * Type.sizeOfArrayType(v1.value0.value0) | 0;
              return function __do() {
                  var v2 = newView(v)(v1.value1)(len)();
                  Util.setArrayView(v2)(v1.value0.value1)();
                  return {
                      arrType: v1.value0.value0, 
                      arrLength: len, 
                      arrOffset: v1.value1, 
                      arrSize: bytes, 
                      arrView: v2
                  };
              };
          })();
          var v2 = Graphics_WebGLRaw.createBuffer_()();
          Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ARRAY_BUFFER, v2)();
          Util.bufferDataAlloc(Graphics_WebGLRaw._ARRAY_BUFFER)(size)(Graphics_WebGLRaw._STATIC_DRAW)();
          Util.bufferSubDataArrayBuffer(Graphics_WebGLRaw._ARRAY_BUFFER)(0)(v)();
          Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ARRAY_BUFFER, Util.nullWebGLBuffer)();
          return {
              arrays: v1, 
              glBuffer: v2, 
              buffer: v
          };
      };
  };
  exports["uploadTexture2DToGPU"] = uploadTexture2DToGPU;
  exports["compileBuffer"] = compileBuffer;;
 
})(PS["Data"] = PS["Data"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Backend"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_StrMap_Unsafe = PS["Data.StrMap.Unsafe"];
  var Data_Map = PS["Data.Map"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Data_Function = PS["Data.Function"];
  var Type = PS["Type"];
  var IR = PS["IR"];
  var LinearBase = PS["LinearBase"];
  var Util = PS["Util"];
  var Input = PS["Input"];
  var Data = PS["Data"];
  var Data_Unfoldable = PS["Data.Unfoldable"];     
  var setupRasterContext = (function () {
      var setPointSize = function (ps) {
          if (ps instanceof IR.ProgramPointSize) {
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
          };
          if (ps instanceof IR.PointSize) {
              return Control_Monad_Eff_Console.error("PointSize is not supported!");
          };
          throw new Error("Failed pattern match at Backend line 56, column 5 - line 57, column 5: " + [ ps.constructor.name ]);
      };
      var cff = function (v) {
          if (v instanceof IR.CCW) {
              return Graphics_WebGLRaw._CCW;
          };
          if (v instanceof IR.CW) {
              return Graphics_WebGLRaw._CW;
          };
          throw new Error("Failed pattern match at Backend line 36, column 1 - line 37, column 1: " + [ v.constructor.name ]);
      };
      var cvt = function (v) {
          if (v instanceof IR.PointCtx) {
              return setPointSize(v.value0);
          };
          if (v instanceof IR.LineCtx) {
              return Graphics_WebGLRaw.lineWidth_(v.value0);
          };
          if (v instanceof IR.TriangleCtx) {
              return function __do() {
                  (function () {
                      if (v.value0 instanceof IR.CullNone) {
                          return Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._CULL_FACE);
                      };
                      if (v.value0 instanceof IR.CullFront) {
                          return function __do() {
                              Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._CULL_FACE)();
                              Graphics_WebGLRaw.cullFace_(Graphics_WebGLRaw._FRONT)();
                              return Graphics_WebGLRaw.frontFace_(cff(v.value0.value0))();
                          };
                      };
                      if (v.value0 instanceof IR.CullBack) {
                          return function __do() {
                              Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._CULL_FACE)();
                              Graphics_WebGLRaw.cullFace_(Graphics_WebGLRaw._BACK)();
                              return Graphics_WebGLRaw.frontFace_(cff(v.value0.value0))();
                          };
                      };
                      throw new Error("Failed pattern match at Backend line 36, column 1 - line 37, column 1: " + [ v.value0.constructor.name ]);
                  })()();
                  Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._POLYGON_OFFSET_FILL)();
                  if (v.value2 instanceof IR.NoOffset) {
                      return Prelude.unit;
                  };
                  if (v.value2 instanceof IR.Offset) {
                      Graphics_WebGLRaw.polygonOffset_(v.value2.value0, v.value2.value1)();
                      return Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._POLYGON_OFFSET_FILL)();
                  };
                  throw new Error("Failed pattern match at Backend line 36, column 1 - line 37, column 1: " + [ v.value2.constructor.name ]);
              };
          };
          throw new Error("Failed pattern match at Backend line 36, column 1 - line 37, column 1: " + [ v.constructor.name ]);
      };
      return cvt;
  })();
  var setupAccumulationContext = function (v) {
      var cvtC = function (v1) {
          return function (v2) {
              if (v2 instanceof Data_List.Cons && v2.value0 instanceof IR.ColorOp) {
                  return function __do() {
                      (function () {
                          if (v2.value0.value0 instanceof IR.NoBlending) {
                              return Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._BLEND);
                          };
                          if (v2.value0.value0 instanceof IR.BlendLogicOp) {
                              return function __do() {
                                  Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._BLEND)();
                                  return Control_Monad_Eff_Console.log("not presented: BlendLogicOp")();
                              };
                          };
                          if (v2.value0.value0 instanceof IR.Blend) {
                              return function __do() {
                                  Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._BLEND)();
                                  Graphics_WebGLRaw.blendEquationSeparate_(Util.blendEquationToGLType(v2.value0.value0.value0.colorEqSrc), Util.blendEquationToGLType(v2.value0.value0.value0.alphaEqSrc))();
                                  Graphics_WebGLRaw.blendColor_(v2.value0.value0.value0.color.value0, v2.value0.value0.value0.color.value1, v2.value0.value0.value0.color.value2, v2.value0.value0.value0.color.value3)();
                                  return Graphics_WebGLRaw.blendFuncSeparate_(Util.blendingFactorToGLType(v2.value0.value0.value0.colorFSrc), Util.blendingFactorToGLType(v2.value0.value0.value0.colorFDst), Util.blendingFactorToGLType(v2.value0.value0.value0.alphaFSrc), Util.blendingFactorToGLType(v2.value0.value0.value0.alphaFDst))();
                              };
                          };
                          throw new Error("Failed pattern match at Backend line 108, column 1 - line 109, column 1: " + [ v2.value0.value0.constructor.name ]);
                      })()();
                      (function () {
                          if (v2.value0.value1 instanceof IR.VBool) {
                              return Graphics_WebGLRaw.colorMask_(v2.value0.value1.value0, true, true, true);
                          };
                          if (v2.value0.value1 instanceof IR.VV2B) {
                              return Graphics_WebGLRaw.colorMask_(v2.value0.value1.value0.value0, v2.value0.value1.value0.value1, true, true);
                          };
                          if (v2.value0.value1 instanceof IR.VV3B) {
                              return Graphics_WebGLRaw.colorMask_(v2.value0.value1.value0.value0, v2.value0.value1.value0.value1, v2.value0.value1.value0.value2, true);
                          };
                          if (v2.value0.value1 instanceof IR.VV4B) {
                              return Graphics_WebGLRaw.colorMask_(v2.value0.value1.value0.value0, v2.value0.value1.value0.value1, v2.value0.value1.value0.value2, v2.value0.value1.value0.value3);
                          };
                          return Graphics_WebGLRaw.colorMask_(true, true, true, true);
                      })()();
                      return cvtC(v1 + 1 | 0)(v2.value1)();
                  };
              };
              if (v2 instanceof Data_List.Nil) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
              };
              throw new Error("Failed pattern match at Backend line 108, column 1 - line 109, column 1: " + [ v1.constructor.name, v2.constructor.name ]);
          };
      };
      var cvt = function (v1) {
          if (v1 instanceof Data_List.Cons && (v1.value0 instanceof IR.StencilOp && (v1.value1 instanceof Data_List.Cons && v1.value1.value0 instanceof IR.DepthOp))) {
              return cvtC(0)(v1.value1.value1);
          };
          if (v1 instanceof Data_List.Cons && v1.value0 instanceof IR.StencilOp) {
              return cvtC(0)(v1.value1);
          };
          if (v1 instanceof Data_List.Cons && v1.value0 instanceof IR.DepthOp) {
              return function __do() {
                  Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._STENCIL_TEST)();
                  var glDF = Util.comparisonFunctionToGLType(v1.value0.value0);
                  (function () {
                      var $145 = glDF === Util.comparisonFunctionToGLType(IR.Always.value) && v1.value0.value1 === false;
                      if ($145) {
                          return Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._DEPTH_TEST);
                      };
                      if (!$145) {
                          return function __do() {
                              Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._DEPTH_TEST)();
                              Graphics_WebGLRaw.depthFunc_(glDF)();
                              return Graphics_WebGLRaw.depthMask_(v1.value0.value1)();
                          };
                      };
                      throw new Error("Failed pattern match at Backend line 108, column 1 - line 109, column 1: " + [ $145.constructor.name ]);
                  })()();
                  return cvtC(0)(v1.value1)();
              };
          };
          return function __do() {
              Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._DEPTH_TEST)();
              Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._STENCIL_TEST)();
              return cvtC(0)(v1)();
          };
      };
      return cvt(v.value0.accOperations);
  };
  var renderSlot = function (cmds) {
      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(cmds)(function (cmd) {
          if (cmd instanceof Type.GLSetVertexAttribArray) {
              return function __do() {
                  Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ARRAY_BUFFER, cmd.value1)();
                  Graphics_WebGLRaw.enableVertexAttribArray_(cmd.value0)();
                  return Graphics_WebGLRaw.vertexAttribPointer_(cmd.value0, cmd.value2, cmd.value3, false, 0, cmd.value4)();
              };
          };
          if (cmd instanceof Type.GLDrawArrays) {
              return Graphics_WebGLRaw.drawArrays_(cmd.value0, cmd.value1, cmd.value2);
          };
          if (cmd instanceof Type.GLDrawElements) {
              return function __do() {
                  Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ELEMENT_ARRAY_BUFFER, cmd.value3)();
                  return Graphics_WebGLRaw.drawElements_(cmd.value0, cmd.value1, cmd.value2, cmd.value4)();
              };
          };
          if (cmd instanceof Type.GLSetVertexAttrib) {
              return function __do() {
                  Graphics_WebGLRaw.disableVertexAttribArray_(cmd.value0)();
                  return Util.setVertexAttrib(cmd.value0)(cmd.value1)();
              };
          };
          if (cmd instanceof Type.GLSetUniform) {
              return Util.setUniform(cmd.value0)(cmd.value1);
          };
          if (cmd instanceof Type.GLBindTexture && cmd.value2 instanceof Type.UniFTexture2D) {
              return function __do() {
                  var v = Control_Monad_Eff_Ref.readRef(cmd.value2.value0)();
                  var v1 = Control_Monad_Eff_Ref.readRef(cmd.value1)();
                  Graphics_WebGLRaw.activeTexture_(Graphics_WebGLRaw._TEXTURE0 + v1 | 0)();
                  return Graphics_WebGLRaw.bindTexture_(cmd.value0, v.value0)();
              };
          };
          throw new Error("Failed pattern match at Backend line 482, column 1 - line 483, column 1: " + [ cmd.constructor.name ]);
      });
  };
  var createStreamCommands = function (texUnitMap) {
      return function (topUnis) {
          return function (attrs) {
              return function (primitive) {
                  return function (prg) {
                      var streamUniCmds = (function () {
                          var uniMap = Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.toList(prg.inputUniforms));
                          var uniCmds = Prelude.flip(Prelude.map(Prelude.functorArray))(uniMap)(function (v) {
                              return Type.GLSetUniform.create(v.value1)(Data_StrMap_Unsafe.unsafeIndex(topUnis)(v.value0));
                          });
                          var topUni = function (n) {
                              return Data_StrMap_Unsafe.unsafeIndex(topUnis)(n);
                          };
                          var texCmds = Prelude.flip(Prelude.map(Prelude.functorArray))(prg.inputTextureUniforms)(function (n) {
                              var u = topUni(n);
                              var texUnit = Data_StrMap_Unsafe.unsafeIndex(texUnitMap)(n);
                              return new Type.GLBindTexture(Graphics_WebGLRaw._TEXTURE_2D, texUnit, u);
                          });
                          return Prelude.append(Prelude.semigroupArray)(uniCmds)(texCmds);
                      })();
                      var streamCmds = Prelude.flip(Prelude.map(Prelude.functorArray))(Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.values(prg.inputStreams)))(function (is) {
                          var s = Data_StrMap_Unsafe.unsafeIndex(attrs)(is.slotAttribute);
                          if (s instanceof Type.Stream) {
                              var glType = Util.arrayTypeToGLType((s.value0.buffer.arrays[s.value0.arrIdx]).arrType);
                              var ptr = function (compCnt) {
                                  return (s.value0.buffer.arrays[s.value0.arrIdx]).arrOffset + ((s.value0.start * compCnt | 0) * Type.sizeOfArrayType((s.value0.buffer.arrays[s.value0.arrIdx]).arrType) | 0) | 0;
                              };
                              var setFloatAttrib = function (n) {
                                  return new Type.GLSetVertexAttribArray(is.location, s.value0.buffer.glBuffer, n, glType, ptr(n));
                              };
                              return setFloatAttrib((function () {
                                  if (s.value0.sType instanceof Type.TFloat) {
                                      return 1;
                                  };
                                  if (s.value0.sType instanceof Type.TV2F) {
                                      return 2;
                                  };
                                  if (s.value0.sType instanceof Type.TV3F) {
                                      return 3;
                                  };
                                  if (s.value0.sType instanceof Type.TV4F) {
                                      return 4;
                                  };
                                  if (s.value0.sType instanceof Type.TM22F) {
                                      return 4;
                                  };
                                  if (s.value0.sType instanceof Type.TM33F) {
                                      return 9;
                                  };
                                  if (s.value0.sType instanceof Type.TM44F) {
                                      return 16;
                                  };
                                  throw new Error("Failed pattern match at Backend line 345, column 1 - line 346, column 1: " + [ s.value0.sType.constructor.name ]);
                              })());
                          };
                          return new Type.GLSetVertexAttrib(is.location, s);
                      });
                      var drawCmd = (function () {
                          var streamLen = function (a) {
                              if (a instanceof Type.Stream) {
                                  return [ a.value0.length ];
                              };
                              return [  ];
                          };
                          var prim = Util.primitiveToGLType(primitive);
                          var count = (Data_Array.concatMap(streamLen)(Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.values(attrs))))[0];
                          return new Type.GLDrawArrays(prim, 0, count);
                      })();
                      return Prelude.append(Prelude.semigroupArray)(Prelude.append(Prelude.semigroupArray)(streamUniCmds)(streamCmds))([ drawCmd ]);
                  };
              };
          };
      };
  };
  var setPipelineInput = function (p) {
      return function (input$prime) {
          return function __do() {
              var v = Control_Monad_Eff_Ref.readRef(p.input)();
              (function () {
                  if (v instanceof Data_Maybe.Nothing) {
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return function __do() {
                          Control_Monad_Eff_Ref.modifyRef(v.value0.value0.input.pipelines)(function (v1) {
                              return Data_Maybe_Unsafe.fromJust(Data_Array.updateAt(v.value0.value0.id)(Data_Maybe.Nothing.value)(v1));
                          })();
                          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v.value0.value0.slotMapPipelineToInput)(function (slotIdx) {
                              return function __do() {
                                  var v1 = Control_Monad_Eff_Ref.readRef(v.value0.value0.input.slotVector[slotIdx])();
                                  return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(Data_Map.values(v1.objectMap))(function (obj) {
                                      return Control_Monad_Eff_Ref.modifyRef(obj.commands)(function (v2) {
                                          return Data_Maybe_Unsafe.fromJust(Data_Array.updateAt(v.value0.value0.id)([  ])(v2));
                                      });
                                  })();
                              };
                          })();
                      };
                  };
                  throw new Error("Failed pattern match at Backend line 524, column 1 - line 525, column 1: " + [ v.constructor.name ]);
              })()();
              if (input$prime instanceof Data_Maybe.Nothing) {
                  return Control_Monad_Eff_Ref.writeRef(p.input)(Data_Maybe.Nothing.value)();
              };
              if (input$prime instanceof Data_Maybe.Just) {
                  var v1 = Control_Monad_Eff_Ref.readRef(input$prime.value0.pipelines)();
                  var v2 = (function () {
                      var $193 = Data_Array.findIndex(Data_Maybe.isNothing)(v1);
                      if ($193 instanceof Data_Maybe.Nothing) {
                          var len = Data_Array.length(v1);
                          return function __do() {
                              Control_Monad_Eff_Ref.modifyRef(input$prime.value0.pipelines)(function (v2) {
                                  return Data_Maybe_Unsafe.fromJust(Data_Array.updateAt(len)(new Data_Maybe.Just(p))(Data_Array.concat([ v2, Data_Array.replicate(len)(Data_Maybe.Nothing.value) ])));
                              })();
                              return new Data_Tuple.Tuple(len, new Data_Maybe.Just(len));
                          };
                      };
                      if ($193 instanceof Data_Maybe.Just) {
                          return function __do() {
                              Control_Monad_Eff_Ref.modifyRef(input$prime.value0.pipelines)(function (v2) {
                                  return Data_Maybe_Unsafe.fromJust(Data_Array.updateAt($193.value0)(new Data_Maybe.Just(p))(v2));
                              })();
                              return new Data_Tuple.Tuple($193.value0, Data_Maybe.Nothing.value);
                          };
                      };
                      throw new Error("Failed pattern match at Backend line 524, column 1 - line 525, column 1: " + [ $193.constructor.name ]);
                  })()();
                  var v3 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(p.slotNames)(function (n) {
                      var $196 = Data_StrMap.lookup(n)(input$prime.value0.slotMap);
                      if ($196 instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error: unknown slot name in input"));
                      };
                      if ($196 instanceof Data_Maybe.Just) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)($196.value0);
                      };
                      throw new Error("Failed pattern match at Backend line 524, column 1 - line 525, column 1: " + [ $196.constructor.name ]);
                  })();
                  var iToP = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v4) {
                      return function (p1) {
                          return Data_Maybe_Unsafe.fromJust(Data_Array.updateAt(v4.value1)(new Data_Maybe.Just(v4.value0))(p1));
                      };
                  })(Data_Array.replicate(Data_Maybe_Unsafe.fromJust(Data_Int.fromNumber(Data_StrMap.size(input$prime.value0.slotMap))))(Data_Maybe.Nothing.value))(Data_Array.zip(Data_Array[".."](0)(Data_Array.length(v3)))(v3));
                  Control_Monad_Eff_Ref.writeRef(p.input)(Data_Maybe.Just.create(new Type.InputConnection({
                      id: v2.value0, 
                      input: input$prime.value0, 
                      slotMapPipelineToInput: v3, 
                      slotMapInputToPipeline: iToP
                  })))();
                  var extend = function (v4) {
                      if (v2.value1 instanceof Data_Maybe.Nothing) {
                          return v4;
                      };
                      if (v2.value1 instanceof Data_Maybe.Just) {
                          return Data_Array.concat([ v4, Data_Array.replicate(v2.value1.value0)([  ]) ]);
                      };
                      throw new Error("Failed pattern match at Backend line 524, column 1 - line 525, column 1: " + [ v2.value1.constructor.name ]);
                  };
                  var emptyV = Data_Array.replicate(Data_Array.length(p.programs))([  ]);
                  Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_Array.zip(v3)(p.slotPrograms))(function (v4) {
                      return function __do() {
                          var v5 = Control_Monad_Eff_Ref.readRef(input$prime.value0.slotVector[v4.value0])();
                          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(Data_Map.values(v5.objectMap))(function (obj) {
                              var updateCmds = function (v6) {
                                  return function (prgIdx) {
                                      return Data_Maybe_Unsafe.fromJust(Data_Array.updateAt(prgIdx)(Input.createObjectCommands(p.texUnitMapping)(input$prime.value0.uniformSetup)(obj)(p.programs[prgIdx]))(v6));
                                  };
                              };
                              var cmdV = Data_Foldable.foldl(Data_Foldable.foldableArray)(updateCmds)(emptyV)(v4.value1);
                              return Control_Monad_Eff_Ref.modifyRef(obj.commands)(function (v6) {
                                  return Data_Maybe_Unsafe.fromJust(Data_Array.updateAt(v2.value0)(cmdV)(extend(v6)));
                              });
                          })();
                      };
                  })();
                  return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(p.streams)(function (s) {
                      return Control_Monad_Eff_Ref.writeRef(s.commands)(createStreamCommands(p.texUnitMapping)(input$prime.value0.uniformSetup)(s.attributes)(s.primitive)(p.programs[s.program]));
                  })();
              };
              throw new Error("Failed pattern match at Backend line 524, column 1 - line 525, column 1: " + [ input$prime.constructor.name ]);
          };
      };
  };
  var disposePipeline = function (p) {
      return function __do() {
          setPipelineInput(p)(Data_Maybe.Nothing.value)();
          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(p.programs)(function (prg) {
              return function __do() {
                  Graphics_WebGLRaw.deleteProgram_(prg.program)();
                  return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_Function.runFn1(Graphics_WebGLRaw.deleteShader_))(prg.shaders)();
              };
          })();
      };
  };
  var compileStreamData = function (v) {
      var compileAttr = function (v1) {
          if (v1 instanceof IR.VFloatArray) {
              return new Type["Array"](Type.ArrFloat.value, v1.value0);
          };
          if (v1 instanceof IR.VIntArray) {
              return (Type["Array"]).create(Type.ArrInt16.value)(Type.toArray(Type.arrStorable(Type.intStorable))(v1.value0));
          };
          if (v1 instanceof IR.VWordArray) {
              return (Type["Array"]).create(Type.ArrWord16.value)(Type.toArray(Type.arrStorable(Type.intStorable))(v1.value0));
          };
          throw new Error("Failed pattern match at Backend line 299, column 7 - line 300, column 7: " + [ v1.constructor.name ]);
      };
      return function __do() {
          var v1 = Data_Array.unzip(Prelude.map(Prelude.functorArray)(function (v1) {
              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value1.value0, v1.value0), compileAttr(v1.value1.value1));
          })(Data_Array.zip(Data_Array[".."](0)(Data_Maybe_Unsafe.fromJust(Data_Int.fromNumber(Data_StrMap.size(v.value0.streamData) - 1.0))))(Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.toList(v.value0.streamData)))));
          var getLength = function (n) {
              return function __do() {
                  var v2 = (function () {
                      var $222 = Data_StrMap.lookup(n)(v.value0.streamData);
                      if ($222 instanceof Data_Maybe.Just && $222.value0 instanceof IR.VFloatArray) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Data_Array.length($222.value0.value0));
                      };
                      if ($222 instanceof Data_Maybe.Just && $222.value0 instanceof IR.VIntArray) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Data_Array.length($222.value0.value0));
                      };
                      if ($222 instanceof Data_Maybe.Just && $222.value0 instanceof IR.VWordArray) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Data_Array.length($222.value0.value0));
                      };
                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("compileStreamData - getLength"));
                  })()();
                  var v3 = (function () {
                      var $230 = Data_StrMap.lookup(n)(v.value0.streamType);
                      if ($230 instanceof Data_Maybe.Just && $230.value0 instanceof IR.Float) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(1);
                      };
                      if ($230 instanceof Data_Maybe.Just && $230.value0 instanceof IR.V2F) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(2);
                      };
                      if ($230 instanceof Data_Maybe.Just && $230.value0 instanceof IR.V3F) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(3);
                      };
                      if ($230 instanceof Data_Maybe.Just && $230.value0 instanceof IR.V4F) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(4);
                      };
                      if ($230 instanceof Data_Maybe.Just && $230.value0 instanceof IR.M22F) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(4);
                      };
                      if ($230 instanceof Data_Maybe.Just && $230.value0 instanceof IR.M33F) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(9);
                      };
                      if ($230 instanceof Data_Maybe.Just && $230.value0 instanceof IR.M44F) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(16);
                      };
                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("compileStreamData - getLength element count"));
                  })()();
                  return v2 / v3 | 0;
              };
          };
          var v2 = Data.compileBuffer(v1.value1)();
          var v3 = Control_Monad_Eff_Ref.newRef([  ])();
          var toStream = function (v4) {
              return function __do() {
                  var v5 = Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Util.toStreamType)((function () {
                      var $242 = Data_StrMap.lookup(v4.value0)(v.value0.streamType);
                      if ($242 instanceof Data_Maybe.Just) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)($242.value0);
                      };
                      if ($242 instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("compileStreamData - toStream"));
                      };
                      throw new Error("Failed pattern match at Backend line 322, column 7 - line 334, column 3: " + [ $242.constructor.name ]);
                  })())();
                  var v6 = getLength(v4.value0)();
                  return new Data_Tuple.Tuple(v4.value0, new Type.Stream({
                      sType: v5, 
                      buffer: v2, 
                      arrIdx: v4.value1, 
                      start: 0, 
                      length: v6
                  }));
              };
          };
          var v4 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(toStream)(v1.value0)();
          return {
              commands: v3, 
              primitive: (function () {
                  if (v.value0.streamPrimitive instanceof IR.Points) {
                      return Type.PointList.value;
                  };
                  if (v.value0.streamPrimitive instanceof IR.Lines) {
                      return Type.LineList.value;
                  };
                  if (v.value0.streamPrimitive instanceof IR.Triangles) {
                      return Type.TriangleList.value;
                  };
                  throw new Error("Failed pattern match at Backend line 297, column 1 - line 298, column 1: " + [ v.value0.streamPrimitive.constructor.name ]);
              })(), 
              attributes: Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)(v4)), 
              program: Data_Maybe_Unsafe.fromJust(Data_Array.head(v.value0.streamPrograms))
          };
      };
  };
  var compileRenderTarget = function (texs) {
      return function (glTexs) {
          return function (v) {
              var isFB = function (v1) {
                  if (v1 instanceof IR.Framebuffer) {
                      return true;
                  };
                  return false;
              };
              var images = Prelude.map(Prelude.functorArray)(function (v1) {
                  return Data_Maybe_Unsafe.fromJust(v1.value0.targetRef);
              })(Data_Array.filter(function (v1) {
                  return Data_Maybe.isJust(v1.value0.targetRef);
              })(v.value0.renderTargets));
              var act1 = (function () {
                  var $262 = Data_Foldable.all(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(isFB)(images);
                  if ($262) {
                      var isColor = function (v1) {
                          if (v1 instanceof IR.Color) {
                              return true;
                          };
                          return false;
                      };
                      var cvt = function (v1) {
                          if (v1.value0.targetRef instanceof Data_Maybe.Nothing) {
                              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._NONE);
                          };
                          if (v1.value0.targetRef instanceof Data_Maybe.Just && (v1.value0.targetRef.value0 instanceof IR.Framebuffer && v1.value0.targetRef.value0.value0 instanceof IR.Color)) {
                              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._BACK);
                          };
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (compileRenderTarget)!"));
                      };
                      return function __do() {
                          var v1 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(cvt)(Data_Array.filter(function (v1) {
                              return isColor(v1.value0.targetSemantic);
                          })(v.value0.renderTargets))();
                          return {
                              framebufferObject: $foreign.nullWebGLFramebuffer, 
                              framebufferDrawbuffers: new Data_Maybe.Just(v1)
                          };
                      };
                  };
                  if (!$262) {
                      return function __do() {
                          Control_Monad.when(Control_Monad_Eff.monadEff)(Data_Foldable.any(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(isFB)(images))(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (compileRenderTarget)!")))();
                          var v1 = Graphics_WebGLRaw.createFramebuffer_()();
                          Graphics_WebGLRaw.bindFramebuffer_(Graphics_WebGLRaw._FRAMEBUFFER, v1)();
                          var attach = function (v2) {
                              return function (v3) {
                                  if (v3 instanceof IR.TextureImage && v3.value2 instanceof Data_Maybe.Nothing) {
                                      var attach2D = Graphics_WebGLRaw.framebufferTexture2D_(Graphics_WebGLRaw._FRAMEBUFFER, v2, (glTexs[v3.value0]).textureTarget, (glTexs[v3.value0]).textureObject, v3.value1);
                                      var act0 = (function () {
                                          if ((texs[v3.value0]).value0.textureType instanceof IR.Texture2D && (texs[v3.value0]).value0.textureType.value1 === 1) {
                                              return attach2D;
                                          };
                                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid texture format!"));
                                      })();
                                      return act0;
                                  };
                                  return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid texture format!"));
                              };
                          };
                          var go = function (v2) {
                              return function (v3) {
                                  if (v3.value0.targetSemantic instanceof IR.Stencil && v3.value0.targetRef instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Stencil support is not implemented yet!"))();
                                          return v2;
                                      };
                                  };
                                  if (v3.value0.targetSemantic instanceof IR.Depth && v3.value0.targetRef instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          attach(Graphics_WebGLRaw._DEPTH_ATTACHMENT)(v3.value0.targetRef.value0)();
                                          return v2;
                                      };
                                  };
                                  if (v3.value0.targetSemantic instanceof IR.Color && v3.value0.targetRef instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          attach(Graphics_WebGLRaw._COLOR_ATTACHMENT0)(v3.value0.targetRef.value0)();
                                          return new Data_Tuple.Tuple(Data_Array[":"](Graphics_WebGLRaw._COLOR_ATTACHMENT0)(v2.value0), v2.value1 + 1 | 0);
                                      };
                                  };
                                  if (v3.value0.targetSemantic instanceof IR.Color && v3.value0.targetRef instanceof Data_Maybe.Nothing) {
                                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(Data_Array[":"](Graphics_WebGLRaw._NONE)(v2.value0), v2.value1 + 1 | 0));
                                  };
                                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(v2);
                              };
                          };
                          var v2 = Data_Array.foldM(Control_Monad_Eff.monadEff)(go)(new Data_Tuple.Tuple([  ], 0))(v.value0.renderTargets)();
                          return {
                              framebufferObject: v1, 
                              framebufferDrawbuffers: Data_Maybe.Nothing.value
                          };
                      };
                  };
                  throw new Error("Failed pattern match at Backend line 242, column 1 - line 243, column 1: " + [ $262.constructor.name ]);
              })();
              return act1;
          };
      };
  };
  var compileProgram = function (v) {
      return function __do() {
          var v1 = Graphics_WebGLRaw.createProgram_()();
          var createAndAttach = function (src) {
              return function (t) {
                  return function __do() {
                      var v2 = Graphics_WebGLRaw.createShader_(t)();
                      Graphics_WebGLRaw.shaderSource_(v2, src)();
                      Graphics_WebGLRaw.compileShader_(v2)();
                      var v3 = Graphics_WebGLRaw.getShaderInfoLog_(v2)();
                      Control_Monad_Eff_Console.log(v3)();
                      var v4 = Graphics_WebGLRaw.getShaderParameter_(v2, Graphics_WebGLRaw._COMPILE_STATUS)();
                      Control_Monad.when(Control_Monad_Eff.monadEff)(v4 !== true)(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("compileShader failed!")))();
                      Graphics_WebGLRaw.attachShader_(v1, v2)();
                      return v2;
                  };
              };
          };
          var v2 = createAndAttach(v.value0.vertexShader)(Graphics_WebGLRaw._VERTEX_SHADER)();
          var v3 = createAndAttach(v.value0.fragmentShader)(Graphics_WebGLRaw._FRAGMENT_SHADER)();
          Graphics_WebGLRaw.linkProgram_(v1)();
          var v4 = Graphics_WebGLRaw.getProgramInfoLog_(v1)();
          Control_Monad_Eff_Console.log(v4)();
          var v5 = Graphics_WebGLRaw.getProgramParameter_(v1, Graphics_WebGLRaw._LINK_STATUS)();
          Control_Monad.when(Control_Monad_Eff.monadEff)(v5 !== true)(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("link program failed!")))();
          var v6 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_StrMap.fromList)(Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(Data_StrMap.toList(v.value0.programUniforms))(function (v6) {
              return function __do() {
                  var v7 = Graphics_WebGLRaw.getUniformLocation_(v1, v6.value0)();
                  return new Data_Tuple.Tuple(v6.value0, v7);
              };
          }))();
          var v7 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_StrMap.fromList)(Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(Data_StrMap.toList(v.value0.programInTextures))(function (v7) {
              return function __do() {
                  var v8 = Graphics_WebGLRaw.getUniformLocation_(v1, v7.value0)();
                  return new Data_Tuple.Tuple(v7.value0, v8);
              };
          }))();
          var v8 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_StrMap.fromList)(Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(Data_StrMap.toList(v.value0.programStreams))(function (v8) {
              return function __do() {
                  var v9 = Graphics_WebGLRaw.getAttribLocation_(v1, v8.value0)();
                  Control_Monad_Eff_Console.log("attrib location " + (v8.value0 + (" " + Prelude.show(Prelude.showInt)(v9))))();
                  return new Data_Tuple.Tuple(v8.value0, {
                      location: v9, 
                      slotAttribute: v8.value1.value0.name
                  });
              };
          }))();
          var texUnis = Data_Array.filter(function (n) {
              return Data_StrMap.member(n)(v.value0.programUniforms);
          })(Data_StrMap.keys(v7));
          return {
              program: v1, 
              shaders: [ v2, v3 ], 
              inputUniforms: v6, 
              inputSamplers: v7, 
              inputStreams: v8, 
              inputTextureUniforms: texUnis
          };
      };
  };
  var clearRenderTarget = function (values) {
      var setClearValue = function (v) {
          return function (v1) {
              if (v1.value0.imageSemantic instanceof IR.Depth && v1.value0.clearValue instanceof IR.VFloat) {
                  return function __do() {
                      Graphics_WebGLRaw.depthMask_(true)();
                      Graphics_WebGLRaw.clearDepth_(v1.value0.clearValue.value0)();
                      return {
                          mask: v.mask | Graphics_WebGLRaw._DEPTH_BUFFER_BIT, 
                          index: v.index
                      };
                  };
              };
              if (v1.value0.imageSemantic instanceof IR.Stencil && v1.value0.clearValue instanceof IR.VWord) {
                  return function __do() {
                      Graphics_WebGLRaw.clearStencil_(v1.value0.clearValue.value0)();
                      return {
                          mask: v.mask | Graphics_WebGLRaw._STENCIL_BUFFER_BIT, 
                          index: v.index
                      };
                  };
              };
              if (v1.value0.imageSemantic instanceof IR.Color) {
                  return function __do() {
                      (function () {
                          if (v1.value0.clearValue instanceof IR.VFloat) {
                              return Graphics_WebGLRaw.clearColor_(v1.value0.clearValue.value0, 0.0, 0.0, 1.0);
                          };
                          if (v1.value0.clearValue instanceof IR.VV2F) {
                              return Graphics_WebGLRaw.clearColor_(v1.value0.clearValue.value0.value0, v1.value0.clearValue.value0.value1, 0.0, 1.0);
                          };
                          if (v1.value0.clearValue instanceof IR.VV3F) {
                              return Graphics_WebGLRaw.clearColor_(v1.value0.clearValue.value0.value0, v1.value0.clearValue.value0.value1, v1.value0.clearValue.value0.value2, 1.0);
                          };
                          if (v1.value0.clearValue instanceof IR.VV4F) {
                              return Graphics_WebGLRaw.clearColor_(v1.value0.clearValue.value0.value0, v1.value0.clearValue.value0.value1, v1.value0.clearValue.value0.value2, v1.value0.clearValue.value0.value3);
                          };
                          return Graphics_WebGLRaw.clearColor_(0.0, 0.0, 0.0, 1.0);
                      })()();
                      Graphics_WebGLRaw.colorMask_(true, true, true, true)();
                      return {
                          mask: v.mask | Graphics_WebGLRaw._COLOR_BUFFER_BIT, 
                          index: v.index + 1 | 0
                      };
                  };
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (clearRenderTarget)"));
          };
      };
      return function __do() {
          var v = Data_Array.foldM(Control_Monad_Eff.monadEff)(setClearValue)({
              mask: 0, 
              index: 0
          })(values)();
          return Graphics_WebGLRaw.clear_(v.mask)();
      };
  };
  var renderPipeline = function (p) {
      return function __do() {
          Control_Monad_Eff_Ref.writeRef(p.curProgram)(Data_Maybe.Nothing.value)();
          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(p.commands)(function (cmd) {
              if (cmd instanceof IR.SetRenderTarget) {
                  return function __do() {
                      var v = Control_Monad_Eff_Ref.readRef(p.input)();
                      (function () {
                          if (v instanceof Data_Maybe.Nothing) {
                              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return function __do() {
                                  var v1 = Control_Monad_Eff_Ref.readRef(v.value0.value0.input.screenSize)();
                                  return Graphics_WebGLRaw.viewport_(0, 0, v1.value0, v1.value1)();
                              };
                          };
                          throw new Error("Failed pattern match at Backend line 415, column 1 - line 416, column 1: " + [ v.constructor.name ]);
                      })()();
                      return Graphics_WebGLRaw.bindFramebuffer_(Graphics_WebGLRaw._FRAMEBUFFER, (p.targets[cmd.value0]).framebufferObject)();
                  };
              };
              if (cmd instanceof IR.SetSamplerUniform) {
                  return function __do() {
                      var cp = Control_Monad_Eff_Ref.readRef(p.curProgram)();
                      if (cp instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid pipeline, no active program"))();
                      };
                      if (cp instanceof Data_Maybe.Just) {
                          var $373 = Data_StrMap.lookup(cmd.value0)((p.programs[cp.value0]).inputSamplers);
                          if ($373 instanceof Data_Maybe.Nothing) {
                              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (SetSamplerUniform)!"))();
                          };
                          if ($373 instanceof Data_Maybe.Just) {
                              var $374 = Data_StrMap.lookup(cmd.value0)(p.texUnitMapping);
                              if ($374 instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (SetSamplerUniform)!"))();
                              };
                              if ($374 instanceof Data_Maybe.Just) {
                                  Control_Monad_Eff_Ref.writeRef($374.value0)(cmd.value1)();
                                  return Graphics_WebGLRaw.uniform1i_($373.value0, cmd.value1)();
                              };
                              throw new Error("Failed pattern match at Backend line 415, column 1 - line 416, column 1: " + [ $374.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Backend line 415, column 1 - line 416, column 1: " + [ $373.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Backend line 415, column 1 - line 416, column 1: " + [ cp.constructor.name ]);
                  };
              };
              if (cmd instanceof IR.SetTexture) {
                  return function __do() {
                      Graphics_WebGLRaw.activeTexture_(Graphics_WebGLRaw._TEXTURE0 + cmd.value0 | 0)();
                      return Graphics_WebGLRaw.bindTexture_((p.textures[cmd.value1]).textureTarget, (p.textures[cmd.value1]).textureObject)();
                  };
              };
              if (cmd instanceof IR.SetRasterContext) {
                  return setupRasterContext(cmd.value0);
              };
              if (cmd instanceof IR.SetAccumulationContext) {
                  return setupAccumulationContext(cmd.value0);
              };
              if (cmd instanceof IR.ClearRenderTarget) {
                  return clearRenderTarget(cmd.value0);
              };
              if (cmd instanceof IR.SetProgram) {
                  return function __do() {
                      Control_Monad_Eff_Ref.writeRef(p.curProgram)(new Data_Maybe.Just(cmd.value0))();
                      return Graphics_WebGLRaw.useProgram_((p.programs[cmd.value0]).program)();
                  };
              };
              if (cmd instanceof IR.RenderStream) {
                  return Control_Bind["=<<"](Control_Monad_Eff.bindEff)(renderSlot)(Control_Monad_Eff_Ref.readRef((p.streams[cmd.value0]).commands));
              };
              if (cmd instanceof IR.RenderSlot) {
                  return function __do() {
                      var cp = Control_Monad_Eff_Ref.readRef(p.curProgram)();
                      if (cp instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid pipeline, no active program"))();
                      };
                      if (cp instanceof Data_Maybe.Just) {
                          var input = Control_Monad_Eff_Ref.readRef(p.input)();
                          if (input instanceof Data_Maybe.Nothing) {
                              return Prelude.unit;
                          };
                          if (input instanceof Data_Maybe.Just) {
                              var v = Control_Monad_Eff_Ref.readRef(input.value0.value0.input.slotVector[input.value0.value0.slotMapPipelineToInput[cmd.value0]])();
                              return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v.sortedObjects)(function (v1) {
                                  return function __do() {
                                      var v2 = Control_Monad_Eff_Ref.readRef(v1.value1.enabled)();
                                      return Control_Monad.when(Control_Monad_Eff.monadEff)(v2)(function __do() {
                                          var v3 = Control_Monad_Eff_Ref.readRef(v1.value1.commands)();
                                          return renderSlot(v3[input.value0.value0.id][cp.value0])();
                                      })();
                                  };
                              })();
                          };
                          throw new Error("Failed pattern match at Backend line 415, column 1 - line 416, column 1: " + [ input.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Backend line 415, column 1 - line 416, column 1: " + [ cp.constructor.name ]);
                  };
              };
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
          })();
      };
  };
  var allocPipeline = function (v) {
      return function __do() {
          Graphics_WebGLRaw.getExtension_("WEBGL_depth_texture")();
          var v1 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Util.compileTexture)(v.value0.textures)();
          var v2 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(compileRenderTarget(v.value0.textures)(v1))(v.value0.targets)();
          var v3 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(compileProgram)(v.value0.programs)();
          var v4 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_StrMap.fromFoldable(Data_Foldable.foldableArray))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function (k) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Tuple.Tuple.create(k))(Control_Monad_Eff_Ref.newRef(0));
          })(Data_Array.nub(Prelude.eqString)(Data_Array.concatMap(function (v4) {
              return Data_StrMap.keys(v4.value0.programInTextures);
          })(v.value0.programs))))();
          var v5 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
          var v6 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
          var v7 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(compileStreamData)(v.value0.streams)();
          return {
              targets: v2, 
              textures: v1, 
              programs: v3, 
              commands: v.value0.commands, 
              input: v5, 
              slotPrograms: Prelude.map(Prelude.functorArray)(function (v8) {
                  return v8.value0.slotPrograms;
              })(v.value0.slots), 
              slotNames: Prelude.map(Prelude.functorArray)(function (v8) {
                  return v8.value0.slotName;
              })(v.value0.slots), 
              curProgram: v6, 
              texUnitMapping: v4, 
              streams: v7
          };
      };
  };
  exports["setPipelineInput"] = setPipelineInput;
  exports["disposePipeline"] = disposePipeline;
  exports["renderSlot"] = renderSlot;
  exports["renderPipeline"] = renderPipeline;
  exports["allocPipeline"] = allocPipeline;
  exports["createStreamCommands"] = createStreamCommands;
  exports["compileStreamData"] = compileStreamData;
  exports["compileRenderTarget"] = compileRenderTarget;
  exports["compileProgram"] = compileProgram;
  exports["clearRenderTarget"] = clearRenderTarget;
  exports["setupAccumulationContext"] = setupAccumulationContext;
  exports["setupRasterContext"] = setupRasterContext;;
 
})(PS["Backend"] = PS["Backend"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.find = function(selector) {
      return function(ob) {
          return function() {
              return ob.find(selector);
          };
      };
  };

  exports.create = function(html) {
      return function() {
          return jQuery(html);
      };
  };

  exports.getProp = function(p) {
      return function(ob) {
          return function() {
              return ob.prop(p);
          };
      };
  };

  exports.append = function(ob1) {
      return function(ob) {
          return function() {
              return ob.append(ob1);
          };
      };
  };

  exports.body = function() {
      return jQuery(document.body);
  };

  exports.getText = function(ob) {
      return function() {
          return ob.text();
      };
  };

  exports.setText = function(text) {
      return function(ob) {
          return function() {
              return ob.text(text);
          };
      };
  };

  exports.getValue = function(ob) {
      return function() {
          return ob.val();
      };
  };

  exports.setValue = function(val) {
      return function(ob) {
          return function() {
              return ob.val(val);
          };
      };
  };

  exports.on = function(evt) {
      return function(act) {
          return function(ob) {
              return function() {
                  return ob.on(evt, function(e) {
                      act(e)(jQuery(this))();
                  });
              };
          };
      };
  };
 
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var Data_String = PS["Data.String"];     
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  }; 
  var readString = unsafeReadTagged("String");
  var readNumber = unsafeReadTagged("Number");
  var readBoolean = unsafeReadTagged("Boolean");
  exports["TypeMismatch"] = TypeMismatch;
  exports["readNumber"] = readNumber;
  exports["readBoolean"] = readBoolean;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;;
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.JQuery"];
  var Prelude = PS["Prelude"];
  var DOM = PS["DOM"];
  var Data_Foreign = PS["Data.Foreign"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["on"] = $foreign.on;
  exports["setValue"] = $foreign.setValue;
  exports["getValue"] = $foreign.getValue;
  exports["setText"] = $foreign.setText;
  exports["getText"] = $foreign.getText;
  exports["body"] = $foreign.body;
  exports["append"] = $foreign.append;
  exports["getProp"] = $foreign.getProp;
  exports["create"] = $foreign.create;
  exports["find"] = $foreign.find;;
 
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
  // module Data.Argonaut.Parser

  exports._jsonParser = function(fail, succ, s) {
      try {
          return succ(JSON.parse(s));
      }
      catch(e) {
          return fail(e.message);
      }
  };
 
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Function = PS["Data.Function"];
  var Data_Either = PS["Data.Either"];     
  var jsonParser = function (j) {
      return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;;
 
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  /* globals exports */
  "use strict";

  exports.readFloat = parseFloat;                 
 
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Global"];
  exports["readFloat"] = $foreign.readFloat;;
 
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Main

  exports.getMousePos =
    function getMousePos(e) {
        return function() {
          var mouseX, mouseY;

          if(e.offsetX) {
              mouseX = e.offsetX;
              mouseY = e.offsetY;
          }
          else if(e.layerX) {
              mouseX = e.layerX;
              mouseY = e.layerY;
          }
          return [mouseX,mouseY];
        };
    };

  exports.getJSON =
    function getJSON(uri) {
      return function(act) {
        return function() {
          $.getJSON(uri, function(data) {
            act(data)();
          });
        };
      };
    };

  exports.addCommand =
    function addCommand(editor) {
      return function(cmdName) {
        return function(winKey) {
          return function(macKey) {
            return function(cmd) {
              return function() {
                editor.commands.addCommand({
                  name: cmdName,
                  bindKey: {win: winKey,  mac: macKey},
                  exec: function(editor) {
                    cmd(editor)();
                  }
                });
              };
            };
          };
        };
      };
    };

  exports.tokenTooltip =
    function tokenTooltip(editor) {
      return function(getTy) {
        return function() {
            editor.tokenTooltip = new myTokenTooltip(editor,getTy);
        };
      };
    };

  exports.addMarkerImpl =
    function addMarkerImpl(range, clazz, type, inFront, self) {
      return function() {
        return self.addMarker(range, clazz, type, inFront);
      };
    };
 
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Map = PS["Data.Map"];
  var Data_List = PS["Data.List"];
  var LinearBase = PS["LinearBase"];
  var Data_Argonaut_Combinators = PS["Data.Argonaut.Combinators"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Printer = PS["Data.Argonaut.Printer"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var IR = PS["IR"];
  var Data_Either = PS["Data.Either"];     
  var Range = (function () {
      function Range(value0) {
          this.value0 = value0;
      };
      Range.create = function (value0) {
          return new Range(value0);
      };
      return Range;
  })();
  var TypeInfo = (function () {
      function TypeInfo(value0) {
          this.value0 = value0;
      };
      TypeInfo.create = function (value0) {
          return new TypeInfo(value0);
      };
      return TypeInfo;
  })();
  var CompileError = (function () {
      function CompileError(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      CompileError.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new CompileError(value0, value1, value2);
              };
          };
      };
      return CompileError;
  })();
  var Compiled = (function () {
      function Compiled(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Compiled.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Compiled(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Compiled;
  })();
  var decodeJsonRange = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Range") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("startLine"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("startColumn"))(function (v3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("endLine"))(function (v4) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(v)("endColumn"))(function (v5) {
                                  return Prelude.pure(Data_Either.applicativeEither)(new Range({
                                      startLine: v2, 
                                      startColumn: v3, 
                                      endLine: v4, 
                                      endColumn: v5
                                  }));
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at TypeInfo line 53, column 1 - line 70, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonTypeInfo = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "TypeInfo") {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonRange)(v)("range"))(function (v2) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("text"))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)(new TypeInfo({
                              range: v2, 
                              text: v3
                          }));
                      });
                  });
              };
              throw new Error("Failed pattern match at TypeInfo line 78, column 1 - line 91, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonCompileResult = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "CompileError") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(CompileError.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonRange))(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("arg1")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonTypeInfo))(v)("arg2"));
              };
              if (v1 === "Compiled") {
                  return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Compiled.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("arg0")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("arg1")))(Data_Argonaut_Combinators[".?"](IR.decodeJsonPipeline)(v)("arg2")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(decodeJsonTypeInfo))(v)("arg3"));
              };
              throw new Error("Failed pattern match at TypeInfo line 96, column 1 - line 102, column 95: " + [ v1.constructor.name ]);
          });
      });
  });
  exports["CompileError"] = CompileError;
  exports["Compiled"] = Compiled;
  exports["TypeInfo"] = TypeInfo;
  exports["Range"] = Range;
  exports["decodeJsonRange"] = decodeJsonRange;
  exports["decodeJsonTypeInfo"] = decodeJsonTypeInfo;
  exports["decodeJsonCompileResult"] = decodeJsonCompileResult;;
 
})(PS["TypeInfo"] = PS["TypeInfo"] || {});
(function(exports) {
  "use strict";

  // module Timer

  exports.timeout = function(millis) {
      return function(action) {
          return function() {
              return setTimeout(action, millis);
          };
      };
  };

  exports.clearTimeout = function(timer) {
      return function() {
          clearTimeout(timer);
      };
  };

  exports.nowEpochMilliseconds = function () {
    return Date.now();
  };
 
})(PS["Timer"] = PS["Timer"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Timer"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["nowEpochMilliseconds"] = $foreign.nowEpochMilliseconds;
  exports["clearTimeout"] = $foreign.clearTimeout;
  exports["timeout"] = $foreign.timeout;;
 
})(PS["Timer"] = PS["Timer"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module WebSocket

  exports.webSocketImpl =
    function webSocketImpl(uri) {
     return function(h) {
      return function(ok) {
       return function(err) {
        return function() {
          try {
            var ws = new WebSocket(uri);
            ws.onerror = function(event) {
              h.onError(ws)(event.data)();
            };
  
            ws.onopen = function() {
              h.onOpen(ws)();
            };
  
            ws.onclose = function() {
              h.onClose();
            };
  
            ws.onmessage = function(event) {
              h.onMessage(ws)(event.data)();
            };
            return ok(ws);
          } catch (e) {
            console.log("exception");
            console.log(e);
            console.log(e.type);
            return err(e.type);
          }
        };
       };
      };
     };
    };

  exports.send =
    function send (socket) {
      return function (data) {
        return function () {
          socket.send(data);
        };
      };
    };
 
})(PS["WebSocket"] = PS["WebSocket"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["WebSocket"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];     
  var webSocket = function (a) {
      return function (b) {
          return $foreign.webSocketImpl(a)(b)(Data_Either.Right.create)(Data_Either.Left.create);
      };
  };
  exports["webSocket"] = webSocket;
  exports["send"] = $foreign.send;;
 
})(PS["WebSocket"] = PS["WebSocket"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Array = PS["Data.Array"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_Argonaut_Combinators = PS["Data.Argonaut.Combinators"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Printer = PS["Data.Argonaut.Printer"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var IR = PS["IR"];
  var LinearBase = PS["LinearBase"];
  var Type = PS["Type"];
  var Data = PS["Data"];
  var Input = PS["Input"];
  var Data_Either = PS["Data.Either"];
  var Data_Unfoldable = PS["Data.Unfoldable"];     
  var P_Points = (function () {
      function P_Points() {

      };
      P_Points.value = new P_Points();
      return P_Points;
  })();
  var P_TriangleStrip = (function () {
      function P_TriangleStrip() {

      };
      P_TriangleStrip.value = new P_TriangleStrip();
      return P_TriangleStrip;
  })();
  var P_Triangles = (function () {
      function P_Triangles() {

      };
      P_Triangles.value = new P_Triangles();
      return P_Triangles;
  })();
  var P_TriangleStripI = (function () {
      function P_TriangleStripI(value0) {
          this.value0 = value0;
      };
      P_TriangleStripI.create = function (value0) {
          return new P_TriangleStripI(value0);
      };
      return P_TriangleStripI;
  })();
  var P_TrianglesI = (function () {
      function P_TrianglesI(value0) {
          this.value0 = value0;
      };
      P_TrianglesI.create = function (value0) {
          return new P_TrianglesI(value0);
      };
      return P_TrianglesI;
  })();
  var AT_Float = (function () {
      function AT_Float() {

      };
      AT_Float.value = new AT_Float();
      return AT_Float;
  })();
  var AT_V2F = (function () {
      function AT_V2F() {

      };
      AT_V2F.value = new AT_V2F();
      return AT_V2F;
  })();
  var AT_V3F = (function () {
      function AT_V3F() {

      };
      AT_V3F.value = new AT_V3F();
      return AT_V3F;
  })();
  var AT_V4F = (function () {
      function AT_V4F() {

      };
      AT_V4F.value = new AT_V4F();
      return AT_V4F;
  })();
  var AT_M22F = (function () {
      function AT_M22F() {

      };
      AT_M22F.value = new AT_M22F();
      return AT_M22F;
  })();
  var AT_M33F = (function () {
      function AT_M33F() {

      };
      AT_M33F.value = new AT_M33F();
      return AT_M33F;
  })();
  var AT_M44F = (function () {
      function AT_M44F() {

      };
      AT_M44F.value = new AT_M44F();
      return AT_M44F;
  })();
  var A_Float = (function () {
      function A_Float(value0) {
          this.value0 = value0;
      };
      A_Float.create = function (value0) {
          return new A_Float(value0);
      };
      return A_Float;
  })();
  var A_V2F = (function () {
      function A_V2F(value0) {
          this.value0 = value0;
      };
      A_V2F.create = function (value0) {
          return new A_V2F(value0);
      };
      return A_V2F;
  })();
  var A_V3F = (function () {
      function A_V3F(value0) {
          this.value0 = value0;
      };
      A_V3F.create = function (value0) {
          return new A_V3F(value0);
      };
      return A_V3F;
  })();
  var A_V4F = (function () {
      function A_V4F(value0) {
          this.value0 = value0;
      };
      A_V4F.create = function (value0) {
          return new A_V4F(value0);
      };
      return A_V4F;
  })();
  var A_M22F = (function () {
      function A_M22F(value0) {
          this.value0 = value0;
      };
      A_M22F.create = function (value0) {
          return new A_M22F(value0);
      };
      return A_M22F;
  })();
  var A_M33F = (function () {
      function A_M33F(value0) {
          this.value0 = value0;
      };
      A_M33F.create = function (value0) {
          return new A_M33F(value0);
      };
      return A_M33F;
  })();
  var A_M44F = (function () {
      function A_M44F(value0) {
          this.value0 = value0;
      };
      A_M44F.create = function (value0) {
          return new A_M44F(value0);
      };
      return A_M44F;
  })();
  var A_Flat = (function () {
      function A_Flat(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      A_Flat.create = function (value0) {
          return function (value1) {
              return new A_Flat(value0, value1);
          };
      };
      return A_Flat;
  })();
  var Mesh = (function () {
      function Mesh(value0) {
          this.value0 = value0;
      };
      Mesh.create = function (value0) {
          return new Mesh(value0);
      };
      return Mesh;
  })();
  var meshAttrToStream = function (b) {
      return function (i) {
          return function (a) {
              return Type.Stream.create((function () {
                  if (a instanceof A_Float) {
                      return {
                          sType: Type.TFloat.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof A_V2F) {
                      return {
                          sType: Type.TV2F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof A_V3F) {
                      return {
                          sType: Type.TV3F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof A_V4F) {
                      return {
                          sType: Type.TV4F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof A_M22F) {
                      return {
                          sType: Type.TM22F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof A_M33F) {
                      return {
                          sType: Type.TM33F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof A_M44F) {
                      return {
                          sType: Type.TM44F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof A_Flat) {
                      var tn = (function () {
                          if (a.value0 instanceof AT_Float) {
                              return new Data_Tuple.Tuple(Type.TFloat.value, 1);
                          };
                          if (a.value0 instanceof AT_V2F) {
                              return new Data_Tuple.Tuple(Type.TV2F.value, 2);
                          };
                          if (a.value0 instanceof AT_V3F) {
                              return new Data_Tuple.Tuple(Type.TV3F.value, 3);
                          };
                          if (a.value0 instanceof AT_V4F) {
                              return new Data_Tuple.Tuple(Type.TV4F.value, 4);
                          };
                          if (a.value0 instanceof AT_M22F) {
                              return new Data_Tuple.Tuple(Type.TM22F.value, 4);
                          };
                          if (a.value0 instanceof AT_M33F) {
                              return new Data_Tuple.Tuple(Type.TM33F.value, 9);
                          };
                          if (a.value0 instanceof AT_M44F) {
                              return new Data_Tuple.Tuple(Type.TM44F.value, 16);
                          };
                          throw new Error("Failed pattern match at Mesh line 114, column 7 - line 122, column 5: " + [ a.value0.constructor.name ]);
                      })();
                      return {
                          sType: tn.value0, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value1) / tn.value1 | 0
                      };
                  };
                  throw new Error("Failed pattern match at Mesh line 104, column 1 - line 105, column 1: " + [ a.constructor.name ]);
              })());
          };
      };
  };
  var meshAttrToArray = function (a) {
      if (a instanceof A_Float) {
          return (Type["Array"]).create(Type.ArrFloat.value)(Type.toArray(Type.arrStorable(Type.numStorable))(a.value0));
      };
      if (a instanceof A_V2F) {
          return (Type["Array"]).create(Type.ArrFloat.value)(Type.toArray(Type.arrStorable(Type.v2Storable(Type.numStorable)))(a.value0));
      };
      if (a instanceof A_V3F) {
          return (Type["Array"]).create(Type.ArrFloat.value)(Type.toArray(Type.arrStorable(Type.v3Storable(Type.numStorable)))(a.value0));
      };
      if (a instanceof A_V4F) {
          return (Type["Array"]).create(Type.ArrFloat.value)(Type.toArray(Type.arrStorable(Type.v4Storable(Type.numStorable)))(a.value0));
      };
      if (a instanceof A_M22F) {
          return (Type["Array"]).create(Type.ArrFloat.value)(Type.toArray(Type.arrStorable(Type.v2Storable(Type.v2Storable(Type.numStorable))))(a.value0));
      };
      if (a instanceof A_M33F) {
          return (Type["Array"]).create(Type.ArrFloat.value)(Type.toArray(Type.arrStorable(Type.v3Storable(Type.v3Storable(Type.numStorable))))(a.value0));
      };
      if (a instanceof A_M44F) {
          return (Type["Array"]).create(Type.ArrFloat.value)(Type.toArray(Type.arrStorable(Type.v4Storable(Type.v4Storable(Type.numStorable))))(a.value0));
      };
      if (a instanceof A_Flat) {
          return new Type["Array"](Type.ArrFloat.value, a.value1);
      };
      throw new Error("Failed pattern match at Mesh line 93, column 1 - line 94, column 1: " + [ a.constructor.name ]);
  };
  var decodeJsonMeshPrimitive = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "P_Points") {
                  return Prelude.pure(Data_Either.applicativeEither)(P_Points.value);
              };
              if (v1 === "P_TriangleStrip") {
                  return Prelude.pure(Data_Either.applicativeEither)(P_TriangleStrip.value);
              };
              if (v1 === "P_Triangles") {
                  return Prelude.pure(Data_Either.applicativeEither)(P_Triangles.value);
              };
              if (v1 === "P_TriangleStripI") {
                  return Prelude["<$>"](Data_Either.functorEither)(P_TriangleStripI.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonInt))(v)("values"));
              };
              if (v1 === "P_TrianglesI") {
                  return Prelude["<$>"](Data_Either.functorEither)(P_TrianglesI.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonInt))(v)("values"));
              };
              throw new Error("Failed pattern match at Mesh line 125, column 1 - line 136, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonMeshAttribute = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "A_Float") {
                  return Prelude["<$>"](Data_Either.functorEither)(A_Flat.create(AT_Float.value))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(v)("values"));
              };
              if (v1 === "A_V2F") {
                  return Prelude["<$>"](Data_Either.functorEither)(A_Flat.create(AT_V2F.value))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(v)("values"));
              };
              if (v1 === "A_V3F") {
                  return Prelude["<$>"](Data_Either.functorEither)(A_Flat.create(AT_V3F.value))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(v)("values"));
              };
              if (v1 === "A_V4F") {
                  return Prelude["<$>"](Data_Either.functorEither)(A_Flat.create(AT_V4F.value))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(v)("values"));
              };
              if (v1 === "A_M22F") {
                  return Prelude["<$>"](Data_Either.functorEither)(A_Flat.create(AT_M22F.value))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(v)("values"));
              };
              if (v1 === "A_M33F") {
                  return Prelude["<$>"](Data_Either.functorEither)(A_Flat.create(AT_M33F.value))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(v)("values"));
              };
              if (v1 === "A_M44F") {
                  return Prelude["<$>"](Data_Either.functorEither)(A_Flat.create(AT_M44F.value))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(v)("values"));
              };
              throw new Error("Failed pattern match at Mesh line 136, column 1 - line 149, column 1: " + [ v1.constructor.name ]);
          });
      });
  });
  var decodeJsonMesh = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeStrMap(decodeJsonMeshAttribute))(v)("attributes"))(function (v1) {
              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](decodeJsonMeshPrimitive)(v)("primitive"))(function (v2) {
                  return Prelude.pure(Data_Either.applicativeEither)(new Mesh({
                      attributes: v1, 
                      primitive: v2, 
                      gpuData: Data_Maybe.Nothing.value
                  }));
              });
          });
      });
  });
  var compileMesh = function (v) {
      if (v.value0.gpuData instanceof Data_Maybe.Just) {
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Mesh(v.value0));
      };
      if (v.value0.gpuData instanceof Data_Maybe.Nothing) {
          var mkIndexBuf = function (v1) {
              return function __do() {
                  var v2 = Data.compileBuffer([ new Type["Array"](Type.ArrWord16.value, Type.toArray(Type.arrStorable(Type.intStorable))(v1)) ])();
                  return new Data_Maybe.Just({
                      buffer: v2, 
                      arrIdx: 0, 
                      start: 0, 
                      length: Data_Array.length(v1)
                  });
              };
          };
          return function __do() {
              var v1 = Data.compileBuffer(Prelude.map(Prelude.functorArray)(meshAttrToArray)(Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_StrMap.values(v.value0.attributes))))();
              var v2 = (function () {
                  if (v.value0.primitive instanceof P_Points) {
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(Type.PointList.value, Data_Maybe.Nothing.value));
                  };
                  if (v.value0.primitive instanceof P_TriangleStrip) {
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(Type.TriangleStrip.value, Data_Maybe.Nothing.value));
                  };
                  if (v.value0.primitive instanceof P_Triangles) {
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(Type.TriangleList.value, Data_Maybe.Nothing.value));
                  };
                  if (v.value0.primitive instanceof P_TriangleStripI) {
                      return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Tuple.Tuple.create(Type.TriangleStrip.value))(mkIndexBuf(v.value0.primitive.value0));
                  };
                  if (v.value0.primitive instanceof P_TrianglesI) {
                      return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Tuple.Tuple.create(Type.TriangleList.value))(mkIndexBuf(v.value0.primitive.value0));
                  };
                  throw new Error("Failed pattern match at Mesh line 75, column 1 - line 76, column 1: " + [ v.value0.primitive.constructor.name ]);
              })()();
              var streams = Data_StrMap.fromList(Data_List.zipWith(function (i) {
                  return function (v3) {
                      return new Data_Tuple.Tuple(v3.value0, meshAttrToStream(v1)(i)(v3.value1));
                  };
              })(Data_List.range(0)(Data_Maybe_Unsafe.fromJust(Data_Int.fromNumber(Data_StrMap.size(v.value0.attributes)))))(Data_StrMap.toList(v.value0.attributes)));
              var gpuData = {
                  primitive: v2.value0, 
                  streams: streams, 
                  indices: v2.value1
              };
              return Mesh.create((function () {
                  var $59 = {};
                  for (var $60 in v.value0) {
                      if (v.value0.hasOwnProperty($60)) {
                          $59[$60] = v.value0[$60];
                      };
                  };
                  $59.gpuData = new Data_Maybe.Just(gpuData);
                  return $59;
              })());
          };
      };
      throw new Error("Failed pattern match at Mesh line 75, column 1 - line 76, column 1: " + [ v.value0.gpuData.constructor.name ]);
  };
  var addMesh = function (input) {
      return function (slotName) {
          return function (v) {
              return function (objUniNames) {
                  if (v.value0.gpuData instanceof Data_Maybe.Nothing) {
                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("addMesh: only compiled mesh with GPUData is supported"));
                  };
                  if (v.value0.gpuData instanceof Data_Maybe.Just) {
                      var $69 = Data_StrMap.lookup(slotName)(input.schema.slots);
                      if ($69 instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("addMesh: slot not found"));
                      };
                      if ($69 instanceof Data_Maybe.Just) {
                          var filterStream = function (v1) {
                              return Data_StrMap.member(v1.value0)($69.value0.attributes);
                          };
                          return Input.addObject(input)(slotName)(v.value0.gpuData.value0.primitive)(v.value0.gpuData.value0.indices)(Data_StrMap.fromList(Data_List.filter(filterStream)(Data_StrMap.toList(v.value0.gpuData.value0.streams))))(objUniNames);
                      };
                      throw new Error("Failed pattern match at Mesh line 65, column 1 - line 66, column 1: " + [ $69.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Mesh line 65, column 1 - line 66, column 1: " + [ v.value0.gpuData.constructor.name ]);
              };
          };
      };
  };
  exports["Mesh"] = Mesh;
  exports["P_Points"] = P_Points;
  exports["P_TriangleStrip"] = P_TriangleStrip;
  exports["P_Triangles"] = P_Triangles;
  exports["P_TriangleStripI"] = P_TriangleStripI;
  exports["P_TrianglesI"] = P_TrianglesI;
  exports["A_Float"] = A_Float;
  exports["A_V2F"] = A_V2F;
  exports["A_V3F"] = A_V3F;
  exports["A_V4F"] = A_V4F;
  exports["A_M22F"] = A_M22F;
  exports["A_M33F"] = A_M33F;
  exports["A_M44F"] = A_M44F;
  exports["A_Flat"] = A_Flat;
  exports["AT_Float"] = AT_Float;
  exports["AT_V2F"] = AT_V2F;
  exports["AT_V3F"] = AT_V3F;
  exports["AT_V4F"] = AT_V4F;
  exports["AT_M22F"] = AT_M22F;
  exports["AT_M33F"] = AT_M33F;
  exports["AT_M44F"] = AT_M44F;
  exports["meshAttrToStream"] = meshAttrToStream;
  exports["meshAttrToArray"] = meshAttrToArray;
  exports["compileMesh"] = compileMesh;
  exports["addMesh"] = addMesh;
  exports["decodeJsonMeshPrimitive"] = decodeJsonMeshPrimitive;
  exports["decodeJsonMeshAttribute"] = decodeJsonMeshAttribute;
  exports["decodeJsonMesh"] = decodeJsonMesh;;
 
})(PS["Mesh"] = PS["Mesh"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_List = PS["Data.List"];
  var Data_Tuple = PS["Data.Tuple"];
  var Backend = PS["Backend"];
  var IR = PS["IR"];
  var Mesh = PS["Mesh"];
  var Type = PS["Type"];
  var Input = PS["Input"];
  var LinearBase = PS["LinearBase"];
  var Data_Foldable = PS["Data.Foldable"];     
  var myQuad = new Mesh.Mesh({
      attributes: Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", new Mesh.A_V2F([ new LinearBase.V2(-1.0, 1.0), new LinearBase.V2(-1.0, -1.0), new LinearBase.V2(1.0, -1.0), new LinearBase.V2(1.0, -1.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(-1.0, 1.0) ])) ])), 
      primitive: Mesh.P_Triangles.value, 
      gpuData: Data_Maybe.Nothing.value
  });
  var lambdaCubeVertices = [ new LinearBase.V3(5.0, -5.0, -4.0), new LinearBase.V3(5.0, -4.0, -4.0), new LinearBase.V3(-5.0, -4.0, -4.0), new LinearBase.V3(5.0, -5.0, -4.0), new LinearBase.V3(-5.0, -4.0, -4.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(5.0, -4.0, -4.0), new LinearBase.V3(5.0, -4.0, -5.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(5.0, -4.0, -4.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(-5.0, -4.0, -4.0), new LinearBase.V3(5.0, -4.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(5.0, -4.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, -5.0, -4.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(-5.0, -4.0, -4.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, -4.0, -5.0), new LinearBase.V3(5.0, -4.0, -4.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, -4.0, -4.0), new LinearBase.V3(5.0, -5.0, -4.0), new LinearBase.V3(5.0, 4.0, -4.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -4.0), new LinearBase.V3(5.0, 4.0, -4.0), new LinearBase.V3(-5.0, 5.0, -4.0), new LinearBase.V3(-5.0, 4.0, -4.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 5.0, -4.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(-5.0, 4.0, -5.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 4.0, -5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(5.0, 4.0, -4.0), new LinearBase.V3(-5.0, 4.0, -4.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(-5.0, 4.0, -4.0), new LinearBase.V3(-5.0, 4.0, -5.0), new LinearBase.V3(-5.0, 4.0, -4.0), new LinearBase.V3(-5.0, 5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 4.0, -4.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 4.0, -5.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(5.0, 4.0, -4.0), new LinearBase.V3(5.0, 4.0, 5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(5.0, 4.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, 5.0, 4.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(5.0, 5.0, 4.0), new LinearBase.V3(5.0, 4.0, 4.0), new LinearBase.V3(-5.0, 4.0, 4.0), new LinearBase.V3(5.0, 5.0, 4.0), new LinearBase.V3(-5.0, 4.0, 4.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(5.0, 4.0, 4.0), new LinearBase.V3(5.0, 4.0, 5.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(5.0, 4.0, 4.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(-5.0, 4.0, 4.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(-5.0, 4.0, 4.0), new LinearBase.V3(5.0, 4.0, 4.0), new LinearBase.V3(5.0, 5.0, 4.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, 4.0, 4.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, 4.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(-5.0, -4.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -4.0, 5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(5.0, -4.0, 4.0), new LinearBase.V3(-5.0, -4.0, 4.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(-5.0, -4.0, 4.0), new LinearBase.V3(-5.0, -4.0, 5.0), new LinearBase.V3(5.0, -4.0, 4.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 4.0), new LinearBase.V3(5.0, -4.0, 4.0), new LinearBase.V3(-5.0, -5.0, 4.0), new LinearBase.V3(-5.0, -4.0, 4.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -4.0, 5.0), new LinearBase.V3(-5.0, -4.0, 4.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -4.0, 4.0), new LinearBase.V3(-5.0, -5.0, 4.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(5.0, -4.0, 4.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(-4.0, -5.0, -4.0), new LinearBase.V3(-4.0, 5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -4.0), new LinearBase.V3(-4.0, -5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -4.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(-4.0, 5.0, -4.0), new LinearBase.V3(-4.0, 5.0, -5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-4.0, 5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 5.0, -4.0), new LinearBase.V3(-4.0, 5.0, -5.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-4.0, 5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-4.0, -5.0, -4.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -4.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-4.0, 5.0, -5.0), new LinearBase.V3(-4.0, 5.0, -4.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-4.0, 5.0, -4.0), new LinearBase.V3(-4.0, -5.0, -4.0), new LinearBase.V3(-4.0, -5.0, 5.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-4.0, -5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-4.0, 5.0, 4.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-4.0, 5.0, 4.0), new LinearBase.V3(-4.0, -5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 4.0), new LinearBase.V3(-4.0, 5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 4.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(-4.0, -5.0, 4.0), new LinearBase.V3(-4.0, -5.0, 5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-4.0, -5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 4.0), new LinearBase.V3(-5.0, -5.0, 4.0), new LinearBase.V3(-4.0, -5.0, 4.0), new LinearBase.V3(-4.0, 5.0, 4.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-4.0, -5.0, 4.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-4.0, -5.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(4.0, 5.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(4.0, 5.0, 5.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, 5.0, 4.0), new LinearBase.V3(4.0, 5.0, 4.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(4.0, 5.0, 4.0), new LinearBase.V3(4.0, 5.0, 5.0), new LinearBase.V3(5.0, 5.0, 4.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(4.0, -5.0, 4.0), new LinearBase.V3(5.0, 5.0, 4.0), new LinearBase.V3(4.0, -5.0, 4.0), new LinearBase.V3(4.0, 5.0, 4.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(4.0, -5.0, 4.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(4.0, 5.0, 5.0), new LinearBase.V3(4.0, 5.0, 4.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(4.0, 5.0, 4.0), new LinearBase.V3(4.0, -5.0, 4.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(5.0, 5.0, 4.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, -5.0, 4.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(5.0, -5.0, -4.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(4.0, 5.0, -4.0), new LinearBase.V3(5.0, -5.0, -4.0), new LinearBase.V3(4.0, 5.0, -4.0), new LinearBase.V3(4.0, -5.0, -4.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(4.0, 5.0, -4.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(4.0, -5.0, -5.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(4.0, -5.0, -5.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, -5.0, -4.0), new LinearBase.V3(4.0, -5.0, -4.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(4.0, -5.0, -4.0), new LinearBase.V3(4.0, -5.0, -5.0), new LinearBase.V3(4.0, -5.0, -4.0), new LinearBase.V3(4.0, 5.0, -4.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(4.0, -5.0, -4.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(4.0, -5.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, 5.0, -4.0), new LinearBase.V3(5.0, -5.0, -4.0), new LinearBase.V3(-4.0, -5.0, 5.0), new LinearBase.V3(-4.0, -4.0, 5.0), new LinearBase.V3(-5.0, -4.0, 5.0), new LinearBase.V3(-4.0, -5.0, 5.0), new LinearBase.V3(-5.0, -4.0, 5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-4.0, -4.0, 5.0), new LinearBase.V3(-4.0, -4.0, -5.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(-4.0, -4.0, 5.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(-5.0, -4.0, 5.0), new LinearBase.V3(-4.0, -4.0, -5.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-4.0, -4.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-4.0, -5.0, 5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -4.0, 5.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(-5.0, -5.0, 5.0), new LinearBase.V3(-5.0, -4.0, -5.0), new LinearBase.V3(-5.0, -5.0, -5.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-4.0, -4.0, -5.0), new LinearBase.V3(-4.0, -4.0, 5.0), new LinearBase.V3(-4.0, -5.0, -5.0), new LinearBase.V3(-4.0, -4.0, 5.0), new LinearBase.V3(-4.0, -5.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(4.0, -4.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(4.0, -4.0, 5.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(5.0, -4.0, -5.0), new LinearBase.V3(4.0, -4.0, -5.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(4.0, -4.0, -5.0), new LinearBase.V3(4.0, -4.0, 5.0), new LinearBase.V3(5.0, -4.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(4.0, -5.0, -5.0), new LinearBase.V3(5.0, -4.0, -5.0), new LinearBase.V3(4.0, -5.0, -5.0), new LinearBase.V3(4.0, -4.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(4.0, -5.0, -5.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(4.0, -4.0, 5.0), new LinearBase.V3(4.0, -4.0, -5.0), new LinearBase.V3(4.0, -5.0, 5.0), new LinearBase.V3(4.0, -4.0, -5.0), new LinearBase.V3(4.0, -5.0, -5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, -4.0, -5.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(5.0, -5.0, -5.0), new LinearBase.V3(5.0, -4.0, 5.0), new LinearBase.V3(5.0, -5.0, 5.0), new LinearBase.V3(5.0, 4.0, 5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(4.0, 5.0, 5.0), new LinearBase.V3(5.0, 4.0, 5.0), new LinearBase.V3(4.0, 5.0, 5.0), new LinearBase.V3(4.0, 4.0, 5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(4.0, 5.0, 5.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(4.0, 4.0, -5.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(4.0, 4.0, -5.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(5.0, 4.0, 5.0), new LinearBase.V3(4.0, 4.0, 5.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(4.0, 4.0, 5.0), new LinearBase.V3(4.0, 4.0, -5.0), new LinearBase.V3(4.0, 4.0, 5.0), new LinearBase.V3(4.0, 5.0, 5.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(4.0, 4.0, 5.0), new LinearBase.V3(4.0, 5.0, -5.0), new LinearBase.V3(4.0, 4.0, -5.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(5.0, 5.0, -5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, 4.0, -5.0), new LinearBase.V3(5.0, 5.0, 5.0), new LinearBase.V3(5.0, 4.0, 5.0), new LinearBase.V3(-4.0, 4.0, 5.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-4.0, 4.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-4.0, 5.0, -5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-4.0, 5.0, -5.0), new LinearBase.V3(-4.0, 4.0, -5.0), new LinearBase.V3(-5.0, 4.0, -5.0), new LinearBase.V3(-4.0, 5.0, -5.0), new LinearBase.V3(-5.0, 4.0, -5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-4.0, 4.0, -5.0), new LinearBase.V3(-4.0, 4.0, 5.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(-4.0, 4.0, -5.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(-5.0, 4.0, -5.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(-5.0, 5.0, 5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 4.0, 5.0), new LinearBase.V3(-5.0, 5.0, -5.0), new LinearBase.V3(-5.0, 4.0, -5.0), new LinearBase.V3(-4.0, 4.0, -5.0), new LinearBase.V3(-4.0, 5.0, -5.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-4.0, 4.0, -5.0), new LinearBase.V3(-4.0, 5.0, 5.0), new LinearBase.V3(-4.0, 4.0, 5.0), new LinearBase.V3(4.596, 3.8890000000000002, -4.0), new LinearBase.V3(3.8890000000000002, 4.596, -4.0), new LinearBase.V3(-4.596, -3.8890000000000002, -4.0), new LinearBase.V3(4.596, 3.8890000000000002, -4.0), new LinearBase.V3(-4.596, -3.8890000000000002, -4.0), new LinearBase.V3(-3.8890000000000002, -4.596, -4.0), new LinearBase.V3(3.8890000000000002, 4.596, -4.0), new LinearBase.V3(3.8890000000000002, 4.596, -5.0), new LinearBase.V3(-4.596, -3.8890000000000002, -5.0), new LinearBase.V3(3.8890000000000002, 4.596, -4.0), new LinearBase.V3(-4.596, -3.8890000000000002, -5.0), new LinearBase.V3(-4.596, -3.8890000000000002, -4.0), new LinearBase.V3(3.8890000000000002, 4.596, -5.0), new LinearBase.V3(4.596, 3.8890000000000002, -5.0), new LinearBase.V3(-3.8890000000000002, -4.596, -5.0), new LinearBase.V3(3.8890000000000002, 4.596, -5.0), new LinearBase.V3(-3.8890000000000002, -4.596, -5.0), new LinearBase.V3(-4.596, -3.8890000000000002, -5.0), new LinearBase.V3(4.596, 3.8890000000000002, -5.0), new LinearBase.V3(4.596, 3.8890000000000002, -4.0), new LinearBase.V3(-3.8890000000000002, -4.596, -4.0), new LinearBase.V3(4.596, 3.8890000000000002, -5.0), new LinearBase.V3(-3.8890000000000002, -4.596, -4.0), new LinearBase.V3(-3.8890000000000002, -4.596, -5.0), new LinearBase.V3(-3.8890000000000002, -4.596, -4.0), new LinearBase.V3(-4.596, -3.8890000000000002, -4.0), new LinearBase.V3(-4.596, -3.8890000000000002, -5.0), new LinearBase.V3(-3.8890000000000002, -4.596, -4.0), new LinearBase.V3(-4.596, -3.8890000000000002, -5.0), new LinearBase.V3(-3.8890000000000002, -4.596, -5.0), new LinearBase.V3(4.596, 3.8890000000000002, -5.0), new LinearBase.V3(3.8890000000000002, 4.596, -5.0), new LinearBase.V3(3.8890000000000002, 4.596, -4.0), new LinearBase.V3(4.596, 3.8890000000000002, -5.0), new LinearBase.V3(3.8890000000000002, 4.596, -4.0), new LinearBase.V3(4.596, 3.8890000000000002, -4.0), new LinearBase.V3(3.8890000000000002, -4.596, -4.0), new LinearBase.V3(4.596, -3.8890000000000002, -4.0), new LinearBase.V3(-3.8890000000000002, 4.596, -4.0), new LinearBase.V3(3.8890000000000002, -4.596, -4.0), new LinearBase.V3(-3.8890000000000002, 4.596, -4.0), new LinearBase.V3(-4.596, 3.8890000000000002, -4.0), new LinearBase.V3(4.596, -3.8890000000000002, -4.0), new LinearBase.V3(4.596, -3.8890000000000002, -5.0), new LinearBase.V3(-3.8890000000000002, 4.596, -5.0), new LinearBase.V3(4.596, -3.8890000000000002, -4.0), new LinearBase.V3(-3.8890000000000002, 4.596, -5.0), new LinearBase.V3(-3.8890000000000002, 4.596, -4.0), new LinearBase.V3(4.596, -3.8890000000000002, -5.0), new LinearBase.V3(3.8890000000000002, -4.596, -5.0), new LinearBase.V3(-4.596, 3.8890000000000002, -5.0), new LinearBase.V3(4.596, -3.8890000000000002, -5.0), new LinearBase.V3(-4.596, 3.8890000000000002, -5.0), new LinearBase.V3(-3.8890000000000002, 4.596, -5.0), new LinearBase.V3(3.8890000000000002, -4.596, -5.0), new LinearBase.V3(3.8890000000000002, -4.596, -4.0), new LinearBase.V3(-4.596, 3.8890000000000002, -4.0), new LinearBase.V3(3.8890000000000002, -4.596, -5.0), new LinearBase.V3(-4.596, 3.8890000000000002, -4.0), new LinearBase.V3(-4.596, 3.8890000000000002, -5.0), new LinearBase.V3(-4.596, 3.8890000000000002, -4.0), new LinearBase.V3(-3.8890000000000002, 4.596, -4.0), new LinearBase.V3(-3.8890000000000002, 4.596, -5.0), new LinearBase.V3(-4.596, 3.8890000000000002, -4.0), new LinearBase.V3(-3.8890000000000002, 4.596, -5.0), new LinearBase.V3(-4.596, 3.8890000000000002, -5.0), new LinearBase.V3(3.8890000000000002, -4.596, -5.0), new LinearBase.V3(4.596, -3.8890000000000002, -5.0), new LinearBase.V3(4.596, -3.8890000000000002, -4.0), new LinearBase.V3(3.8890000000000002, -4.596, -5.0), new LinearBase.V3(4.596, -3.8890000000000002, -4.0), new LinearBase.V3(3.8890000000000002, -4.596, -4.0), new LinearBase.V3(0.5, -0.5, -5.0), new LinearBase.V3(0.5, 0.5, -5.0), new LinearBase.V3(-0.5, 0.5, -5.0), new LinearBase.V3(0.5, -0.5, -5.0), new LinearBase.V3(-0.5, 0.5, -5.0), new LinearBase.V3(-0.5, -0.5, -5.0), new LinearBase.V3(0.5, 0.5, -5.0), new LinearBase.V3(0.5, 0.5, -7.0), new LinearBase.V3(-0.5, 0.5, -7.0), new LinearBase.V3(0.5, 0.5, -5.0), new LinearBase.V3(-0.5, 0.5, -7.0), new LinearBase.V3(-0.5, 0.5, -5.0), new LinearBase.V3(0.5, 0.5, -7.0), new LinearBase.V3(0.5, -0.5, -7.0), new LinearBase.V3(-0.5, -0.5, -7.0), new LinearBase.V3(0.5, 0.5, -7.0), new LinearBase.V3(-0.5, -0.5, -7.0), new LinearBase.V3(-0.5, 0.5, -7.0), new LinearBase.V3(0.5, -0.5, -7.0), new LinearBase.V3(0.5, -0.5, -5.0), new LinearBase.V3(-0.5, -0.5, -5.0), new LinearBase.V3(0.5, -0.5, -7.0), new LinearBase.V3(-0.5, -0.5, -5.0), new LinearBase.V3(-0.5, -0.5, -7.0), new LinearBase.V3(-0.5, -0.5, -5.0), new LinearBase.V3(-0.5, 0.5, -5.0), new LinearBase.V3(-0.5, 0.5, -7.0), new LinearBase.V3(-0.5, -0.5, -5.0), new LinearBase.V3(-0.5, 0.5, -7.0), new LinearBase.V3(-0.5, -0.5, -7.0), new LinearBase.V3(0.5, -0.5, -7.0), new LinearBase.V3(0.5, 0.5, -7.0), new LinearBase.V3(0.5, 0.5, -5.0), new LinearBase.V3(0.5, -0.5, -7.0), new LinearBase.V3(0.5, 0.5, -5.0), new LinearBase.V3(0.5, -0.5, -5.0), new LinearBase.V3(3.134, -7.428, -6.0), new LinearBase.V3(4.866, -6.428, -6.0), new LinearBase.V3(-3.134, 7.428, -6.0), new LinearBase.V3(3.134, -7.428, -6.0), new LinearBase.V3(-3.134, 7.428, -6.0), new LinearBase.V3(-4.866, 6.428, -6.0), new LinearBase.V3(4.866, -6.428, -6.0), new LinearBase.V3(4.866, -6.428, -8.0), new LinearBase.V3(-3.134, 7.428, -8.0), new LinearBase.V3(4.866, -6.428, -6.0), new LinearBase.V3(-3.134, 7.428, -8.0), new LinearBase.V3(-3.134, 7.428, -6.0), new LinearBase.V3(4.866, -6.428, -8.0), new LinearBase.V3(3.134, -7.428, -8.0), new LinearBase.V3(-4.866, 6.428, -8.0), new LinearBase.V3(4.866, -6.428, -8.0), new LinearBase.V3(-4.866, 6.428, -8.0), new LinearBase.V3(-3.134, 7.428, -8.0), new LinearBase.V3(3.134, -7.428, -8.0), new LinearBase.V3(3.134, -7.428, -6.0), new LinearBase.V3(-4.866, 6.428, -6.0), new LinearBase.V3(3.134, -7.428, -8.0), new LinearBase.V3(-4.866, 6.428, -6.0), new LinearBase.V3(-4.866, 6.428, -8.0), new LinearBase.V3(-4.866, 6.428, -6.0), new LinearBase.V3(-3.134, 7.428, -6.0), new LinearBase.V3(-3.134, 7.428, -8.0), new LinearBase.V3(-4.866, 6.428, -6.0), new LinearBase.V3(-3.134, 7.428, -8.0), new LinearBase.V3(-4.866, 6.428, -8.0), new LinearBase.V3(3.134, -7.428, -8.0), new LinearBase.V3(4.866, -6.428, -8.0), new LinearBase.V3(4.866, -6.428, -6.0), new LinearBase.V3(3.134, -7.428, -8.0), new LinearBase.V3(4.866, -6.428, -6.0), new LinearBase.V3(3.134, -7.428, -6.0), new LinearBase.V3(1.366, -0.536, -6.0), new LinearBase.V3(-0.366, 0.46399999999999997, -6.0), new LinearBase.V3(-4.366, -6.464, -6.0), new LinearBase.V3(1.366, -0.536, -6.0), new LinearBase.V3(-4.366, -6.464, -6.0), new LinearBase.V3(-2.634, -7.464, -6.0), new LinearBase.V3(-0.366, 0.46399999999999997, -6.0), new LinearBase.V3(-0.366, 0.46399999999999997, -8.0), new LinearBase.V3(-4.366, -6.464, -8.0), new LinearBase.V3(-0.366, 0.46399999999999997, -6.0), new LinearBase.V3(-4.366, -6.464, -8.0), new LinearBase.V3(-4.366, -6.464, -6.0), new LinearBase.V3(-0.366, 0.46399999999999997, -8.0), new LinearBase.V3(1.366, -0.536, -8.0), new LinearBase.V3(-2.634, -7.464, -8.0), new LinearBase.V3(-0.366, 0.46399999999999997, -8.0), new LinearBase.V3(-2.634, -7.464, -8.0), new LinearBase.V3(-4.366, -6.464, -8.0), new LinearBase.V3(1.366, -0.536, -8.0), new LinearBase.V3(1.366, -0.536, -6.0), new LinearBase.V3(-2.634, -7.464, -6.0), new LinearBase.V3(1.366, -0.536, -8.0), new LinearBase.V3(-2.634, -7.464, -6.0), new LinearBase.V3(-2.634, -7.464, -8.0), new LinearBase.V3(-2.634, -7.464, -6.0), new LinearBase.V3(-4.366, -6.464, -6.0), new LinearBase.V3(-4.366, -6.464, -8.0), new LinearBase.V3(-2.634, -7.464, -6.0), new LinearBase.V3(-4.366, -6.464, -8.0), new LinearBase.V3(-2.634, -7.464, -8.0), new LinearBase.V3(1.366, -0.536, -8.0), new LinearBase.V3(-0.366, 0.46399999999999997, -8.0), new LinearBase.V3(-0.366, 0.46399999999999997, -6.0), new LinearBase.V3(1.366, -0.536, -8.0), new LinearBase.V3(-0.366, 0.46399999999999997, -6.0), new LinearBase.V3(1.366, -0.536, -6.0) ];
  var lambdaCubeNormals = [ new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(-0.7070000000000001, 0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.7070000000000001, -0.7070000000000001, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 1.0, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(0.0, -1.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(-1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(1.0, 0.0, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.866, 0.5, 0.0), new LinearBase.V3(0.866, 0.5, 0.0), new LinearBase.V3(0.866, 0.5, 0.0), new LinearBase.V3(0.866, 0.5, 0.0), new LinearBase.V3(0.866, 0.5, 0.0), new LinearBase.V3(0.866, 0.5, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(-0.866, -0.5, 0.0), new LinearBase.V3(-0.866, -0.5, 0.0), new LinearBase.V3(-0.866, -0.5, 0.0), new LinearBase.V3(-0.866, -0.5, 0.0), new LinearBase.V3(-0.866, -0.5, 0.0), new LinearBase.V3(-0.866, -0.5, 0.0), new LinearBase.V3(-0.5, 0.866, 0.0), new LinearBase.V3(-0.5, 0.866, 0.0), new LinearBase.V3(-0.5, 0.866, 0.0), new LinearBase.V3(-0.5, 0.866, 0.0), new LinearBase.V3(-0.5, 0.866, 0.0), new LinearBase.V3(-0.5, 0.866, 0.0), new LinearBase.V3(0.5, -0.866, 0.0), new LinearBase.V3(0.5, -0.866, 0.0), new LinearBase.V3(0.5, -0.866, 0.0), new LinearBase.V3(0.5, -0.866, 0.0), new LinearBase.V3(0.5, -0.866, 0.0), new LinearBase.V3(0.5, -0.866, 0.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(0.0, 0.0, 1.0), new LinearBase.V3(-0.866, 0.5, 0.0), new LinearBase.V3(-0.866, 0.5, 0.0), new LinearBase.V3(-0.866, 0.5, 0.0), new LinearBase.V3(-0.866, 0.5, 0.0), new LinearBase.V3(-0.866, 0.5, 0.0), new LinearBase.V3(-0.866, 0.5, 0.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.0, 0.0, -1.0), new LinearBase.V3(0.866, -0.5, 0.0), new LinearBase.V3(0.866, -0.5, 0.0), new LinearBase.V3(0.866, -0.5, 0.0), new LinearBase.V3(0.866, -0.5, 0.0), new LinearBase.V3(0.866, -0.5, 0.0), new LinearBase.V3(0.866, -0.5, 0.0), new LinearBase.V3(-0.5, -0.866, 0.0), new LinearBase.V3(-0.5, -0.866, 0.0), new LinearBase.V3(-0.5, -0.866, 0.0), new LinearBase.V3(-0.5, -0.866, 0.0), new LinearBase.V3(-0.5, -0.866, 0.0), new LinearBase.V3(-0.5, -0.866, 0.0), new LinearBase.V3(0.5, 0.866, 0.0), new LinearBase.V3(0.5, 0.866, 0.0), new LinearBase.V3(0.5, 0.866, 0.0), new LinearBase.V3(0.5, 0.866, 0.0), new LinearBase.V3(0.5, 0.866, 0.0), new LinearBase.V3(0.5, 0.866, 0.0) ];
  var lambdaCube = new Mesh.Mesh({
      attributes: Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", new Mesh.A_V3F(lambdaCubeVertices)), new Data_Tuple.Tuple("normal", new Mesh.A_V3F(lambdaCubeNormals)) ])), 
      primitive: Mesh.P_Triangles.value, 
      gpuData: Data_Maybe.Nothing.value
  });
  var g_vertex_buffer_data = [ new LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LinearBase.V4(1.0, -1.0, -1.0, 1.0), new LinearBase.V4(-1.0, -1.0, -1.0, 1.0), new LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LinearBase.V4(-1.0, -1.0, -1.0, 1.0), new LinearBase.V4(-1.0, 1.0, -1.0, 1.0), new LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LinearBase.V4(1.0, 1.0, 1.0, 1.0), new LinearBase.V4(1.0, -1.0, 1.0, 1.0), new LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LinearBase.V4(1.0, -1.0, 1.0, 1.0), new LinearBase.V4(1.0, -1.0, -1.0, 1.0), new LinearBase.V4(1.0, 1.0, 1.0, 1.0), new LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LinearBase.V4(1.0, -1.0, 1.0, 1.0), new LinearBase.V4(1.0, 1.0, 1.0, 1.0), new LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LinearBase.V4(-1.0, -1.0, -1.0, 1.0), new LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LinearBase.V4(-1.0, 1.0, -1.0, 1.0), new LinearBase.V4(-1.0, -1.0, -1.0, 1.0), new LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LinearBase.V4(-1.0, 1.0, -1.0, 1.0), new LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LinearBase.V4(1.0, 1.0, 1.0, 1.0), new LinearBase.V4(1.0, -1.0, -1.0, 1.0), new LinearBase.V4(1.0, -1.0, 1.0, 1.0), new LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LinearBase.V4(1.0, -1.0, -1.0, 1.0), new LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LinearBase.V4(-1.0, -1.0, -1.0, 1.0) ];
  var g_uv_buffer_data = [ new LinearBase.V2(0.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 0.0), new LinearBase.V2(0.0, 1.0), new LinearBase.V2(1.0, 0.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(0.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 0.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 0.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(0.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 0.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(0.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(0.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 0.0), new LinearBase.V2(0.0, 1.0), new LinearBase.V2(0.0, 0.0), new LinearBase.V2(1.0, 0.0), new LinearBase.V2(0.0, 1.0), new LinearBase.V2(1.0, 0.0), new LinearBase.V2(1.0, 1.0) ];
  var myCube = new Mesh.Mesh({
      attributes: Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position4", new Mesh.A_V4F(g_vertex_buffer_data)), new Data_Tuple.Tuple("vertexUV", new Mesh.A_V2F(g_uv_buffer_data)) ])), 
      primitive: Mesh.P_Triangles.value, 
      gpuData: Data_Maybe.Nothing.value
  });
  exports["lambdaCubeNormals"] = lambdaCubeNormals;
  exports["lambdaCubeVertices"] = lambdaCubeVertices;
  exports["lambdaCube"] = lambdaCube;
  exports["myQuad"] = myQuad;
  exports["myCube"] = myCube;
  exports["g_uv_buffer_data"] = g_uv_buffer_data;
  exports["g_vertex_buffer_data"] = g_vertex_buffer_data;;
 
})(PS["Sample"] = PS["Sample"] || {});
(function(exports) {
  // Generated by psc version 0.8.0.0
  "use strict";
  var $foreign = PS["Main"];
  var Prelude = PS["Prelude"];
  var Extensions = PS["Extensions"];
  var Global = PS["Global"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Bind = PS["Control.Bind"];
  var TypeInfo = PS["TypeInfo"];
  var Timer = PS["Timer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Ace = PS["Ace"];
  var Ace_Types = PS["Ace.Types"];
  var Ace_Editor = PS["Ace.Editor"];
  var Ace_EditSession = PS["Ace.EditSession"];
  var Ace_Range = PS["Ace.Range"];
  var Graphics_WebGL = PS["Graphics.WebGL"];
  var Control_Monad_Eff_JQuery = PS["Control.Monad.Eff.JQuery"];
  var WebSocket = PS["WebSocket"];
  var Data_Either = PS["Data.Either"];
  var Sample = PS["Sample"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Array = PS["Data.Array"];
  var Data_Int = PS["Data.Int"];
  var Backend = PS["Backend"];
  var IR = PS["IR"];
  var LinearBase = PS["LinearBase"];
  var Mesh = PS["Mesh"];
  var Type = PS["Type"];
  var Input = PS["Input"];
  var Data = PS["Data"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Matrix = PS["Data.Matrix"];
  var Data_Matrix4 = PS["Data.Matrix4"];
  var Data_Vector3 = PS["Data.Vector3"];
  var DOM = PS["DOM"];     
  var main = Control_Monad_Eff_Console.log("Start LambdaCube 3D Editor");
  var defaultExampleName = "LambdaCube2.lc";
  var addMarker = function (range) {
      return function (clazz) {
          return function (_type) {
              return function (inFront) {
                  return function (self) {
                      return $foreign.addMarkerImpl(range, clazz, _type, inFront, self);
                  };
              };
          };
      };
  };
  var run = Graphics_WebGL.runWebGL("glcanvas")(function (s) {
      return Control_Monad_Eff_Console.log(s);
  })(function (context) {
      var inputSchema = {
          slots: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("stream", {
              primitive: IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", Type.TV3F.value), new Data_Tuple.Tuple("normal", Type.TV3F.value) ])
          }), new Data_Tuple.Tuple("stream4", {
              primitive: IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position4", Type.TV4F.value), new Data_Tuple.Tuple("vertexUV", Type.TV2F.value) ])
          }), new Data_Tuple.Tuple("line", {
              primitive: IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", Type.TV3F.value) ])
          }), new Data_Tuple.Tuple("grid", {
              primitive: IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", Type.TV3F.value) ])
          }), new Data_Tuple.Tuple("grid3d", {
              primitive: IR.Points.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", Type.TV3F.value) ])
          }), new Data_Tuple.Tuple("quad", {
              primitive: IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", Type.TV2F.value) ])
          }), new Data_Tuple.Tuple("cube", {
              primitive: IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", Type.TV3F.value), new Data_Tuple.Tuple("normal", Type.TV3F.value) ])
          }), new Data_Tuple.Tuple("lambdaCube", {
              primitive: IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", Type.TV3F.value), new Data_Tuple.Tuple("normal", Type.TV3F.value) ])
          }) ]), 
          uniforms: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("MVP", IR.M44F.value), new Data_Tuple.Tuple("Time", IR.Float.value), new Data_Tuple.Tuple("Mouse", IR.V2F.value), new Data_Tuple.Tuple("Diffuse", IR.FTexture2D.value), new Data_Tuple.Tuple("OcclusionFieldMin", IR.FTexture2D.value), new Data_Tuple.Tuple("OcclusionFieldMax", IR.FTexture2D.value) ])
      };
      return function __do() {
          var v = Input.mkWebGLPipelineInput(inputSchema)();
          var v1 = Control_Monad_Eff_Ref.newRef(0.0)();
          var v2 = Control_Monad_Eff_JQuery.body();
          var v3 = Control_Monad_Eff_JQuery.find("#timeBox")(v2)();
          var v4 = Control_Monad_Eff_JQuery.find("#timeRange")(v2)();
          var getTime = function __do() {
              var v5 = Control_Monad_Eff_JQuery.getValue(v3)();
              var $75 = Data_Foreign.readNumber(v5);
              if ($75 instanceof Data_Either.Right) {
                  return $75.value0;
              };
              var $77 = Data_Foreign.readString(v5);
              if ($77 instanceof Data_Either.Right) {
                  return Global.readFloat($77.value0);
              };
              return 0.0;
          };
          Prelude.flip(Control_Monad_Eff_JQuery.on("input"))(v3)(function (v5) {
              return function (v6) {
                  return function __do() {
                      Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.getValue(v3))(Prelude.flip(Control_Monad_Eff_JQuery.setValue)(v4))();
                      return Prelude[">>="](Control_Monad_Eff.bindEff)(getTime)(Control_Monad_Eff_Ref.writeRef(v1))();
                  };
              };
          })();
          Prelude.flip(Control_Monad_Eff_JQuery.on("input"))(v4)(function (v5) {
              return function (v6) {
                  return function __do() {
                      Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.getValue(v4))(Prelude.flip(Control_Monad_Eff_JQuery.setValue)(v3))();
                      return Prelude[">>="](Control_Monad_Eff.bindEff)(getTime)(Control_Monad_Eff_Ref.writeRef(v1))();
                  };
              };
          })();
          Prelude.flip(Control_Monad_Eff_JQuery.on("change"))(v3)(function (v5) {
              return function (v6) {
                  return function __do() {
                      Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.getValue(v3))(Prelude.flip(Control_Monad_Eff_JQuery.setValue)(v4))();
                      return Prelude[">>="](Control_Monad_Eff.bindEff)(getTime)(Control_Monad_Eff_Ref.writeRef(v1))();
                  };
              };
          })();
          Prelude.flip(Control_Monad_Eff_JQuery.on("change"))(v4)(function (v5) {
              return function (v6) {
                  return function __do() {
                      Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.getValue(v4))(Prelude.flip(Control_Monad_Eff_JQuery.setValue)(v3))();
                      return Prelude[">>="](Control_Monad_Eff.bindEff)(getTime)(Control_Monad_Eff_Ref.writeRef(v1))();
                  };
              };
          })();
          var v5 = Control_Monad_Eff_JQuery.find("#pause")(v2)();
          var v6 = Control_Monad_Eff_JQuery.find("#pipeline")(v2)();
          var v7 = Control_Monad_Eff_JQuery.find("#desugared")(v2)();
          var v8 = Control_Monad_Eff_JQuery.find("#messagepanel")(v2)();
          var v9 = Control_Monad_Eff_JQuery.find("#statuspanel")(v2)();
          var v10 = Control_Monad_Eff_JQuery.find("#compilebutton")(v2)();
          var v11 = Control_Monad_Eff_JQuery.find("#exerciseselect")(v2)();
          var v12 = Control_Monad_Eff_JQuery.find("#glcanvas")(v2)();
          Prelude.flip(Control_Monad_Eff_JQuery.on("mousemove"))(v12)(function (e) {
              return function (v13) {
                  return function __do() {
                      var v14 = Graphics_WebGL.getCanvasWidth(context)();
                      var v15 = Graphics_WebGL.getCanvasHeight(context)();
                      var v16 = $foreign.getMousePos(e)();
                      if (v16.length === 2) {
                          return Input.uniformV2F("Mouse")(v.uniformSetter)(new LinearBase.V2(v16[0] / Data_Int.toNumber(v14), v16[1] / Data_Int.toNumber(v15)))();
                      };
                      throw new Error("Failed pattern match at Main line 89, column 1 - line 371, column 14: " + [ v16.constructor.name ]);
                  };
              };
          })();
          var updateInput = function (t) {
              return function __do() {
                  var v13 = Graphics_WebGL.getCanvasWidth(context)();
                  var v14 = Graphics_WebGL.getCanvasHeight(context)();
                  Input.setScreenSize(v)(new LinearBase.V2(v13, v14))();
                  return Input.uniformFloat("Time")(v.uniformSetter)(t)();
              };
          };
          var toLCMat4 = function (v13) {
              if (v13.length === 16) {
                  var v41 = new LinearBase.V4(v13[12], v13[13], v13[14], v13[15]);
                  var v31 = new LinearBase.V4(v13[8], v13[9], v13[10], v13[11]);
                  var v21 = new LinearBase.V4(v13[4], v13[5], v13[6], v13[7]);
                  var v14 = new LinearBase.V4(v13[0], v13[1], v13[2], v13[3]);
                  return new LinearBase.V4(v14, v21, v31, v41);
              };
              return Extensions.fail("invalid Mat4");
          };
          var v13 = Mesh.compileMesh(Sample.myCube)();
          Mesh.addMesh(v)("stream4")(v13)([  ])();
          var v14 = Mesh.compileMesh(Sample.myQuad)();
          Mesh.addMesh(v)("quad")(v14)([  ])();
          var v15 = Mesh.compileMesh(Sample.lambdaCube)();
          Mesh.addMesh(v)("lambdaCube")(v15)([  ])();
          Data.uploadTexture2DToGPU("logo.png")(Input.uniformFTexture2D("Diffuse")(v.uniformSetter))();
          Data.uploadTexture2DToGPU("OcclusionFieldMin.png")(Input.uniformFTexture2D("OcclusionFieldMin")(v.uniformSetter))();
          Data.uploadTexture2DToGPU("OcclusionFieldMax.png")(Input.uniformFTexture2D("OcclusionFieldMax")(v.uniformSetter))();
          var addRemoteModel = function (sname) {
              return function (uri) {
                  return $foreign.getJSON(uri)(function (m) {
                      var $123 = Data_Argonaut_Decode.decodeJson(Mesh.decodeJsonMesh)(m);
                      if ($123 instanceof Data_Either.Left) {
                          return Control_Monad_Eff_Console.log("decode error: " + $123.value0);
                      };
                      if ($123 instanceof Data_Either.Right) {
                          return function __do() {
                              var v16 = Mesh.compileMesh($123.value0)();
                              Mesh.addMesh(v)(sname)(v16)([  ])();
                              Input.sortSlotObjects(v)();
                              return Prelude.unit;
                          };
                      };
                      throw new Error("Failed pattern match at Main line 175, column 7 - line 194, column 3: " + [ $123.constructor.name ]);
                  });
              };
          };
          var v16 = Ace.edit("editor")(Ace.ace)();
          var v17 = Ace_Editor.getSession(v16)();
          Ace_Editor.setTheme("ace/theme/terminal")(v16)();
          Ace_EditSession.setMode("ace/mode/haskell")(v17)();
          var v18 = Control_Monad_Eff_Ref.newRef([  ])();
          var v19 = Control_Monad_Eff_Ref.newRef([  ])();
          var lessEqPos = function (l) {
              return function (c) {
                  return function (l$prime) {
                      return function (c$prime) {
                          return l < l$prime || l === l$prime && c <= c$prime;
                      };
                  };
              };
          };
          var lessPos = function (l) {
              return function (c) {
                  return function (l$prime) {
                      return function (c$prime) {
                          return l < l$prime || l === l$prime && c < c$prime;
                      };
                  };
              };
          };
          var getTypeInfo = function (l) {
              return function (c) {
                  return function __do() {
                      var v20 = Control_Monad_Eff_Ref.readRef(v18)();
                      var flattenTypeInfo = function (v21) {
                          return {
                              startLine: v21.value0.range.value0.startLine, 
                              startColumn: v21.value0.range.value0.startColumn, 
                              endLine: v21.value0.range.value0.endLine, 
                              endColumn: v21.value0.range.value0.endColumn, 
                              text: v21.value0.text
                          };
                      };
                      var ps = Prelude.flip(Data_Array.filter)(Prelude.map(Prelude.functorArray)(flattenTypeInfo)(v20))(function (ti) {
                          return lessEqPos(ti.startLine)(ti.startColumn)(l)(c) && lessPos(l)(c)(ti.endLine)(ti.endColumn);
                      });
                      var f = function (v21) {
                          return function (i) {
                              if (v21 instanceof Data_Maybe.Nothing) {
                                  return new Data_Maybe.Just(i);
                              };
                              if (v21 instanceof Data_Maybe.Just) {
                                  if (lessPos(v21.value0.startLine)(v21.value0.startColumn)(i.startLine)(i.startColumn)) {
                                      return new Data_Maybe.Just(i);
                                  };
                                  if (Prelude.otherwise) {
                                      return new Data_Maybe.Just(v21.value0);
                                  };
                              };
                              throw new Error("Failed pattern match at Main line 202, column 7 - line 226, column 3: " + [ v21.constructor.name, i.constructor.name ]);
                          };
                      };
                      var $139 = Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(Data_Maybe.Nothing.value)(ps);
                      if ($139 instanceof Data_Maybe.Nothing) {
                          return {
                              startLine: 0, 
                              startColumn: 0, 
                              endLine: 0, 
                              endColumn: 0, 
                              text: ""
                          };
                      };
                      if ($139 instanceof Data_Maybe.Just) {
                          return $139.value0;
                      };
                      throw new Error("Failed pattern match at Main line 202, column 7 - line 226, column 3: " + [ $139.constructor.name ]);
                  };
              };
          };
          $foreign.tokenTooltip(v16)(getTypeInfo)();
          var v20 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
          var render = function (ir) {
              return function __do() {
                  var v21 = Control_Monad_Eff_Ref.readRef(v20)();
                  Control_Monad_Eff_Ref.writeRef(v20)(Data_Maybe.Nothing.value)();
                  (function () {
                      if (v21 instanceof Data_Maybe.Nothing) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                      };
                      if (v21 instanceof Data_Maybe.Just) {
                          return function __do() {
                              Control_Monad_Eff_Console.log("dispose old pipeline")();
                              return Backend.disposePipeline(v21.value0)();
                          };
                      };
                      throw new Error("Failed pattern match at Main line 229, column 7 - line 242, column 7: " + [ v21.constructor.name ]);
                  })()();
                  Control_Monad_Eff_Console.log("allocate new pipeline")();
                  var v22 = Backend.allocPipeline(ir)();
                  Control_Monad_Eff_Console.log("attach pipeline input")();
                  Backend.setPipelineInput(v22)(new Data_Maybe.Just(v))();
                  Control_Monad_Eff_Console.log("generate object commands")();
                  Input.sortSlotObjects(v)();
                  return Control_Monad_Eff_Ref.writeRef(v20)(new Data_Maybe.Just(v22))();
              };
          };
          var compile = function (s) {
              return function __do() {
                  Control_Monad_Eff_Console.log("compile")();
                  Control_Monad_Eff_JQuery.setText("Compiling...")(v9)();
                  var v21 = Ace_EditSession.getValue(v17)();
                  return WebSocket.send(s)(v21)();
              };
          };
          var v21 = WebSocket.webSocket("ws://localhost:8000/exerciselist")({
              onOpen: function (s) {
                  return function __do() {
                      WebSocket.send(s)("query")();
                      Control_Monad_Eff_Console.log("socket1 is ready")();
                      return Prelude.unit;
                  };
              }, 
              onMessage: function (s) {
                  return function (m) {
                      var $147 = Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(m))(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString)));
                      if ($147 instanceof Data_Either.Left) {
                          return Control_Monad_Eff_Console.log("decode error: " + $147.value0);
                      };
                      if ($147 instanceof Data_Either.Right) {
                          return function __do() {
                              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)($147.value0)(function (e) {
                                  return function __do() {
                                      var v21 = Control_Monad_Eff_JQuery.create("<option></option>")();
                                      Control_Monad_Eff_JQuery.setText(e)(v21)();
                                      return Control_Monad_Eff_JQuery.append(v21)(v11)();
                                  };
                              })();
                              return Prelude.unit;
                          };
                      };
                      throw new Error("Failed pattern match at Main line 89, column 1 - line 371, column 14: " + [ $147.constructor.name ]);
                  };
              }, 
              onError: function (s) {
                  return function (m) {
                      return Control_Monad_Eff_Console.log(m);
                  };
              }, 
              onClose: Control_Monad_Eff_Console.log("socket1 is closed")
          })();
          var v22 = WebSocket.webSocket("ws://localhost:8000/compile")({
              onOpen: function (s) {
                  return function __do() {
                      Control_Monad_Eff_Console.log("socket is ready")();
                      var v22 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
                      return Ace_EditSession.onChange(v17)(function __do() {
                          var v23 = Control_Monad_Eff_Ref.readRef(v22)();
                          (function () {
                              if (v23 instanceof Data_Maybe.Nothing) {
                                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                              };
                              if (v23 instanceof Data_Maybe.Just) {
                                  return Timer.clearTimeout(v23.value0);
                              };
                              throw new Error("Failed pattern match at Main line 89, column 1 - line 371, column 14: " + [ v23.constructor.name ]);
                          })()();
                          return Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.writeRef(v22))(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Maybe.Just.create)(Timer.timeout(1000)(compile(s))))();
                      })();
                  };
              }, 
              onClose: Control_Monad_Eff_Console.log("socket is closed"), 
              onMessage: function (s) {
                  return function (m) {
                      return function __do() {
                          Control_Monad_Eff_Console.log("got response")();
                          var $156 = Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(m))(Data_Argonaut_Decode.decodeJson(TypeInfo.decodeJsonCompileResult));
                          if ($156 instanceof Data_Either.Left) {
                              return Control_Monad_Eff_Console.log("decode error: " + $156.value0)();
                          };
                          if ($156 instanceof Data_Either.Right && $156.value0 instanceof TypeInfo.CompileError) {
                              Control_Monad_Eff_JQuery.setText("Error")(v9)();
                              Control_Monad_Eff_JQuery.setText($156.value0.value1)(v8)();
                              var v22 = Control_Monad_Eff_Ref.readRef(v19)();
                              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v22)(function (mkr) {
                                  return Ace_EditSession.removeMarker(mkr)(v17);
                              })();
                              var v23 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)($156.value0.value0)(function (v23) {
                                  return function __do() {
                                      var v24 = Ace_Range.create(v23.value0.startLine - 1)(v23.value0.startColumn - 1)(v23.value0.endLine - 1)(v23.value0.endColumn - 1)();
                                      return addMarker(v24)("lc_error")("text")(false)(v17)();
                                  };
                              })();
                              Control_Monad_Eff_Ref.writeRef(v19)(v23)();
                              Control_Monad_Eff_Ref.writeRef(v18)($156.value0.value2)();
                              return Prelude.unit;
                          };
                          if ($156 instanceof Data_Either.Right && $156.value0 instanceof TypeInfo.Compiled) {
                              Control_Monad_Eff_JQuery.setText($156.value0.value0)(v7)();
                              Control_Monad_Eff_JQuery.setText($156.value0.value1)(v6)();
                              Control_Monad_Eff_JQuery.setText("Compiled")(v9)();
                              Control_Monad_Eff_JQuery.setText("No errors.")(v8)();
                              Control_Monad_Eff_Ref.writeRef(v18)($156.value0.value3)();
                              var v22 = Control_Monad_Eff_Ref.readRef(v19)();
                              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v22)(function (mkr) {
                                  return Ace_EditSession.removeMarker(mkr)(v17);
                              })();
                              Control_Monad_Eff_Ref.writeRef(v19)([  ])();
                              return render($156.value0.value2)();
                          };
                          throw new Error("Failed pattern match at Main line 89, column 1 - line 371, column 14: " + [ $156.constructor.name ]);
                      };
                  };
              }, 
              onError: function (s) {
                  return function (m) {
                      return Control_Monad_Eff_Console.log("error: " + m);
                  };
              }
          })();
          if (v22 instanceof Data_Either.Left) {
              return Control_Monad_Eff_Console.log("error: " + v22.value0)();
          };
          if (v22 instanceof Data_Either.Right) {
              var v23 = WebSocket.webSocket("ws://localhost:8000/getexercise")({
                  onOpen: function (s) {
                      return function __do() {
                          Control_Monad_Eff_Console.log("socket2 is ready")();
                          Prelude.flip(Control_Monad_Eff_JQuery.on("change"))(v11)(function (v23) {
                              return function (v24) {
                                  return function __do() {
                                      var v25 = Control_Monad_Eff_JQuery.find(":selected")(v11)();
                                      var v26 = Control_Monad_Eff_JQuery.getText(v25)();
                                      return WebSocket.send(s)(v26)();
                                  };
                              };
                          })();
                          WebSocket.send(s)(defaultExampleName)();
                          return Prelude.unit;
                      };
                  }, 
                  onMessage: function (s) {
                      return function (m) {
                          var $180 = Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(m))(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString));
                          if ($180 instanceof Data_Either.Left) {
                              return Control_Monad_Eff_Console.log("decode error: " + $180.value0);
                          };
                          if ($180 instanceof Data_Either.Right) {
                              return function __do() {
                                  Ace_EditSession.setValue($180.value0)(v17)();
                                  compile(v22.value0)();
                                  return Prelude.unit;
                              };
                          };
                          throw new Error("Failed pattern match at Main line 89, column 1 - line 371, column 14: " + [ $180.constructor.name ]);
                      };
                  }, 
                  onError: function (s) {
                      return function (m) {
                          return Control_Monad_Eff_Console.log(m);
                      };
                  }, 
                  onClose: Control_Monad_Eff_Console.log("socket2 is closed")
              })();
              Prelude.flip(Control_Monad_Eff_JQuery.on("click"))(v10)(function (v24) {
                  return function (v25) {
                      return function __do() {
                          compile(v22.value0)();
                          return Control_Monad_Eff_Console.log("clicked compile")();
                      };
                  };
              })();
              $foreign.addCommand(v16)("Compile")("Ctrl-B")("Command-B")(function (v24) {
                  return compile(v22.value0);
              })();
              var v24 = Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.newRef)(Timer.nowEpochMilliseconds)();
              var renderLoop = function __do() {
                  var v25 = Timer.nowEpochMilliseconds();
                  var v26 = Control_Monad_Eff_Ref.readRef(v24)();
                  var deltaTime = (v25 - v26) / 1000.0;
                  Control_Monad_Eff_Ref.writeRef(v24)(v25)();
                  var v27 = Control_Monad_Eff_JQuery.getProp("checked")(v5)();
                  (function () {
                      var $191 = Data_Foreign.readBoolean(v27);
                      if ($191 instanceof Data_Either.Right && !$191.value0) {
                          return function __do() {
                              Control_Monad_Eff_Ref.modifyRef(v1)(Prelude["+"](Prelude.semiringNumber)(deltaTime))();
                              var v28 = Control_Monad_Eff_Ref.readRef(v1)();
                              var time$prime = Data_Int.toNumber(Data_Int.floor(v28 * 1000.0)) / 1000.0;
                              Control_Monad_Eff_JQuery.setValue(time$prime)(v3)();
                              Control_Monad_Eff_JQuery.setValue(time$prime)(v4)();
                              return updateInput(v28)();
                          };
                      };
                      return function __do() {
                          var v28 = getTime();
                          Control_Monad_Eff_Ref.writeRef(v1)(v28)();
                          return updateInput(v28)();
                      };
                  })()();
                  var v28 = Control_Monad_Eff_Ref.readRef(v20)();
                  (function () {
                      if (v28 instanceof Data_Maybe.Nothing) {
                          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                      };
                      if (v28 instanceof Data_Maybe.Just) {
                          return Backend.renderPipeline(v28.value0);
                      };
                      throw new Error("Failed pattern match at Main line 89, column 1 - line 371, column 14: " + [ v28.constructor.name ]);
                  })()();
                  return Timer.timeout(1000 / 25 | 0)(renderLoop)();
              };
              renderLoop();
              return Prelude.unit;
          };
          throw new Error("Failed pattern match at Main line 89, column 1 - line 371, column 14: " + [ v22.constructor.name ]);
      };
  });
  exports["run"] = run;
  exports["main"] = main;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
