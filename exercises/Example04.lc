clear = FrameBuffer $ ColorImage @1 red   -- ...

triangleRasterCtx = TriangleCtx CullNone PolygonFill NoOffset LastVertex
colorFragmentCtx = AccumulationContext (ColorOp NoBlending (V4 True True True True))

rasterizeWith = Rasterize
triangles = triangleRasterCtx

cubeVertexStream = Fetch "stream4" Triangles (Attribute "position4")
mapFragments s fs = Accumulate colorFragmentCtx PassAll (\a -> FragmentOut $ fs a) s clear
transform s f =  Transform (\v -> VertexOut (f v) 1 () ()) s

scale t v = v * V4 t t t 1
rotate :: Float -> Vec 4 Float -> Vec 4 Float
rotate a v = M44F (V4 c (-s) 0 0) (V4 s c 0 0) (V4 0 0 1 0) (V4 0 0 0 1) *. v
  where
    c = cos a
    s = sin a
const x y = x
x & f = f x



main =             cubeVertexStream      -- cube vertices
    `transform`    (scale 0.1 . rotate 3)             -- scale them
     &             rasterizeWith triangles   -- rasterize
    `mapFragments` const blue                -- set every pixel blue
     &             ScreenOut                 --  draw into screen
